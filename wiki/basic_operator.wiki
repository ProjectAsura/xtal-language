=演算子=

==加算演算子==
 _expr_ *`+`* _expr_

{{{
a + b
}}}

数値を加算した結果を返します。

これは、a.op_add(b)の省略形です。

==減算演算子==
 _expr_ *`-`* _expr_

{{{
a - b
}}}

aからbを減算した結果を返します。

これは、a.op_sub(b)の省略形です。

==連結演算子==
 _expr_ *`~`* _expr_

{{{
a ~ b
}}}

aとbを連結した値を返します。主に文字列や配列で有効な操作です。

これは、a.op_cat(b)の省略形です。

==乗算演算子==
 _expr_ *`*`* _expr_

{{{
a * b
}}}

aとbを乗算した結果を返します。

これは、a.op_mul(b)の省略形です。

==除算演算子==
 _expr_ *`/`* _expr_

{{{
a / b
}}}

aをbで割った結果を返します。

これは、a.op_div(b)の省略形です。

==余り演算子==
 _expr_ *`%`* _expr_

{{{
a % b
}}}

aをbで割った答えのあまりを返します。

これは、a.op_mod(b)の省略形です。

==bitwise and演算子==
 _expr_ *`&`* _expr_

{{{
a & b
}}}

aとbのbitwise andした結果を返します。

これは、a.op_and(b)の省略形です。

==bitwise or演算子==
 _expr_ *`|`* _expr_

{{{
a | b
}}}

aとbのbitwise orした結果を返します。

これは、a.op_or(b)の省略形です。

==bitwise xor演算子==
 _expr_ *`^`* _expr_

{{{
a ^ b
}}}

aとbのbitwise xorした結果を返します。

これは、a.op_xor(b)の省略形です。

==左シフト演算子==
 _expr_ *`<<`* _expr_

{{{
a << b
}}}

aをbビット左シフトした結果を返します。

これは、a.op_shl(b)の省略形です。

==算術右シフト演算子==
 _expr_ *`>>`* _expr_

{{{
a >> b
}}}

aをbビット右シフトした結果を返します。

これは、a.op_shr(b)の省略形です。


==論理的右シフト演算子==
 _expr_ *`>>>`* _expr_

{{{
a >>> b
}}}

aをbビット論理的右シフトした結果を返します。

これは、a.op_ushr(b)の省略形です。