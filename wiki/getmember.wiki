==メンバ取得演算子==
クラスの対応するメンバを取得するための演算子です。
 _expr_ *`::`* _ident_

{{{
Foo: class{
  test: 100;
}

Foo::test.p; //=> 100
}}}

== ::? 演算子==
クラスの対応するメンバを取得するための演算子です。こちらは、もし対応するメンバが無い場合にnopが返る演算子です。
 _expr_ *`::?`* _ident_
{{{
Foo::?member
}}}
Fooのmember要素を返します。もし存在しなければnopオブジェクトが代わりに返ってきます。

代わりに帰ってくるnopオブジェクトは色々な演算をスルーし、再び自身を返すので次のような記述が出来ます。
{{{
// Foo::memberは存在しないのでnopが返る。
// nopはhogeを持ってないけど、例外ではなくまたnopを返す
Foo::?member::hoge::boo;
}}}

nopは`===`演算子で比較することが出来ます。
{{{
if(Foo::?hoge === nop){
  // Foo::hogeが無いならここを通る
}else{
  // Foo::hogeがあるならここを通る
}
}}}