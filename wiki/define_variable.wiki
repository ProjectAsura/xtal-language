#summary 変数定義文

=ローカル変数定義=
 _ident_ *`:`* _expr_ *;*

{{{
name: "test";
}}}

この例ではnameという変数を作成し、"test"という初期値を参照させます。
初期値を伴わない変数の作成は出来ません。

変数には静的な型はなく、なんの種類のデータでも入れることが出来ます。

=メンバ定義文=
 _classexpr_ *`::`* _ident_ *`:`* _expr_ *;*

既存のクラスにメソッドなどを定義する構文です。
{{{
// 整数のクラスに自身を2倍の数を返すメソッドを追加
Integer::x2: method(){
  return this*2:
}

100.x2.p;
//=> 200
}}}

既に同名のメンバが定義されている場合、例外が発生します。
再定義は不可能です。

==多重変数定義==
多重変数定義も出来ます。
{{{
a, b: 0, 1;
}}}
aを0で初期化、bを1で初期化します。
もし右辺が左辺より少ない場合、右辺にはnullが補われます。

関数やメソッドは多値を返すことが出来、それは多重変数定義や多重変数代入で受け取れます。
{{{
foo: fun(){
  return 5, 10; // 5と10を返す
}
a, b: foo();
}}}
これでaを5で初期化、bを10で初期化します。