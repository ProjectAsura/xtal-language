#include "xtal.h"
#include "xtal_macro.h"

#include <stdio.h>

namespace xtal{

#ifndef XTAL_NO_PARSER

CodePtr compile_file(const StringPtr& file_name){
	CodeBuilder cb;
	StreamPtr fs = open(file_name, Xid(r));
	if(CodePtr fun = cb.compile(fs, file_name)){
		fs->close();
		return fun;
	}
	fs->close();

	XTAL_THROW(CompileError()->call(Xt("Xtal Runtime Error 1016")->call(Named(Xid(name), file_name)), cb.errors()->to_a()), return null);
}

CodePtr compile(const StringPtr& source){
	CodeBuilder cb;
	StringStreamPtr ms(xnew<StringStream>(source));
	if(CodePtr fun =  cb.compile(ms, "<eval>")){
		return fun;
	}

	XTAL_THROW(CompileError()->call(Xt("Xtal Runtime Error 1002"), cb.errors()->to_a()), return null);
}

AnyPtr load(const StringPtr& file_name){
	AnyPtr ret = compile_file(file_name)->call();
	gc();
	return ret;
}

AnyPtr load_and_save(const StringPtr& file_name){
	AnyPtr ret = compile_file(file_name);
	StreamPtr fs = open(file_name->cat(Xid(c)), Xid(w));
	fs->serialize(ret);
	fs->close();
	gc();
	return ret->call();
}

CodePtr source(const char_t* src, int_t size, const char* file){
	CodeBuilder cb;
	StreamPtr ms(xnew<PointerStream>(src, size));
	if(CodePtr fun = cb.compile(ms, file)){
		return fun;
	}

	XTAL_THROW(CompileError()->call(Xt("Xtal Runtime Error 1010")->call(), cb.errors()->to_a()), return null);
}

void ix(){
	CodeBuilder cb;
	cb.interactive_compile();
}

#endif

CodePtr compiled_source(const void* src, int_t size, const char* file){
	StreamPtr ms(xnew<PointerStream>(src, size));
	if(CodePtr fun = ptr_cast<Code>(ms->deserialize())){
		return fun;
	}
	return null;
}

static float_t clock_(){
	return std::clock()/(float_t)CLOCKS_PER_SEC;
}

void initialize_builtin(){

	builtin()->def(Xid(builtin), builtin());

	builtin()->def(Xid(Iterator), Iterator());
	builtin()->def(Xid(Iterable), Iterable());
	
#ifndef XTAL_NO_PARSER
	builtin()->fun(Xid(compile_file), &compile_file);
	builtin()->fun(Xid(compile), &compile);
#endif

	builtin()->fun(Xid(gc), &gc);
	builtin()->fun(Xid(full_gc), &full_gc);
	builtin()->fun(Xid(disable_gc), &disable_gc);
	builtin()->fun(Xid(enable_gc), &enable_gc);
	builtin()->fun(Xid(clock), &clock_);
	builtin()->fun(Xid(open), &open)->params(Xid(file_name), null, Xid(mode), Xid(r));
	builtin()->fun(Xid(interned_strings), &interned_strings);

	lib()->def(Xid(builtin), builtin());
	
	Xemb((

builtin::StandardError: class(Exception){}
builtin::RuntimeError: class(StandardError){}
builtin::IOError: class(StandardError){}
builtin::LogicError: class(StandardError){}
builtin::CastError: class(StandardError){}
builtin::ArgumentError: class(StandardError){}
builtin::YieldError: class(StandardError){}
builtin::InstanceVariableError: class(StandardError){}
builtin::UnsupportedError: class(StandardError){}
builtin::RedefinedError: class(StandardError){}
builtin::AccessibilityError: class(StandardError){}
builtin::AssertionFailed: class(StandardError){}
builtin::CompileError: class(StandardError){
initialize: method(message, errors:[]){
		Exception::initialize(%f"%s\n%s"(message, errors.join("\t\n")));
	}		
}		
	),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x01\x98\x39\x00\x01\x39\x00\x02\x81\x00\x00\x89\x00\x01\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37\x00\x05\x39\x00\x01\x39\x00\x05\x81\x00\x01\x89\x00\x02\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37"
"\x00\x07\x39\x00\x01\x39\x00\x05\x81\x00\x02\x89\x00\x03\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37\x00\x09\x39\x00\x01\x39\x00\x05\x81\x00\x03\x89\x00\x04\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37\x00\x0b\x39\x00\x01\x39\x00\x05\x81\x00"
"\x04\x89\x00\x05\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37\x00\x0d\x39\x00\x01\x39\x00\x05\x81\x00\x05\x89\x00\x06\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37\x00\x0f\x39\x00\x01\x39\x00\x05\x81\x00\x06\x89\x00\x07\x00\x04\x25\x00\x01\x83"
"\x00\x00\x00\x04\x00\x82\x37\x00\x11\x39\x00\x01\x39\x00\x05\x81\x00\x07\x89\x00\x08\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37\x00\x13\x39\x00\x01\x39\x00\x05\x81\x00\x08\x89\x00\x09\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37\x00\x15\x39"
"\x00\x01\x39\x00\x05\x81\x00\x09\x89\x00\x0a\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37\x00\x17\x39\x00\x01\x39\x00\x05\x81\x00\x0a\x89\x00\x0b\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37\x00\x19\x39\x00\x01\x39\x00\x05\x81\x00\x0b\x89\x00"
"\x0c\x00\x04\x25\x00\x01\x83\x00\x00\x00\x04\x00\x82\x37\x00\x1b\x39\x00\x01\x39\x00\x05\x81\x00\x0c\x89\x00\x0d\x00\x04\x25\x00\x01\x83\x00\x01\x00\x04\x00\x89\x00\x0e\x00\x2c\x53\x00\x00\x05\x84\x20\x00\x1d\x01\x28\x00\x01\x1d\x00\x2f\x01\x00\x01\x00\x00"
"\x20\x28\x00\x02\x2e\x02\x00\x01\x00\x39\x00\x02\x33\x00\x21\x2e\x01\x00\x00\x00\x25\x00\x01\x83\x00\x00\x00\x21\x00\x82\x37\x00\x22\x25\x00\x8b\x00\x0e\x0e\x00\x00\x00\x00\x00\x04\x00\x00\x00\x12\x00\x29\x00\x00\x00\x00\x00\x07\x00\x00\x00\x12\x00\x44\x00"
"\x00\x00\x00\x00\x09\x00\x00\x00\x12\x00\x5f\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x12\x00\x7a\x00\x00\x00\x00\x00\x0d\x00\x00\x00\x12\x00\x95\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x12\x00\xb0\x00\x00\x00\x00\x00\x11\x00\x00\x00\x12\x00\xcb\x00\x00\x00\x00\x00"
"\x13\x00\x00\x00\x12\x00\xe6\x00\x00\x00\x00\x00\x15\x00\x00\x00\x12\x00\x01\x01\x00\x00\x00\x00\x17\x00\x00\x00\x12\x00\x1c\x01\x00\x00\x00\x00\x19\x00\x00\x00\x12\x00\x37\x01\x00\x00\x00\x00\x1b\x00\x00\x00\x12\x00\x52\x01\x00\x00\x00\x00\x1e\x00\x00\x00"
"\x12\x00\x67\x01\x00\x00\x00\x01\x20\x00\x00\x00\x12\x00\x00\x0d\x06\x00\x00\x00\x01\x00\x03\x00\x01\x00\x7f\xc6\x04\x00\x00\x00\x01\xf4\x12\x00\x21\x00\x00\x00\x01\x00\x06\x00\x01\x00\x7f\xc6\x07\x00\x00\x00\x01\xf4\x12\x00\x3c\x00\x00\x00\x01\x00\x08\x00"
"\x01\x00\x7f\xc6\x09\x00\x00\x00\x01\xf4\x12\x00\x57\x00\x00\x00\x01\x00\x0a\x00\x01\x00\x7f\xc6\x0b\x00\x00\x00\x01\xf4\x12\x00\x72\x00\x00\x00\x01\x00\x0c\x00\x01\x00\x7f\xc6\x0d\x00\x00\x00\x01\xf4\x12\x00\x8d\x00\x00\x00\x01\x00\x0e\x00\x01\x00\x7f\xc6"
"\x0f\x00\x00\x00\x01\xf4\x12\x00\xa8\x00\x00\x00\x01\x00\x10\x00\x01\x00\x7f\xc6\x11\x00\x00\x00\x01\xf4\x12\x00\xc3\x00\x00\x00\x01\x00\x12\x00\x01\x00\x7f\xc6\x13\x00\x00\x00\x01\xf4\x12\x00\xde\x00\x00\x00\x01\x00\x14\x00\x01\x00\x7f\xc6\x15\x00\x00\x00"
"\x01\xf4\x12\x00\xf9\x00\x00\x00\x01\x00\x16\x00\x01\x00\x7f\xc6\x17\x00\x00\x00\x01\xf4\x12\x00\x14\x01\x00\x00\x01\x00\x18\x00\x01\x00\x7f\xc6\x19\x00\x00\x00\x01\xf4\x12\x00\x2f\x01\x00\x00\x01\x00\x1a\x00\x01\x00\x7f\xc6\x1b\x00\x00\x00\x01\xf4\x12\x00"
"\x4a\x01\x00\x00\x01\x00\x1c\x00\x02\x00\x7f\xc6\x1e\x00\x00\x00\x01\xc5\x43\x00\x00\x0f\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x0e\x00\x00\x00\x05\x00\x04\x00\x00\x00\x00\x00\x00\x01\x00\x00\x29\x00\x00\x00\x05\x00\x07\x00\x00\x00"
"\x00\x00\x00\x01\x00\x00\x44\x00\x00\x00\x05\x00\x09\x00\x00\x00\x00\x00\x00\x01\x00\x00\x5f\x00\x00\x00\x05\x00\x0b\x00\x00\x00\x00\x00\x00\x01\x00\x00\x7a\x00\x00\x00\x05\x00\x0d\x00\x00\x00\x00\x00\x00\x01\x00\x00\x95\x00\x00\x00\x05\x00\x0f\x00\x00\x00"
"\x00\x00\x00\x01\x00\x00\xb0\x00\x00\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x01\x00\x00\xcb\x00\x00\x00\x05\x00\x13\x00\x00\x00\x00\x00\x00\x01\x00\x00\xe6\x00\x00\x00\x05\x00\x15\x00\x00\x00\x00\x00\x00\x01\x00\x00\x01\x01\x00\x00\x05\x00\x17\x00\x00\x00"
"\x00\x00\x00\x01\x00\x00\x1c\x01\x00\x00\x05\x00\x19\x00\x00\x00\x00\x00\x00\x01\x00\x00\x37\x01\x00\x00\x05\x00\x1b\x00\x00\x00\x00\x00\x00\x01\x00\x00\x52\x01\x00\x00\x05\x00\x1e\x00\x00\x00\x00\x00\x00\x01\x00\x00\x60\x01\x00\x00\x05\x00\x1e\x00\x02\x00"
"\x00\x00\x00\x01\x01\x02\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x1b\x00\x00\x00\x04\x00\x00\x00\x36\x00\x00\x00\x05\x00\x00\x00\x51\x00\x00\x00\x06\x00\x00\x00\x6c\x00"
"\x00\x00\x07\x00\x00\x00\x87\x00\x00\x00\x08\x00\x00\x00\xa2\x00\x00\x00\x09\x00\x00\x00\xbd\x00\x00\x00\x0a\x00\x00\x00\xd8\x00\x00\x00\x0b\x00\x00\x00\xf3\x00\x00\x00\x0c\x00\x00\x00\x0e\x01\x00\x00\x0d\x00\x00\x00\x29\x01\x00\x00\x0e\x00\x00\x00\x44\x01"
"\x00\x00\x13\x00\x00\x00\x44\x01\x00\x00\x0f\x00\x00\x00\x47\x01\x00\x00\x13\x00\x00\x00\x47\x01\x00\x00\x0f\x00\x00\x00\x5b\x01\x00\x00\x12\x00\x00\x00\x64\x01\x00\x00\x10\x00\x00\x00\x67\x01\x00\x00\x12\x00\x00\x00\x67\x01\x00\x00\x11\x00\x00\x00\x88\x01"
"\x00\x00\x12\x00\x00\x00\x92\x01\x00\x00\x13\x00\x00\x00\x95\x01\x00\x00\x14\x00\x00\x00\x00\x01\x0b\x00\x00\x00\x03\x09\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x09\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x09\x00"
"\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x0a\x00\x00\x00\x23\x09\x00\x00\x00\x00\x09\x00\x00\x00\x07\x62\x75\x69\x6c\x74\x69\x6e\x09\x00\x00\x00\x09\x45\x78\x63\x65\x70\x74\x69\x6f\x6e\x09\x00\x00\x00\x0c\x5f\x69\x6e\x69\x74\x69\x61\x6c\x69"
"\x7a\x65\x5f\x02\x00\x00\x00\x09\x09\x00\x00\x00\x0d\x53\x74\x61\x6e\x64\x61\x72\x64\x45\x72\x72\x6f\x72\x02\x00\x00\x00\x09\x09\x00\x00\x00\x0c\x52\x75\x6e\x74\x69\x6d\x65\x45\x72\x72\x6f\x72\x02\x00\x00\x00\x09\x09\x00\x00\x00\x07\x49\x4f\x45\x72\x72\x6f"
"\x72\x02\x00\x00\x00\x09\x09\x00\x00\x00\x0a\x4c\x6f\x67\x69\x63\x45\x72\x72\x6f\x72\x02\x00\x00\x00\x09\x09\x00\x00\x00\x09\x43\x61\x73\x74\x45\x72\x72\x6f\x72\x02\x00\x00\x00\x09\x09\x00\x00\x00\x0d\x41\x72\x67\x75\x6d\x65\x6e\x74\x45\x72\x72\x6f\x72\x02"
"\x00\x00\x00\x09\x09\x00\x00\x00\x0a\x59\x69\x65\x6c\x64\x45\x72\x72\x6f\x72\x02\x00\x00\x00\x09\x09\x00\x00\x00\x15\x49\x6e\x73\x74\x61\x6e\x63\x65\x56\x61\x72\x69\x61\x62\x6c\x65\x45\x72\x72\x6f\x72\x02\x00\x00\x00\x09\x09\x00\x00\x00\x10\x55\x6e\x73\x75"
"\x70\x70\x6f\x72\x74\x65\x64\x45\x72\x72\x6f\x72\x02\x00\x00\x00\x09\x09\x00\x00\x00\x0e\x52\x65\x64\x65\x66\x69\x6e\x65\x64\x45\x72\x72\x6f\x72\x02\x00\x00\x00\x09\x09\x00\x00\x00\x12\x41\x63\x63\x65\x73\x73\x69\x62\x69\x6c\x69\x74\x79\x45\x72\x72\x6f\x72"
"\x02\x00\x00\x00\x09\x09\x00\x00\x00\x0f\x41\x73\x73\x65\x72\x74\x69\x6f\x6e\x46\x61\x69\x6c\x65\x64\x02\x00\x00\x00\x09\x09\x00\x00\x00\x0a\x69\x6e\x69\x74\x69\x61\x6c\x69\x7a\x65\x09\x00\x00\x00\x07\x6d\x65\x73\x73\x61\x67\x65\x09\x00\x00\x00\x06\x65\x72"
"\x72\x6f\x72\x73\x09\x00\x00\x00\x04\x6a\x6f\x69\x6e\x02\x00\x00\x00\x16\x09\x00\x00\x00\x0c\x43\x6f\x6d\x70\x69\x6c\x65\x45\x72\x72\x6f\x72\x09\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x0a\x00\x00\x00\x03\x03\x09\x00\x00\x00\x02\x09\x0a\x00\x09\x00\x00\x00"
"\x14\x6c\x69\x62\x3a\x3a\x62\x75\x69\x6c\x74\x69\x6e\x3a\x3a\x46\x6f\x72\x6d\x61\x74\x0b\x00\x00\x00\x02\x09\x00\x00\x00\x11\x6c\x69\x62\x3a\x3a\x62\x75\x69\x6c\x74\x69\x6e\x3a\x3a\x41\x6e\x79\x03\x02\x00\x00\x00\x1f\x09\x00\x00\x00\x05\x25\x73\x0a\x25\x73"
""
)->call();

	Xemb((
		lib.append_load_path(".");
	),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x00\x10\x28\x00\x01\x39\x00\x01\x2f\x01\x00\x00\x00\x00\x02\x25\x00\x8b\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\x00\x03\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x0d\x00\x00\x00\x03\x00\x00\x00\x00\x01\x0b\x00\x00\x00\x03\x09\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x09\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74"
"\x61\x6c\x09\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x0a\x00\x00\x00\x03\x09\x00\x00\x00\x00\x09\x00\x00\x00\x03\x6c\x69\x62\x09\x00\x00\x00\x10\x61\x70\x70\x65\x6e\x64\x5f\x6c\x6f\x61\x64\x5f\x70\x61\x74\x68\x09\x00\x00\x00\x06\x76\x61"
"\x6c\x75\x65\x73\x0a\x00\x00\x00\x02\x03\x09\x00\x00\x00\x01\x2e"
)->call();

	Xemb((

builtin::print: fun(...){
	....ordered_arguments{
		stdout.put_s(it.to_s);
	}
}

builtin::println: fun(...){
	print(...);
	print("\n");
}

builtin::load: fun(file_name, ...){
	code: compile_file(file_name);
	return code(...);
}

	),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x00\xc4\x39\x00\x01\x89\x00\x01\x00\x70\x3f\x00\x01\x0a\x2a\x00\x04\x2f\x00\x00\x02\x00\x00\x05\x20\x00\x20\x01\x42\x00\x01\x1d\x01\x13\x00\x26\x1d\x00\x2a\x00\x06\x39\x00\x07\x2f\x01\x00\x00\x00\x00\x08\x1d\x01\x2f"
"\x00\x00\x02\x00\x00\x09\x20\x00\x20\x01\x1d\x01\x13\x00\x05\x15\xff\xde\x44\x00\x2a\x43\x42\x00\x02\x3f\x00\x04\x20\x00\x1d\x00\x1d\x02\x31\x01\x00\x01\x00\x00\x0b\x14\x00\x05\x1d\x00\x8b\x41\x00\x04\x43\x1d\x01\x31\x00\x00\x00\x00\x00\x0c\x45\x41\x00\x01"
"\x25\x00\x37\x00\x0d\x39\x00\x01\x89\x00\x02\x00\x18\x0a\x39\x00\x0d\x2e\x00\x00\x00\x02\x28\x00\x01\x39\x00\x0d\x2e\x01\x00\x00\x00\x25\x00\x37\x00\x0e\x39\x00\x01\x89\x00\x03\x00\x1e\x3f\x00\x06\x1d\x01\x39\x00\x11\x2e\x01\x00\x01\x00\x20\x00\x0a\x1d\x00"
"\x2e\x00\x00\x01\x03\x41\x00\x06\x25\x00\x37\x00\x12\x25\x00\x8b\x00\x07\x08\x00\x00\x00\x00\x00\x02\x00\x00\x00\x12\x00\x08\x00\x00\x00\x00\x00\x02\x00\x02\x00\x12\x00\x1d\x00\x00\x00\x00\x01\x06\x00\x00\x00\x12\x00\x22\x00\x00\x00\x00\x01\x06\x00\x00\x00"
"\x12\x00\x4d\x00\x00\x00\x00\x01\x0a\x00\x01\x00\x12\x00\x81\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x12\x00\xa2\x00\x00\x00\x00\x01\x10\x00\x01\x00\x12\x00\x00\x00\x00\x04\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x08\x00\x00\x00\x03\x02"
"\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x81\x00\x00\x00\x03\x02\x0e\x00\x00\x00\x00\x00\x00\x01\x00\x00\xa2\x00\x00\x00\x03\x02\x0f\x00\x01\x00\x00\x00\x00\x01\x01\x01\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x4a\x00\x00\x00\x67\x00\x00\x00"
"\x71\x00\x00\x00\x00\x00\x00\x00\x67\x00\x00\x00\x67\x00\x00\x00\x00\x19\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x07\x00\x00\x00\x0b\x00\x00\x00\x04\x00\x00\x00\x1a\x00\x00\x00\x07\x00"
"\x00\x00\x1d\x00\x00\x00\x04\x00\x00\x00\x22\x00\x00\x00\x06\x00\x00\x00\x22\x00\x00\x00\x05\x00\x00\x00\x31\x00\x00\x00\x06\x00\x00\x00\x31\x00\x00\x00\x04\x00\x00\x00\x46\x00\x00\x00\x07\x00\x00\x00\x79\x00\x00\x00\x0c\x00\x00\x00\x79\x00\x00\x00\x09\x00"
"\x00\x00\x7c\x00\x00\x00\x0c\x00\x00\x00\x81\x00\x00\x00\x0a\x00\x00\x00\x8a\x00\x00\x00\x0b\x00\x00\x00\x95\x00\x00\x00\x0c\x00\x00\x00\x9a\x00\x00\x00\x11\x00\x00\x00\x9a\x00\x00\x00\x0e\x00\x00\x00\x9d\x00\x00\x00\x11\x00\x00\x00\xa5\x00\x00\x00\x0f\x00"
"\x00\x00\xb1\x00\x00\x00\x10\x00\x00\x00\xbc\x00\x00\x00\x11\x00\x00\x00\xc1\x00\x00\x00\x13\x00\x00\x00\x00\x01\x0b\x00\x00\x00\x03\x09\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x09\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74"
"\x61\x6c\x09\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x0a\x00\x00\x00\x13\x09\x00\x00\x00\x00\x09\x00\x00\x00\x07\x62\x75\x69\x6c\x74\x69\x6e\x09\x00\x00\x00\x08\x69\x74\x65\x72\x61\x74\x6f\x72\x09\x00\x00\x00\x02\x69\x74\x09\x00\x00\x00"
"\x11\x6f\x72\x64\x65\x72\x65\x64\x5f\x61\x72\x67\x75\x6d\x65\x6e\x74\x73\x09\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x09\x00\x00\x00\x04\x74\x6f\x5f\x73\x09\x00\x00\x00\x06\x73\x74\x64\x6f\x75\x74\x09\x00\x00\x00\x05\x70\x75\x74\x5f\x73"
"\x09\x00\x00\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74\x09\x00\x00\x00\x01\x65\x09\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x63\x61\x74\x63\x68\x09\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x62\x72\x65\x61\x6b\x09\x00\x00\x00\x05\x70\x72\x69\x6e\x74\x09"
"\x00\x00\x00\x07\x70\x72\x69\x6e\x74\x6c\x6e\x09\x00\x00\x00\x09\x66\x69\x6c\x65\x5f\x6e\x61\x6d\x65\x09\x00\x00\x00\x04\x63\x6f\x64\x65\x09\x00\x00\x00\x0c\x63\x6f\x6d\x70\x69\x6c\x65\x5f\x66\x69\x6c\x65\x09\x00\x00\x00\x04\x6c\x6f\x61\x64\x09\x00\x00\x00"
"\x06\x76\x61\x6c\x75\x65\x73\x0a\x00\x00\x00\x02\x03\x09\x00\x00\x00\x01\x0a"
)->call();

	Xemb((




	),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x00\x03\x25\x00\x8b\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x06\x00\x00\x00\x00\x01\x0b"
"\x00\x00\x00\x03\x09\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x09\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x09\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x0a\x00\x00\x00\x01\x09\x00\x00\x00\x00\x09"
"\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x0a\x00\x00\x00\x01\x03"
)->call();

}

}
