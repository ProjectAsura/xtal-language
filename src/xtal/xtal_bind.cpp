#include "xtal.h"
#include "xtal_macro.h"

#include "xtal_stringspace.h"

namespace xtal{

namespace{

void Iterator_each(const VMachinePtr& vm){
	vm->return_result(vm->arg_this());
}

void Iterator_block_first(const VMachinePtr& vm){
	vm->arg_this()->rawsend(vm, Xid(block_next));
}

}

class Procedure : public Base{
public:

	Procedure(){
		block_ = xnew<VMachine>();
		state_ = 0;
	}

	void block_first(const VMachinePtr& vm){
		if(state_==0){
			block_->assign(vm);
			vm->return_result(null);
			state_ = 1;
		}
	}

	void block_next(const VMachinePtr& vm){
		if(state_==2){
			swap(*block_, *vm);
			vm->return_result();
			state_ = 1;
		}
	}

	void rawcall(const VMachinePtr& vm){
		if(state_==1){
			swap(*block_, *vm);
			vm->prereturn_result(to_smartptr(this));
			vm->return_result_args(block_);
			state_ = 2;
			return;
		}
	}

	void visit_members(Visitor& m){
		Base::visit_members(m);
		m & block_;
	}

private:
	VMachinePtr block_;
	int_t state_;
};

XTAL_PREBIND(StringEachIter){
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(StringEachIter){
	it->def_method(Xid(block_next), &StringEachIter::block_next);
}

XTAL_PREBIND(ChRangeIter){
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(ChRangeIter){
	it->def_method(Xid(block_next), &ChRangeIter::block_next);
}

XTAL_PREBIND(ChRange){
	it->inherit(cpp_class<Range>());
}

XTAL_BIND(ChRange){
	it->def_ctor(ctor<ChRange, const StringPtr&, const StringPtr&>());
	it->def_method(Xid(each), &ChRange::each);
}

XTAL_PREBIND(MultiValue){
	it->set_final();
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(MultiValue){
	it->def_method(Xid(block_next), &MultiValue::block_next);
	it->def_method(Xid(at), &MultiValue::at);
	it->def_method(Xid(size), &MultiValue::size);

	Xemb((
MultiValue::to_s: method{
	return %f((%s))(this.join(", "));
}
	),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x00\x24\x6c\x00\x01\x79\x00\x01\x00\x17\x2a\x00\x01\x0c\x2f\x01\x00\x01\x00\x00\x02\x2a\x00\x02\x2e\x01\x00\x01\x01\x27\x00\x31\x00\x03\x00\x27\x00\x7b\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x61\x00\x08\x00"
"\x00\x00\x00\x00\x02\x00\x00\x00\x12\x00\x00\x00\x00\x02\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00"
"\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00\x08\x00\x00\x00\x03\x00\x00\x00\x1b\x00\x00\x00\x04\x00\x00\x00\x21\x00\x00\x00\x05\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00"
"\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x04\x27\x00\x00\x00\x00\x27\x00\x00\x00\x0a\x4d\x75\x6c"
"\x74\x69\x56\x61\x6c\x75\x65\x27\x00\x00\x00\x04\x6a\x6f\x69\x6e\x27\x00\x00\x00\x04\x74\x6f\x5f\x73\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x03\x20\x27\x00\x00\x00\x02\x2c\x20\x00\x01\x28\x00\x00\x00\x03\x29\x27\x00\x00\x00\x03\x6c\x69"
"\x62\x29\x20\x20\x29\x27\x00\x00\x00\x07\x62\x75\x69\x6c\x74\x69\x6e\x29\x20\x20\x29\x27\x00\x00\x00\x06\x46\x6f\x72\x6d\x61\x74\x29\x20\x20\x2a\x00\x00\x00\x02\x01\x28\x00\x00\x00\x03\x29\x03\x00\x00\x00\x11\x29\x20\x20\x29\x03\x00\x00\x00\x14\x29\x20\x20"
"\x29\x27\x00\x00\x00\x03\x41\x6e\x79\x29\x20\x20\x20\x03\x00\x00\x00\x0e\x26\x00\x00\x00\x04\x28\x25\x73\x29"
);
}

XTAL_PREBIND(Procedure){
	it->def_ctor(ctor<Procedure>());
}

XTAL_BIND(Procedure){
	it->def_method(Xid(block_first), &Procedure::block_first);
	it->def_method(Xid(block_next), &Procedure::block_next);
	it->def_method(Xid(block_break), &Procedure::block_next);
	it->def_method(Xid(block_catch), &Procedure::block_next);
	it->def_method(Xid(op_call), &Procedure::rawcall);
}

XTAL_PREBIND(String){
	it->set_final();
	it->inherit(cpp_class<Iterable>());
}

XTAL_BIND(String){
	it->def_method(Xid(to_i), &String::to_i);
	it->def_method(Xid(to_f), &String::to_f);
	it->def_method(Xid(to_s), &String::to_s);
	it->def_method(Xid(clone), &String::clone);
	it->def_method(Xid(length), &String::length);
	it->def_method(Xid(intern), &String::intern);
	it->def_method(Xid(each), &String::each);
	it->def_method(Xid(op_range), &String::op_range, cpp_class<String>());
	it->def_method(Xid(op_cat), &String::op_cat, cpp_class<String>());
	it->def_method(Xid(op_cat_assign), &String::op_cat, cpp_class<String>());
	it->def_method(Xid(op_eq), &String::op_eq, cpp_class<String>());
	it->def_method(Xid(op_lt), &String::op_lt, cpp_class<String>());

	Xemb((

String::scan: method(pattern){
	return StringStream(this).scan(pattern);
}

String::split: method(pattern){
	return StringStream(this).split(pattern);
}

String::match: method(pattern){
	return StringStream(this).match(pattern);
}

String::gsub: method(pattern, fn){
	mm: MemoryStream();
	exec: xpeg::Executor(StringStream(this));
	if(exec.match(pattern)){
		prefix: exec.prefix;
		mm.put_s(prefix);
		ordered: [exec[""]];
		ordered.concat(exec.captures);
		named: exec.named_captures[:];
		named["prefix"] = prefix;
		mm.put_s(fn(...Arguments(ordered, named)));

		while(exec.match(pattern)){
			prefix: exec.prefix;
			mm.put_s(prefix);
			ordered: [exec[""]];
			ordered.concat(exec.captures);
			named: exec.named_captures[:];
			named["prefix"] = prefix;
			mm.put_s(fn(...Arguments(ordered, named)));
		}
		mm.put_s(exec.suffix);
		return mm.to_s;
	}
	else{
		return this;
	}
}

String::sub: method(pattern, fn){
	mm: MemoryStream();
	exec: xpeg::Executor(StringStream(this));
	if(exec.match(pattern)){
		prefix: exec.prefix;
		suffix: exec.suffix;
		mm.put_s(prefix);
		ordered: [exec[""]];
		ordered.concat(exec.captures);
		named: exec.named_captures[:];
		named["prefix"] = prefix;
		named["suffix"] = suffix;
		mm.put_s(fn(...Arguments(ordered, named)));
		mm.put_s(exec.suffix);
		return mm.to_s;
	}
	else{
		return this;
	}
}

),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x02\x80\x6c\x00\x01\x79\x00\x01\x00\x16\x1b\x00\x0c\x6c\x00\x03\x2e\x01\x00\x01\x00\x2f\x01\x00\x01\x01\x00\x04\x27\x00\x31\x00\x04\x00\x6c\x00\x01\x79\x00\x02\x00\x16\x1b\x00\x0c\x6c\x00\x03\x2e\x01\x00\x01\x00\x2f"
"\x01\x00\x01\x01\x00\x06\x27\x00\x31\x00\x06\x00\x6c\x00\x01\x79\x00\x03\x00\x16\x1b\x00\x0c\x6c\x00\x03\x2e\x01\x00\x01\x00\x2f\x01\x00\x01\x01\x00\x08\x27\x00\x31\x00\x08\x00\x6c\x00\x01\x79\x00\x04\x01\x3d\x33\x00\x04\x6c\x00\x0d\x2e\x00\x00\x01\x00\x22"
"\x01\x0c\x6c\x00\x03\x2e\x01\x00\x01\x00\x6c\x00\x0e\x30\x00\x0f\x00\x2e\x01\x00\x01\x00\x22\x00\x1b\x03\x1b\x00\x2f\x01\x00\x01\x00\x00\x08\x3a\x01\x00\x33\x00\x05\x1b\x03\x2c\x00\x13\x01\x22\x02\x1b\x02\x1b\x04\x2f\x01\x00\x00\x00\x00\x14\x74\x1b\x03\x2a"
"\x00\x01\x4f\x75\x22\x01\x1b\x03\x2c\x00\x15\x01\x1b\x01\x2f\x01\x00\x00\x00\x00\x16\x1b\x03\x2c\x00\x17\x01\x2c\x00\x18\x01\x22\x00\x1b\x02\x1b\x00\x2a\x00\x02\x50\x1b\x01\x1b\x00\x6c\x00\x19\x2e\x02\x00\x01\x00\x1b\x05\x2e\x00\x00\x01\x02\x1b\x04\x2f\x01"
"\x00\x00\x00\x00\x14\x1b\x06\x1b\x03\x2f\x01\x00\x01\x00\x00\x08\x3a\x00\x75\x33\x00\x07\x1b\x06\x2c\x00\x13\x01\x22\x02\x1b\x02\x1b\x07\x2f\x01\x00\x00\x00\x00\x14\x74\x1b\x06\x2a\x00\x01\x4f\x75\x22\x01\x1b\x06\x2c\x00\x15\x01\x1b\x01\x2f\x01\x00\x00\x00"
"\x00\x16\x1b\x06\x2c\x00\x17\x01\x2c\x00\x18\x01\x22\x00\x1b\x02\x1b\x00\x2a\x00\x02\x50\x1b\x01\x1b\x00\x6c\x00\x19\x2e\x02\x00\x01\x00\x1b\x08\x2e\x00\x00\x01\x02\x1b\x07\x2f\x01\x00\x00\x00\x00\x14\x35\x00\x07\x1b\x06\x1b\x03\x2f\x01\x00\x01\x00\x00\x08"
"\x3a\x00\x05\x3c\xff\x8f\x1b\x03\x2c\x00\x1d\x01\x1b\x04\x2f\x01\x00\x00\x00\x00\x14\x1b\x04\x2f\x00\x00\x01\x01\x00\x1e\x35\x00\x05\x3c\x00\x08\x0c\x35\x00\x04\x27\x01\x35\x00\x04\x27\x00\x31\x00\x1f\x00\x6c\x00\x01\x79\x00\x05\x00\xcc\x33\x00\x09\x6c\x00"
"\x0d\x2e\x00\x00\x01\x00\x22\x01\x0c\x6c\x00\x03\x2e\x01\x00\x01\x00\x6c\x00\x0e\x30\x00\x0f\x00\x2e\x01\x00\x01\x00\x22\x00\x1b\x03\x1b\x00\x2f\x01\x00\x01\x00\x00\x08\x3a\x00\x8f\x33\x00\x0a\x1b\x04\x2c\x00\x13\x01\x22\x03\x1b\x04\x2c\x00\x1d\x01\x22\x02"
"\x1b\x03\x1b\x05\x2f\x01\x00\x00\x00\x00\x14\x74\x1b\x04\x2a\x00\x01\x4f\x75\x22\x01\x1b\x04\x2c\x00\x15\x01\x1b\x01\x2f\x01\x00\x00\x00\x00\x16\x1b\x04\x2c\x00\x17\x01\x2c\x00\x18\x01\x22\x00\x1b\x03\x1b\x00\x2a\x00\x02\x50\x1b\x02\x1b\x00\x2a\x00\x03\x50"
"\x1b\x01\x1b\x00\x6c\x00\x19\x2e\x02\x00\x01\x00\x1b\x06\x2e\x00\x00\x01\x02\x1b\x05\x2f\x01\x00\x00\x00\x00\x14\x1b\x04\x2c\x00\x1d\x01\x1b\x05\x2f\x01\x00\x00\x00\x00\x14\x1b\x05\x2f\x00\x00\x01\x01\x00\x1e\x35\x00\x0a\x3c\x00\x08\x0c\x35\x00\x09\x27\x01"
"\x35\x00\x09\x27\x00\x31\x00\x28\x00\x27\x00\x7b\x00\x0c\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x62\x00\x08\x00\x00\x00\x00\x01\x03\x00\x00\x00\x12\x00\x28\x00\x00\x00\x00\x01\x06\x00\x00\x00\x12\x00\x48\x00\x00\x00\x00\x01\x08\x00\x00\x00\x12\x00\x68\x00"
"\x00\x00\x00\x01\x0b\x00\x02\x00\x12\x00\x9a\x00\x00\x00\x00\x01\x10\x00\x03\x00\x12\x00\xf9\x00\x00\x00\x00\x01\x1a\x00\x00\x00\x12\x00\x07\x01\x00\x00\x00\x01\x1a\x00\x03\x00\x12\x00\x98\x01\x00\x00\x00\x00\x1f\x00\x00\x00\x12\x00\xaf\x01\x00\x00\x00\x01"
"\x22\x00\x02\x00\x12\x00\xe1\x01\x00\x00\x00\x01\x24\x00\x04\x00\x12\x00\x6e\x02\x00\x00\x00\x00\x28\x00\x00\x00\x12\x00\x00\x00\x00\x06\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x01\x00\x00\x00\x00\x01"
"\x01\x01\x28\x00\x00\x00\x05\x00\x05\x00\x01\x00\x00\x00\x00\x01\x01\x01\x48\x00\x00\x00\x05\x00\x07\x00\x01\x00\x00\x00\x00\x01\x01\x01\x68\x00\x00\x00\x05\x00\x09\x00\x02\x00\x00\x00\x00\x01\x02\x02\xaf\x01\x00\x00\x05\x00\x20\x00\x02\x00\x00\x00\x00\x01"
"\x02\x02\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x4b\x00\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x05\x00\x00\x00\x08\x00\x00\x00\x04\x00\x00\x00\x1a\x00\x00\x00\x05\x00"
"\x00\x00\x20\x00\x00\x00\x09\x00\x00\x00\x20\x00\x00\x00\x07\x00\x00\x00\x23\x00\x00\x00\x09\x00\x00\x00\x28\x00\x00\x00\x08\x00\x00\x00\x3a\x00\x00\x00\x09\x00\x00\x00\x40\x00\x00\x00\x0d\x00\x00\x00\x40\x00\x00\x00\x0b\x00\x00\x00\x43\x00\x00\x00\x0d\x00"
"\x00\x00\x48\x00\x00\x00\x0c\x00\x00\x00\x5a\x00\x00\x00\x0d\x00\x00\x00\x60\x00\x00\x00\x2a\x00\x00\x00\x60\x00\x00\x00\x0f\x00\x00\x00\x63\x00\x00\x00\x2a\x00\x00\x00\x6b\x00\x00\x00\x10\x00\x00\x00\x75\x00\x00\x00\x11\x00\x00\x00\x8c\x00\x00\x00\x29\x00"
"\x00\x00\x8c\x00\x00\x00\x12\x00\x00\x00\x9a\x00\x00\x00\x26\x00\x00\x00\x9d\x00\x00\x00\x13\x00\x00\x00\xa5\x00\x00\x00\x14\x00\x00\x00\xb0\x00\x00\x00\x15\x00\x00\x00\xba\x00\x00\x00\x16\x00\x00\x00\xc9\x00\x00\x00\x17\x00\x00\x00\xd5\x00\x00\x00\x18\x00"
"\x00\x00\xdd\x00\x00\x00\x19\x00\x00\x00\xf9\x00\x00\x00\x24\x00\x00\x00\xf9\x00\x00\x00\x1b\x00\x00\x00\x07\x01\x00\x00\x23\x00\x00\x00\x0a\x01\x00\x00\x1c\x00\x00\x00\x12\x01\x00\x00\x1d\x00\x00\x00\x1d\x01\x00\x00\x1e\x00\x00\x00\x27\x01\x00\x00\x1f\x00"
"\x00\x00\x36\x01\x00\x00\x20\x00\x00\x00\x42\x01\x00\x00\x21\x00\x00\x00\x4a\x01\x00\x00\x22\x00\x00\x00\x69\x01\x00\x00\x23\x00\x00\x00\x69\x01\x00\x00\x1b\x00\x00\x00\x7a\x01\x00\x00\x24\x00\x00\x00\x89\x01\x00\x00\x25\x00\x00\x00\x95\x01\x00\x00\x26\x00"
"\x00\x00\x98\x01\x00\x00\x29\x00\x00\x00\x98\x01\x00\x00\x28\x00\x00\x00\x9e\x01\x00\x00\x29\x00\x00\x00\xa1\x01\x00\x00\x2a\x00\x00\x00\xa7\x01\x00\x00\x3f\x00\x00\x00\xa7\x01\x00\x00\x2c\x00\x00\x00\xaa\x01\x00\x00\x3f\x00\x00\x00\xb2\x01\x00\x00\x2d\x00"
"\x00\x00\xbc\x01\x00\x00\x2e\x00\x00\x00\xd3\x01\x00\x00\x3e\x00\x00\x00\xd3\x01\x00\x00\x2f\x00\x00\x00\xe1\x01\x00\x00\x3b\x00\x00\x00\xe4\x01\x00\x00\x30\x00\x00\x00\xec\x01\x00\x00\x31\x00\x00\x00\xf4\x01\x00\x00\x32\x00\x00\x00\xff\x01\x00\x00\x33\x00"
"\x00\x00\x09\x02\x00\x00\x34\x00\x00\x00\x18\x02\x00\x00\x35\x00\x00\x00\x24\x02\x00\x00\x36\x00\x00\x00\x2c\x02\x00\x00\x37\x00\x00\x00\x34\x02\x00\x00\x38\x00\x00\x00\x50\x02\x00\x00\x39\x00\x00\x00\x5f\x02\x00\x00\x3a\x00\x00\x00\x6b\x02\x00\x00\x3b\x00"
"\x00\x00\x6e\x02\x00\x00\x3e\x00\x00\x00\x6e\x02\x00\x00\x3d\x00\x00\x00\x74\x02\x00\x00\x3e\x00\x00\x00\x77\x02\x00\x00\x3f\x00\x00\x00\x7d\x02\x00\x00\x41\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00\x00"
"\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x29\x27\x00\x00\x00\x00\x27\x00\x00\x00\x06\x53\x74\x72\x69\x6e\x67\x27\x00\x00\x00\x07\x70\x61\x74\x74"
"\x65\x72\x6e\x27\x00\x00\x00\x0c\x53\x74\x72\x69\x6e\x67\x53\x74\x72\x65\x61\x6d\x27\x00\x00\x00\x04\x73\x63\x61\x6e\x03\x00\x00\x00\x08\x27\x00\x00\x00\x05\x73\x70\x6c\x69\x74\x03\x00\x00\x00\x08\x27\x00\x00\x00\x05\x6d\x61\x74\x63\x68\x03\x00\x00\x00\x08"
"\x27\x00\x00\x00\x02\x66\x6e\x27\x00\x00\x00\x02\x6d\x6d\x27\x00\x00\x00\x04\x65\x78\x65\x63\x27\x00\x00\x00\x0c\x4d\x65\x6d\x6f\x72\x79\x53\x74\x72\x65\x61\x6d\x27\x00\x00\x00\x04\x78\x70\x65\x67\x27\x00\x00\x00\x08\x45\x78\x65\x63\x75\x74\x6f\x72\x27\x00"
"\x00\x00\x06\x70\x72\x65\x66\x69\x78\x27\x00\x00\x00\x07\x6f\x72\x64\x65\x72\x65\x64\x27\x00\x00\x00\x05\x6e\x61\x6d\x65\x64\x03\x00\x00\x00\x13\x27\x00\x00\x00\x05\x70\x75\x74\x5f\x73\x27\x00\x00\x00\x08\x63\x61\x70\x74\x75\x72\x65\x73\x27\x00\x00\x00\x06"
"\x63\x6f\x6e\x63\x61\x74\x27\x00\x00\x00\x0e\x6e\x61\x6d\x65\x64\x5f\x63\x61\x70\x74\x75\x72\x65\x73\x27\x00\x00\x00\x07\x6f\x70\x5f\x74\x6f\x5f\x6d\x27\x00\x00\x00\x09\x41\x72\x67\x75\x6d\x65\x6e\x74\x73\x03\x00\x00\x00\x13\x03\x00\x00\x00\x14\x03\x00\x00"
"\x00\x15\x27\x00\x00\x00\x06\x73\x75\x66\x66\x69\x78\x27\x00\x00\x00\x04\x74\x6f\x5f\x73\x27\x00\x00\x00\x04\x67\x73\x75\x62\x03\x00\x00\x00\x08\x03\x00\x00\x00\x0d\x03\x00\x00\x00\x0e\x03\x00\x00\x00\x0f\x03\x00\x00\x00\x13\x03\x00\x00\x00\x1c\x03\x00\x00"
"\x00\x14\x03\x00\x00\x00\x15\x27\x00\x00\x00\x03\x73\x75\x62\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x04\x20\x03\x00\x00\x00\x06\x03\x00\x00\x00\x13\x03\x00\x00\x00\x1c"
);

}

XTAL_PREBIND(InternedStringIter){
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(InternedStringIter){
	it->def_method(Xid(block_next), &InternedStringIter::block_next);
}

XTAL_BIND(Any){
	it->def_method(Xid(class), &Any::get_class);
	it->def_method(Xid(get_class), &Any::get_class);
	it->def_method(Xid(self), &Any::self);
	it->def_method(Xid(object_name), &Any::object_name);
	it->def_method(Xid(object_name_list), &Any::object_name_list);
	it->def_method(Xid(s_save), &Any::s_save);
	it->def_method(Xid(s_load), &Any::s_load);

	it->def_double_dispatch_method(Xid(op_add));
	it->def_double_dispatch_method(Xid(op_sub));
	it->def_double_dispatch_method(Xid(op_cat));
	it->def_double_dispatch_method(Xid(op_mul));
	it->def_double_dispatch_method(Xid(op_div));
	it->def_double_dispatch_method(Xid(op_mod));
	it->def_double_dispatch_method(Xid(op_and));
	it->def_double_dispatch_method(Xid(op_or));
	it->def_double_dispatch_method(Xid(op_xor));
	it->def_double_dispatch_method(Xid(op_shr));
	it->def_double_dispatch_method(Xid(op_shl));
	it->def_double_dispatch_method(Xid(op_ushr));

	it->def_double_dispatch_method(Xid(op_add_assign));
	it->def_double_dispatch_method(Xid(op_sub_assign));
	it->def_double_dispatch_method(Xid(op_cat_assign));
	it->def_double_dispatch_method(Xid(op_mul_assign));
	it->def_double_dispatch_method(Xid(op_div_assign));
	it->def_double_dispatch_method(Xid(op_mod_assign));
	it->def_double_dispatch_method(Xid(op_and_assign));
	it->def_double_dispatch_method(Xid(op_or_assign));
	it->def_double_dispatch_method(Xid(op_xor_assign));
	it->def_double_dispatch_method(Xid(op_shr_assign));
	it->def_double_dispatch_method(Xid(op_shl_assign));
	it->def_double_dispatch_method(Xid(op_ushr_assign));
	it->def_double_dispatch_method(Xid(op_eq));
	it->def_double_dispatch_method(Xid(op_lt));
	it->def_double_dispatch_method(Xid(op_at));
	it->def_double_dispatch_method(Xid(op_set_at));
	it->def_double_dispatch_method(Xid(op_call));
	it->def_double_dispatch_method(Xid(op_range));
	it->def_double_dispatch_method(Xid(op_in));

	Xemb((
Any::op_in#Array: method(values){
	values{
		if(it==this){
			return true;
		}
	}
	return false;
}

Any::op_in#Set: method(values){
	return values[v];
}

Any::to_s: method{
	return %f!<%s>!(this.object_name);
}

Any::p: method{
	println(this.to_s);
	return this;
}

Any::to_a: method this.op_to_a;
Any::to_m: method this.op_to_m;
),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x00\xfd\x6c\x00\x01\x79\x00\x01\x00\x6f\x33\x00\x02\x1b\x02\x2c\x00\x05\x02\x22\x00\x22\x01\x36\x00\x01\x1b\x01\x3a\x00\x27\x1b\x00\x0c\x3d\x00\x0f\x3a\x00\x0c\x03\x38\x00\x03\x37\x35\x00\x02\x27\x01\x1b\x01\x2c\x00"
"\x06\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xdd\x38\x00\x2a\x37\x36\x00\x02\x33\x00\x06\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x08\x3b\x00\x05\x1b\x00\x7b\x35\x00\x06\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x09\x39\x35\x00\x02\x04\x27\x01\x27"
"\x00\x6c\x00\x0b\x31\x00\x0a\x04\x6c\x00\x01\x79\x00\x02\x00\x0c\x1b\x00\x6c\x00\x0d\x4f\x27\x01\x27\x00\x6c\x00\x0e\x31\x00\x0a\x04\x6c\x00\x01\x79\x00\x03\x00\x11\x0c\x2c\x00\x0f\x01\x2a\x00\x01\x2e\x01\x00\x01\x01\x27\x00\x31\x00\x10\x00\x6c\x00\x01\x79"
"\x00\x04\x00\x14\x0c\x2c\x00\x10\x01\x6c\x00\x11\x2e\x01\x00\x00\x00\x0c\x27\x01\x27\x00\x31\x00\x12\x00\x6c\x00\x01\x79\x00\x05\x00\x0c\x0c\x2f\x00\x00\x01\x01\x00\x13\x27\x00\x31\x00\x14\x00\x6c\x00\x01\x79\x00\x06\x00\x0c\x0c\x2f\x00\x00\x01\x01\x00\x15"
"\x27\x00\x31\x00\x16\x00\x27\x00\x7b\x00\x0a\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x61\x00\x08\x00\x00\x00\x00\x01\x03\x00\x00\x00\x12\x00\x08\x00\x00\x00\x00\x01\x03\x00\x02\x00\x12\x00\x18\x00\x00\x00\x00\x01\x06\x00\x00\x00\x12\x00\x1d\x00\x00\x00\x00"
"\x01\x06\x00\x00\x00\x12\x00\x26\x00\x00\x00\x00\x00\x06\x00\x00\x00\x12\x00\x49\x00\x00\x00\x00\x01\x07\x00\x01\x00\x12\x00\x84\x00\x00\x00\x00\x01\x0d\x00\x00\x00\x12\x00\x9d\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x12\x00\xb8\x00\x00\x00\x00\x00\x11\x00\x00"
"\x00\x12\x00\x00\x00\x00\x07\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x01\x00\x00\x00\x00\x01\x01\x01\x84\x00\x00\x00\x05\x00\x0c\x00\x01\x00\x00\x00\x00\x01\x01\x01\x9d\x00\x00\x00\x05\x00\x0f\x00\x00"
"\x00\x00\x00\x00\x01\x00\x00\xb8\x00\x00\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x01\x00\x00\xd6\x00\x00\x00\x05\x00\x13\x00\x00\x00\x00\x00\x00\x01\x00\x00\xec\x00\x00\x00\x05\x00\x15\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x46\x00\x00\x00\x63\x00\x00\x00\x6d\x00\x00\x00\x00\x00\x00\x00\x63\x00\x00\x00\x63\x00\x00\x00\x00\x29\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x09\x00\x00\x00\x08"
"\x00\x00\x00\x08\x00\x00\x00\x0b\x00\x00\x00\x03\x00\x00\x00\x15\x00\x00\x00\x08\x00\x00\x00\x18\x00\x00\x00\x03\x00\x00\x00\x1d\x00\x00\x00\x07\x00\x00\x00\x1d\x00\x00\x00\x06\x00\x00\x00\x1d\x00\x00\x00\x04\x00\x00\x00\x26\x00\x00\x00\x06\x00\x00\x00\x26"
"\x00\x00\x00\x05\x00\x00\x00\x30\x00\x00\x00\x06\x00\x00\x00\x30\x00\x00\x00\x07\x00\x00\x00\x30\x00\x00\x00\x03\x00\x00\x00\x42\x00\x00\x00\x08\x00\x00\x00\x73\x00\x00\x00\x09\x00\x00\x00\x75\x00\x00\x00\x02\x00\x00\x00\x7c\x00\x00\x00\x09\x00\x00\x00\x7c"
"\x00\x00\x00\x0d\x00\x00\x00\x7c\x00\x00\x00\x0b\x00\x00\x00\x7f\x00\x00\x00\x0d\x00\x00\x00\x84\x00\x00\x00\x0c\x00\x00\x00\x8c\x00\x00\x00\x0d\x00\x00\x00\x8e\x00\x00\x00\x0b\x00\x00\x00\x95\x00\x00\x00\x0d\x00\x00\x00\x95\x00\x00\x00\x11\x00\x00\x00\x95"
"\x00\x00\x00\x0f\x00\x00\x00\x98\x00\x00\x00\x11\x00\x00\x00\x9d\x00\x00\x00\x10\x00\x00\x00\xaa\x00\x00\x00\x11\x00\x00\x00\xb0\x00\x00\x00\x16\x00\x00\x00\xb0\x00\x00\x00\x13\x00\x00\x00\xb3\x00\x00\x00\x16\x00\x00\x00\xb8\x00\x00\x00\x14\x00\x00\x00\xc5"
"\x00\x00\x00\x15\x00\x00\x00\xc8\x00\x00\x00\x16\x00\x00\x00\xce\x00\x00\x00\x18\x00\x00\x00\xe4\x00\x00\x00\x19\x00\x00\x00\xfa\x00\x00\x00\x1a\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f"
"\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x17\x27\x00\x00\x00\x00\x27\x00\x00\x00\x03\x41\x6e\x79\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x27\x00\x00\x00"
"\x08\x69\x74\x65\x72\x61\x74\x6f\x72\x27\x00\x00\x00\x02\x69\x74\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x27\x00\x00\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74\x27\x00\x00\x00\x01\x65\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f"
"\x63\x61\x74\x63\x68\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x62\x72\x65\x61\x6b\x27\x00\x00\x00\x05\x6f\x70\x5f\x69\x6e\x27\x00\x00\x00\x05\x41\x72\x72\x61\x79\x03\x00\x00\x00\x08\x27\x00\x00\x00\x01\x76\x27\x00\x00\x00\x03\x53\x65\x74\x27\x00\x00\x00"
"\x0b\x6f\x62\x6a\x65\x63\x74\x5f\x6e\x61\x6d\x65\x27\x00\x00\x00\x04\x74\x6f\x5f\x73\x27\x00\x00\x00\x07\x70\x72\x69\x6e\x74\x6c\x6e\x27\x00\x00\x00\x01\x70\x27\x00\x00\x00\x07\x6f\x70\x5f\x74\x6f\x5f\x61\x27\x00\x00\x00\x04\x74\x6f\x5f\x61\x27\x00\x00\x00"
"\x07\x6f\x70\x5f\x74\x6f\x5f\x6d\x27\x00\x00\x00\x04\x74\x6f\x5f\x6d\x03\x00\x00\x00\x08\x28\x00\x00\x00\x02\x20\x00\x01\x28\x00\x00\x00\x03\x29\x27\x00\x00\x00\x03\x6c\x69\x62\x29\x20\x20\x29\x27\x00\x00\x00\x07\x62\x75\x69\x6c\x74\x69\x6e\x29\x20\x20\x29"
"\x27\x00\x00\x00\x06\x46\x6f\x72\x6d\x61\x74\x29\x20\x20\x2a\x00\x00\x00\x02\x01\x28\x00\x00\x00\x03\x29\x03\x00\x00\x00\x21\x29\x20\x20\x29\x03\x00\x00\x00\x24\x29\x20\x20\x29\x03\x00\x00\x00\x07\x29\x20\x20\x20\x03\x00\x00\x00\x1e\x26\x00\x00\x00\x04\x3c"
"\x25\x73\x3e"
);

}

XTAL_PREBIND(Undefined){
	it->set_final();
}

XTAL_BIND(Undefined){
	
}

XTAL_BIND(Bool){
	Xemb((
Bool::block_next: method{
	return null, this;
}

Bool::block_first: Bool::block_next;

Bool::to_s: method this ? "true" : "false";
),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x00\x40\x6c\x00\x01\x79\x00\x01\x00\x08\x01\x0c\x27\x02\x27\x00\x31\x00\x02\x00\x6c\x00\x01\x6c\x00\x01\x30\x00\x02\x00\x31\x00\x03\x00\x6c\x00\x01\x79\x00\x02\x00\x13\x0c\x3a\x00\x08\x2a\x00\x01\x3c\x00\x05\x2a\x00"
"\x02\x27\x01\x27\x00\x31\x00\x04\x00\x27\x00\x7b\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x61\x00\x08\x00\x00\x00\x00\x00\x02\x00\x00\x00\x12\x00\x00\x00\x00\x03\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00"
"\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x28\x00\x00\x00\x05\x00\x04\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x02\x00"
"\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00\x08\x00\x00\x00\x03\x00\x00\x00\x0c\x00\x00\x00\x04\x00\x00\x00\x12\x00\x00\x00\x06\x00\x00\x00\x20\x00\x00\x00\x08\x00\x00\x00\x3d\x00\x00\x00\x09\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f"
"\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x05\x27\x00\x00\x00\x00\x27\x00\x00\x00\x04\x42\x6f\x6f\x6c\x27\x00\x00"
"\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x27\x00\x00\x00\x04\x74\x6f\x5f\x73\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x03\x20\x26\x00\x00\x00\x04\x74\x72\x75\x65\x26"
"\x00\x00\x00\x05\x66\x61\x6c\x73\x65"
);
}

XTAL_PREBIND(Null){
	it->set_final();
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(Null){
	it->def_method(Xid(each), &Any::self);

	Xemb((
Null::op_to_a: method [];
Null::op_to_m: method [:];
Null::block_first: method null;
),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x00\x36\x6c\x00\x01\x79\x00\x01\x00\x07\x74\x27\x01\x27\x00\x31\x00\x02\x00\x6c\x00\x01\x79\x00\x02\x00\x07\x76\x27\x01\x27\x00\x31\x00\x03\x00\x6c\x00\x01\x79\x00\x03\x00\x07\x01\x27\x01\x27\x00\x31\x00\x04\x00\x27"
"\x00\x7b\x00\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x61\x00\x00\x00\x00\x04\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x19\x00\x00\x00\x05\x00\x03\x00\x00\x00\x00\x00"
"\x00\x01\x00\x00\x2a\x00\x00\x00\x05\x00\x04\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x11\x00\x00\x00\x03\x00\x00\x00\x22\x00\x00\x00"
"\x04\x00\x00\x00\x33\x00\x00\x00\x05\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66"
"\x69\x65\x72\x73\x28\x00\x00\x00\x05\x27\x00\x00\x00\x00\x27\x00\x00\x00\x04\x4e\x75\x6c\x6c\x27\x00\x00\x00\x07\x6f\x70\x5f\x74\x6f\x5f\x61\x27\x00\x00\x00\x07\x6f\x70\x5f\x74\x6f\x5f\x6d\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x27"
"\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x01\x20"
);

}

XTAL_PREBIND(Int){
	it->inherit(cpp_class<Float>());
	it->set_final();
}

XTAL_BIND(Int){
	it->def_method(Xid(to_i), &Int::to_i);
	it->def_method(Xid(to_f), &Int::to_f);
	it->def_method(Xid(to_s), &Int::to_s);
	it->def_method(Xid(op_range), (IntRangePtr (Int::*)(int_t, int_t))&Int::op_range, cpp_class<Int>());
	it->def_method(Xid(op_range), (FloatRangePtr (Int::*)(float_t, int_t))&Int::op_range, cpp_class<Float>());
	it->def_method(Xid(op_in), (bool (Int::*)(const IntRangePtr&))&Int::op_in, cpp_class<IntRange>());
	it->def_method(Xid(op_in), (bool (Int::*)(const FloatRangePtr&))&Int::op_in, cpp_class<FloatRange>());

	Xemb((

Int::times: method fiber{
	for(i: 0; i<this; ++i){
		yield i;
	}
}

Int::block_next: method{
	return (this==0 ? null : this-1), this;
}

Int::block_first: Int::block_next;

	),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x00\x76\x6c\x00\x01\x79\x00\x01\x00\x34\x79\x00\x02\x00\x2b\x33\x00\x02\x06\x00\x22\x00\x1b\x00\x0c\x3f\x00\x19\x3a\x00\x16\x1b\x00\x28\x01\x15\x00\x22\x00\x1b\x00\x0c\x3f\x00\x08\x3a\x00\x05\x3c\xff\xee\x35\x00\x02"
"\x27\x00\x27\x01\x27\x00\x31\x00\x03\x00\x6c\x00\x01\x79\x00\x03\x00\x1d\x0c\x06\x00\x3d\x00\x06\x3a\x00\x03\x05\x04\x3a\x00\x06\x01\x3c\x00\x06\x0c\x06\x01\x52\x0c\x27\x02\x27\x00\x31\x00\x04\x00\x6c\x00\x01\x6c\x00\x01\x30\x00\x04\x00\x31\x00\x05\x00\x27"
"\x00\x7b\x00\x05\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x62\x00\x0d\x00\x00\x00\x00\x00\x02\x00\x00\x00\x12\x00\x0d\x00\x00\x00\x00\x00\x02\x00\x01\x00\x12\x00\x1d\x00\x00\x00\x00\x01\x03\x00\x00\x00\x12\x00\x46\x00\x00\x00\x00\x00\x04\x00\x00\x00\x12\x00"
"\x00\x00\x00\x04\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x0d\x00\x00\x00\x06\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x46\x00\x00\x00\x05\x00\x04\x00\x00\x00\x00\x00"
"\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x09\x00\x00\x00\x08\x00\x00\x00\x07\x00\x00\x00\x10\x00\x00\x00"
"\x04\x00\x00\x00\x1d\x00\x00\x00\x06\x00\x00\x00\x1d\x00\x00\x00\x05\x00\x00\x00\x21\x00\x00\x00\x06\x00\x00\x00\x21\x00\x00\x00\x04\x00\x00\x00\x34\x00\x00\x00\x07\x00\x00\x00\x38\x00\x00\x00\x09\x00\x00\x00\x3e\x00\x00\x00\x0b\x00\x00\x00\x3e\x00\x00\x00"
"\x09\x00\x00\x00\x41\x00\x00\x00\x0b\x00\x00\x00\x46\x00\x00\x00\x0a\x00\x00\x00\x5f\x00\x00\x00\x0b\x00\x00\x00\x65\x00\x00\x00\x0d\x00\x00\x00\x73\x00\x00\x00\x0f\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00"
"\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x06\x27\x00\x00\x00\x00\x27\x00\x00\x00\x03\x49\x6e\x74\x27\x00\x00\x00\x01\x69\x27\x00\x00\x00"
"\x05\x74\x69\x6d\x65\x73\x27\x00\x00\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x01\x20"
);

}

XTAL_PREBIND(Float){
	it->set_final();
}

XTAL_BIND(Float){
	it->def_method(Xid(to_i), &Float::to_i);
	it->def_method(Xid(to_f), &Float::to_f);
	it->def_method(Xid(to_s), &Float::to_s);
	it->def_method(Xid(op_range), (FloatRangePtr (Float::*)(int_t, int_t))&Float::op_range, cpp_class<Int>());
	it->def_method(Xid(op_range), (FloatRangePtr (Float::*)(float_t, int_t))&Float::op_range, cpp_class<Float>());
	it->def_method(Xid(op_in), (bool (Float::*)(const IntRangePtr&))&Float::op_in, cpp_class<IntRange>());
	it->def_method(Xid(op_in), (bool (Float::*)(const FloatRangePtr&))&Float::op_in, cpp_class<FloatRange>());
}

XTAL_PREBIND(IntRangeIter){
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(IntRangeIter){
	it->def_method(Xid(block_next), &IntRangeIter::block_next);
}

XTAL_PREBIND(Range){
	it->inherit(cpp_class<Iterable>());
	it->def_ctor(ctor<Range, const AnyPtr&, const AnyPtr&, int_t>()->param(3, Xid(kind), 0));
}

XTAL_BIND(Range){
	it->def_method(Xid(left), &Range::left);
	it->def_method(Xid(right), &Range::right);
	it->def_method(Xid(kind), &Range::kind);
}

XTAL_PREBIND(IntRange){
	it->inherit(cpp_class<Range>());
	it->def_ctor(ctor<IntRange, int_t, int_t, int_t>()->param(3, Xid(kind), 0));
}

XTAL_BIND(IntRange){
	it->def_method(Xid(begin), &IntRange::begin);
	it->def_method(Xid(end), &IntRange::end);
	it->def_method(Xid(each), &IntRange::each);
}

XTAL_PREBIND(FloatRange){
	it->inherit(cpp_class<Range>());
	it->def_ctor(ctor<FloatRange, float_t, float_t, int_t>()->param(3, Xid(kind), 0));
}

XTAL_BIND(FloatRange){
}

XTAL_PREBIND(ArrayIter){
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(ArrayIter){
	it->def_method(Xid(block_next), &ArrayIter::block_next);
}

XTAL_PREBIND(Array){
	it->set_final();
	it->inherit(cpp_class<Iterable>());
	it->def_ctor(ctor<Array, int_t>()->param(1, Xid(size), 0));
}

XTAL_BIND(Array){
	it->def_method(Xid(size), &Array::size);
	it->def_method(Xid(length), &Array::size);
	it->def_method(Xid(resize), &Array::resize);
	it->def_method(Xid(empty), &Array::empty);
	it->def_method(Xid(is_empty), &Array::is_empty);
	it->def_method(Xid(slice), &Array::slice)->param(2, Xid(n), 1);
	it->def_method(Xid(splice), &Array::splice)->param(2, Xid(n), 1);
	it->def_method(Xid(pop_back), &Array::pop_back);
	it->def_method(Xid(pop_front), &Array::pop_front);
	it->def_method(Xid(push_back), &Array::push_back);
	it->def_method(Xid(push_front), &Array::push_front);

	it->def_method(Xid(erase), &Array::erase)->param(2, Xid(n), 1);
	it->def_method(Xid(insert), &Array::insert);
	it->def_method(Xid(to_a), &Array::to_a);
	it->def_method(Xid(each), &Array::each);
	it->def_method(Xid(clone), &Array::clone);
	it->def_method(Xid(front), &Array::front);
	it->def_method(Xid(back), &Array::back);
	it->def_method(Xid(clear), &Array::clear);
	it->def_method(Xid(reverse), &Array::reverse);
	it->def_method(Xid(assign), &Array::assign);
	it->def_method(Xid(concat), &Array::concat);

	it->def_method(Xid(op_to_a), &Array::to_a);
	it->def_method(Xid(op_cat), &Array::cat, cpp_class<Array>());
	it->def_method(Xid(op_cat_assign), &Array::cat_assign, cpp_class<Array>());
	it->def_method(Xid(op_at), &Array::op_at, cpp_class<Int>());
	it->def_method(Xid(op_set_at), &Array::op_set_at, cpp_class<Int>());
	it->def_method(Xid(op_eq), &Array::op_eq, cpp_class<Array>());
	it->def_method(Xid(op_call), &Array::op_at, cpp_class<Int>());

	Xemb((
Array::block_first: method this.each.block_first;

Array::join: method(sep: ""){
	sep = sep.to_s;
	ms: MemoryStream();
	if(sep===""){
		this.each{
			ms.put_s(it.to_s);
		}
	}
	else{
		this.each{
			if(!first_step){
				ms.put_s(sep);
			}
			ms.put_s(it.to_s);
		}
	}
	return ms.to_s;
}

Array::to_s: method{
	return %f([%s])(this.join(", "));
}
),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x01\x6c\x6c\x00\x01\x79\x00\x01\x00\x10\x0c\x2c\x00\x02\x01\x2f\x00\x00\x01\x01\x00\x03\x27\x00\x31\x00\x03\x00\x6c\x00\x01\x79\x00\x02\x01\x24\x4a\x00\x00\x07\x2a\x00\x01\x22\x00\x33\x00\x01\x1b\x01\x2c\x00\x06\x01"
"\x22\x01\x6c\x00\x07\x2e\x00\x00\x01\x00\x22\x00\x1b\x01\x2a\x00\x01\x43\x00\x6f\x3a\x00\x6c\x33\x00\x03\x0c\x2c\x00\x02\x01\x2c\x00\x03\x02\x22\x00\x22\x01\x36\x00\x01\x1b\x01\x3a\x00\x23\x1b\x00\x2c\x00\x06\x01\x1b\x02\x2f\x01\x00\x00\x00\x00\x0a\x1b\x01"
"\x2c\x00\x0b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xe1\x38\x00\x2a\x37\x36\x00\x02\x33\x00\x06\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x0d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x06\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x0e\x39\x35\x00\x03\x3c\x00"
"\x83\x33\x00\x08\x0c\x2c\x00\x02\x01\x2c\x00\x03\x02\x22\x00\x22\x01\x36\x00\x03\x1b\x01\x3a\x00\x3d\x1b\x00\x2c\x00\x06\x01\x1b\x02\x2f\x01\x00\x00\x00\x00\x0a\x1b\x01\x2c\x00\x0b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x1f\x1b\x03\x1b\x02\x2f\x01\x00\x00\x00"
"\x00\x0a\x1b\x00\x2c\x00\x06\x01\x1b\x02\x2f\x01\x00\x00\x00\x00\x0a\x3c\xff\xd6\x38\x00\x2a\x37\x36\x00\x04\x33\x00\x0d\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x0d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x0d\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x0e\x39\x35"
"\x00\x08\x1b\x00\x2f\x00\x00\x01\x01\x00\x06\x35\x00\x01\x27\x00\x31\x00\x12\x00\x6c\x00\x01\x79\x00\x03\x00\x17\x2a\x00\x02\x0c\x2f\x01\x00\x01\x00\x00\x12\x2a\x00\x03\x2e\x01\x00\x01\x01\x27\x00\x31\x00\x06\x00\x27\x00\x7b\x00\x0f\x00\x00\x00\x00\x00\x00"
"\x01\x00\x00\x00\x62\x00\x2b\x00\x00\x00\x00\x01\x05\x00\x01\x00\x12\x00\x4b\x00\x00\x00\x00\x01\x08\x00\x00\x00\x12\x00\x4b\x00\x00\x00\x00\x01\x08\x00\x02\x00\x12\x00\x5e\x00\x00\x00\x00\x01\x0a\x00\x00\x00\x12\x00\x63\x00\x00\x00\x00\x01\x0a\x00\x00\x00"
"\x12\x00\x8b\x00\x00\x00\x00\x01\x0c\x00\x01\x00\x12\x00\xb5\x00\x00\x00\x00\x01\x0f\x00\x00\x00\x12\x00\xb5\x00\x00\x00\x00\x01\x0f\x00\x02\x00\x12\x00\xc8\x00\x00\x00\x00\x01\x11\x00\x00\x00\x12\x00\xcd\x00\x00\x00\x00\x01\x11\x00\x00\x00\x12\x00\xeb\x00"
"\x00\x00\x00\x01\x11\x00\x00\x00\x12\x00\xeb\x00\x00\x00\x00\x01\x11\x00\x00\x00\x12\x00\x0f\x01\x00\x00\x00\x01\x11\x00\x01\x00\x12\x00\x50\x01\x00\x00\x00\x00\x13\x00\x00\x00\x12\x00\x00\x00\x00\x04\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01"
"\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x22\x00\x00\x00\x05\x00\x04\x00\x01\x00\x00\x00\x00\x01\x00\x01\x50\x01\x00\x00\x05\x00\x13\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\x88\x00\x00\x00\xa5\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\xa5\x00\x00\x00\x0c\x01\x00\x00\x29\x01\x00\x00\x33\x01\x00\x00\x00\x00\x00\x00\x29\x01\x00\x00\x29\x01\x00\x00\x00\x2a\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x02\x00"
"\x00\x00\x1a\x00\x00\x00\x15\x00\x00\x00\x1a\x00\x00\x00\x04\x00\x00\x00\x1d\x00\x00\x00\x15\x00\x00\x00\x2e\x00\x00\x00\x05\x00\x00\x00\x36\x00\x00\x00\x06\x00\x00\x00\x40\x00\x00\x00\x13\x00\x00\x00\x40\x00\x00\x00\x07\x00\x00\x00\x4b\x00\x00\x00\x0b\x00"
"\x00\x00\x4e\x00\x00\x00\x08\x00\x00\x00\x5b\x00\x00\x00\x0b\x00\x00\x00\x5e\x00\x00\x00\x08\x00\x00\x00\x63\x00\x00\x00\x0a\x00\x00\x00\x63\x00\x00\x00\x09\x00\x00\x00\x72\x00\x00\x00\x0a\x00\x00\x00\x72\x00\x00\x00\x08\x00\x00\x00\x84\x00\x00\x00\x0b\x00"
"\x00\x00\xb5\x00\x00\x00\x13\x00\x00\x00\xb8\x00\x00\x00\x0d\x00\x00\x00\xc5\x00\x00\x00\x13\x00\x00\x00\xc8\x00\x00\x00\x0d\x00\x00\x00\xcd\x00\x00\x00\x12\x00\x00\x00\xcd\x00\x00\x00\x10\x00\x00\x00\xcd\x00\x00\x00\x11\x00\x00\x00\xdc\x00\x00\x00\x12\x00"
"\x00\x00\xdc\x00\x00\x00\x0d\x00\x00\x00\xeb\x00\x00\x00\x12\x00\x00\x00\xeb\x00\x00\x00\x10\x00\x00\x00\xeb\x00\x00\x00\x0f\x00\x00\x00\xf6\x00\x00\x00\x10\x00\x00\x00\xf6\x00\x00\x00\x11\x00\x00\x00\x05\x01\x00\x00\x12\x00\x00\x00\x08\x01\x00\x00\x13\x00"
"\x00\x00\x36\x01\x00\x00\x14\x00\x00\x00\x42\x01\x00\x00\x15\x00\x00\x00\x48\x01\x00\x00\x19\x00\x00\x00\x48\x01\x00\x00\x17\x00\x00\x00\x4b\x01\x00\x00\x19\x00\x00\x00\x50\x01\x00\x00\x18\x00\x00\x00\x63\x01\x00\x00\x19\x00\x00\x00\x69\x01\x00\x00\x1a\x00"
"\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x13\x27"
"\x00\x00\x00\x00\x27\x00\x00\x00\x05\x41\x72\x72\x61\x79\x27\x00\x00\x00\x04\x65\x61\x63\x68\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x27\x00\x00\x00\x03\x73\x65\x70\x27\x00\x00\x00\x02\x6d\x73\x27\x00\x00\x00\x04\x74\x6f\x5f\x73\x27"
"\x00\x00\x00\x0c\x4d\x65\x6d\x6f\x72\x79\x53\x74\x72\x65\x61\x6d\x27\x00\x00\x00\x08\x69\x74\x65\x72\x61\x74\x6f\x72\x27\x00\x00\x00\x02\x69\x74\x27\x00\x00\x00\x05\x70\x75\x74\x5f\x73\x27\x00\x00\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74\x27\x00\x00"
"\x00\x01\x65\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x63\x61\x74\x63\x68\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x62\x72\x65\x61\x6b\x03\x00\x00\x00\x0e\x03\x00\x00\x00\x0f\x03\x00\x00\x00\x12\x27\x00\x00\x00\x04\x6a\x6f\x69\x6e\x27\x00\x00\x00\x06"
"\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x04\x20\x03\x00\x00\x00\x06\x27\x00\x00\x00\x02\x2c\x20\x00\x01\x28\x00\x00\x00\x03\x29\x27\x00\x00\x00\x03\x6c\x69\x62\x29\x20\x20\x29\x27\x00\x00\x00\x07\x62\x75\x69\x6c\x74\x69\x6e\x29\x20\x20\x29\x27\x00\x00\x00"
"\x06\x46\x6f\x72\x6d\x61\x74\x29\x20\x20\x2a\x00\x00\x00\x02\x01\x28\x00\x00\x00\x03\x29\x03\x00\x00\x00\x1d\x29\x20\x20\x29\x03\x00\x00\x00\x20\x29\x20\x20\x29\x27\x00\x00\x00\x03\x41\x6e\x79\x29\x20\x20\x20\x03\x00\x00\x00\x1a\x26\x00\x00\x00\x04\x5b\x25"
"\x73\x5d"
);

}

XTAL_PREBIND(MapIter){
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(MapIter){
	it->def_method(Xid(block_next), &MapIter::block_next);
}

XTAL_PREBIND(Map){
	it->inherit(cpp_class<Iterable>());
	it->def_ctor(ctor<Map>());
}

XTAL_BIND(Map){
	it->def_method(Xid(to_m), &Map::to_m);
	it->def_method(Xid(size), &Map::size);
	it->def_method(Xid(length), &Map::length);
	it->def_method(Xid(insert), &Map::insert);
	it->def_method(Xid(each), &Map::pairs);
	it->def_method(Xid(pairs), &Map::pairs);
	it->def_method(Xid(keys), &Map::keys);
	it->def_method(Xid(values), &Map::values);
	it->def_method(Xid(clone), &Map::clone);
	it->def_method(Xid(erase), &Map::erase);
	it->def_method(Xid(empty), &Map::empty);
	it->def_method(Xid(is_empty), &Map::is_empty);
	it->def_method(Xid(assign), &Map::assign);
	it->def_method(Xid(concat), &Map::concat);

	it->def_method(Xid(op_to_m), &Map::to_m);
	it->def_method(Xid(op_at), &Map::at, cpp_class<Any>());
	it->def_method(Xid(op_set_at), &Map::set_at, cpp_class<Any>());
	it->def_method(Xid(op_cat), &Map::cat, cpp_class<Map>());
	it->def_method(Xid(op_cat_assign), &Map::cat_assign, cpp_class<Map>());
	it->def_method(Xid(op_call), &Map::at, cpp_class<Any>());

	Xemb((
Map::block_first: method this.each.block_first;

Map::to_s: method{
	if(this.is_empty){
		return "[:]";
	}

	ms: MemoryStream();
	ms.put_s("[");
	this.each{ |k, v|
		if(!first_step){
			ms.put_s(",");
		}

		ms.put_s(k.to_s);
		ms.put_s(":");
		ms.put_s(v.to_s);
	}
	ms.put_s("]");
	return ms.to_s;
}
),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x01\x28\x6c\x00\x01\x79\x00\x01\x00\x10\x0c\x2c\x00\x02\x01\x2f\x00\x00\x01\x01\x00\x03\x27\x00\x31\x00\x03\x00\x6c\x00\x01\x79\x00\x02\x01\x01\x33\x00\x01\x0c\x2c\x00\x05\x01\x3a\x00\x0a\x2a\x00\x01\x35\x00\x01\x27"
"\x01\x6c\x00\x06\x2e\x00\x00\x01\x00\x22\x00\x2a\x00\x02\x1b\x00\x2f\x01\x00\x00\x00\x00\x07\x33\x00\x03\x0c\x2c\x00\x02\x01\x2c\x00\x03\x03\x22\x00\x22\x01\x22\x02\x36\x00\x01\x1b\x02\x3a\x00\x76\x1b\x01\x2c\x00\x0b\x01\x1b\x03\x2f\x01\x00\x00\x00\x00\x07"
"\x2a\x00\x03\x1b\x03\x2f\x01\x00\x00\x00\x00\x07\x1b\x00\x2c\x00\x0b\x01\x1b\x03\x2f\x01\x00\x00\x00\x00\x07\x1b\x02\x2c\x00\x0c\x03\x22\x00\x22\x01\x22\x02\x1b\x02\x3a\x00\x3b\x2a\x00\x04\x1b\x03\x2f\x01\x00\x00\x00\x00\x07\x1b\x01\x2c\x00\x0b\x01\x1b\x03"
"\x2f\x01\x00\x00\x00\x00\x07\x2a\x00\x03\x1b\x03\x2f\x01\x00\x00\x00\x00\x07\x1b\x00\x2c\x00\x0b\x01\x1b\x03\x2f\x01\x00\x00\x00\x00\x07\x3c\xff\xb8\x38\x00\x2a\x37\x36\x00\x02\x33\x00\x08\x22\x00\x1b\x00\x1b\x03\x2f\x01\x00\x01\x08\x00\x0e\x3b\x00\x05\x1b"
"\x00\x7b\x35\x00\x08\x37\x1b\x02\x2f\x00\x00\x00\x08\x00\x0f\x39\x35\x00\x03\x2a\x00\x05\x1b\x00\x2f\x01\x00\x00\x00\x00\x07\x1b\x00\x2f\x00\x00\x01\x01\x00\x0b\x35\x00\x01\x27\x00\x31\x00\x0b\x00\x27\x00\x7b\x00\x09\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00"
"\x62\x00\x22\x00\x00\x00\x00\x00\x04\x00\x01\x00\x12\x00\x2d\x00\x00\x00\x00\x00\x06\x00\x00\x00\x12\x00\x4b\x00\x00\x00\x00\x01\x08\x00\x03\x00\x12\x00\x60\x00\x00\x00\x00\x01\x0b\x00\x00\x00\x12\x00\x65\x00\x00\x00\x00\x01\x0b\x00\x00\x00\x12\x00\xa0\x00"
"\x00\x00\x00\x01\x0d\x00\x00\x00\x12\x00\xa0\x00\x00\x00\x00\x01\x0d\x00\x00\x00\x12\x00\xe0\x00\x00\x00\x00\x01\x0d\x00\x01\x00\x12\x00\x00\x00\x00\x03\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x00\x00"
"\x00\x00\x00\x01\x00\x00\x22\x00\x00\x00\x05\x00\x04\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xdd\x00\x00\x00\xfa\x00\x00\x00\x04\x01\x00\x00\x00\x00\x00\x00\xfa\x00\x00\x00\xfa\x00\x00\x00\x00\x23\x00\x00"
"\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x1a\x00\x00\x00\x16\x00\x00\x00\x1a\x00\x00\x00\x04\x00\x00\x00\x1d\x00\x00\x00\x16\x00\x00\x00\x25\x00\x00\x00\x07\x00\x00\x00\x25\x00\x00\x00\x05\x00\x00\x00\x2d\x00\x00\x00\x07\x00\x00\x00\x2d\x00"
"\x00\x00\x06\x00\x00\x00\x35\x00\x00\x00\x07\x00\x00\x00\x35\x00\x00\x00\x09\x00\x00\x00\x3f\x00\x00\x00\x0a\x00\x00\x00\x4b\x00\x00\x00\x14\x00\x00\x00\x4e\x00\x00\x00\x0b\x00\x00\x00\x5d\x00\x00\x00\x14\x00\x00\x00\x60\x00\x00\x00\x0b\x00\x00\x00\x65\x00"
"\x00\x00\x13\x00\x00\x00\x65\x00\x00\x00\x0e\x00\x00\x00\x65\x00\x00\x00\x10\x00\x00\x00\x74\x00\x00\x00\x11\x00\x00\x00\x80\x00\x00\x00\x12\x00\x00\x00\x8f\x00\x00\x00\x13\x00\x00\x00\x8f\x00\x00\x00\x0b\x00\x00\x00\xa0\x00\x00\x00\x13\x00\x00\x00\xa0\x00"
"\x00\x00\x0e\x00\x00\x00\xa0\x00\x00\x00\x0d\x00\x00\x00\xac\x00\x00\x00\x0e\x00\x00\x00\xac\x00\x00\x00\x10\x00\x00\x00\xbb\x00\x00\x00\x11\x00\x00\x00\xc7\x00\x00\x00\x12\x00\x00\x00\xd6\x00\x00\x00\x13\x00\x00\x00\xd9\x00\x00\x00\x14\x00\x00\x00\x13\x01"
"\x00\x00\x15\x00\x00\x00\x1f\x01\x00\x00\x16\x00\x00\x00\x25\x01\x00\x00\x17\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00"
"\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x10\x27\x00\x00\x00\x00\x27\x00\x00\x00\x03\x4d\x61\x70\x27\x00\x00\x00\x04\x65\x61\x63\x68\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x27\x00\x00\x00\x02\x6d\x73"
"\x27\x00\x00\x00\x08\x69\x73\x5f\x65\x6d\x70\x74\x79\x27\x00\x00\x00\x0c\x4d\x65\x6d\x6f\x72\x79\x53\x74\x72\x65\x61\x6d\x27\x00\x00\x00\x05\x70\x75\x74\x5f\x73\x27\x00\x00\x00\x08\x69\x74\x65\x72\x61\x74\x6f\x72\x27\x00\x00\x00\x01\x6b\x27\x00\x00\x00\x01"
"\x76\x27\x00\x00\x00\x04\x74\x6f\x5f\x73\x27\x00\x00\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74\x27\x00\x00\x00\x01\x65\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x63\x61\x74\x63\x68\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x62\x72\x65\x61\x6b\x27"
"\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x06\x20\x27\x00\x00\x00\x03\x5b\x3a\x5d\x27\x00\x00\x00\x01\x5b\x27\x00\x00\x00\x01\x3a\x27\x00\x00\x00\x01\x2c\x27\x00\x00\x00\x01\x5d"
);

}

XTAL_PREBIND(Set){
	it->inherit(cpp_class<Map>());
	it->def_ctor(ctor<Set>());
}

XTAL_BIND(Set){
	it->def_method(Xid(each), &Set::each);

	Xemb((
Set::to_s: method{
	return this.each_key[].to_s;
}
),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x00\x21\x6c\x00\x01\x79\x00\x01\x00\x14\x0c\x2c\x00\x02\x01\x2c\x00\x03\x01\x2f\x00\x00\x01\x01\x00\x04\x27\x00\x31\x00\x04\x00\x27\x00\x7b\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x61\x00\x08\x00\x00\x00\x00"
"\x00\x02\x00\x00\x00\x12\x00\x00\x00\x00\x02\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x05"
"\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00\x08\x00\x00\x00\x03\x00\x00\x00\x18\x00\x00\x00\x04\x00\x00\x00\x1e\x00\x00\x00\x05\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73"
"\x6f\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x05\x27\x00\x00\x00\x00\x27\x00\x00\x00\x03\x53\x65\x74\x27\x00\x00"
"\x00\x08\x65\x61\x63\x68\x5f\x6b\x65\x79\x27\x00\x00\x00\x07\x6f\x70\x5f\x74\x6f\x5f\x61\x27\x00\x00\x00\x04\x74\x6f\x5f\x73\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x01\x20"
);
}

XTAL_PREBIND(Fun){
	it->inherit(cpp_class<Method>());
}

XTAL_PREBIND(Fiber){
	it->inherit(cpp_class<Fun>());
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(Fiber){
	it->def_method(Xid(reset), &Fiber::reset);
	it->def_method(Xid(block_first), &Fiber::block_next);
	it->def_method(Xid(block_next), &Fiber::block_next);
	it->def_method(Xid(halt), &Fiber::halt);
	it->def_method(Xid(is_alive), &Fiber::is_alive);
}

XTAL_PREBIND(Lambda){
	it->inherit(cpp_class<Fun>());
}

XTAL_PREBIND(Arguments){
	it->inherit(cpp_class<Iterable>());
	it->def_ctor(ctor<Arguments, const AnyPtr&, const AnyPtr&>()->param(1, Xid(ordered), null)->param(2, Xid(named), null));
}

XTAL_BIND(Arguments){
	it->def_method(Xid(size), &Arguments::length);
	it->def_method(Xid(length), &Arguments::length);
	it->def_method(Xid(ordered_arguments), &Arguments::ordered_arguments);
	it->def_method(Xid(named_arguments), &Arguments::named_arguments);
	
	it->def(Xid(op_at), method(&Arguments::op_at_int), cpp_class<Int>());
	it->def(Xid(op_at), method(&Arguments::op_at_string), cpp_class<String>());

	Xemb((
Arguments::each: method{
	return fiber{ 
		this.ordered_arguments.with_index{ |i, v|
			yield i, v;
		}
		this.named_arguments{ |i, v|
			yield i, v;
		}
	}
}

Arguments::pairs: Arguments::each;

Arguments::to_s: method{
	ms: MemoryStream();
	ms.put_s("(");
	ms.put_s(this.map(|x, y| %f(%s:%s)(x, y)).join(", "));
	ms.put_s(")");
	return ms.to_s;
}
),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x01\x5d\x6c\x00\x01\x79\x00\x01\x00\xd5\x79\x00\x02\x00\xcc\x33\x00\x03\x0c\x2c\x00\x05\x01\x2c\x00\x06\x01\x2c\x00\x07\x03\x22\x00\x22\x01\x22\x02\x36\x00\x01\x1b\x02\x3a\x00\x1c\x1b\x01\x1b\x00\x28\x02\x1b\x02\x2c"
"\x00\x08\x03\x22\x00\x22\x01\x22\x02\x1b\x02\x3a\x00\x05\x3c\xff\xe8\x38\x00\x2a\x37\x36\x00\x02\x33\x00\x06\x22\x00\x1b\x00\x1b\x03\x2f\x01\x00\x01\x08\x00\x0a\x3b\x00\x05\x1b\x00\x7b\x35\x00\x06\x37\x1b\x02\x2f\x00\x00\x00\x08\x00\x0b\x39\x35\x00\x03\x33"
"\x00\x07\x0c\x2c\x00\x0f\x01\x2c\x00\x07\x03\x22\x00\x22\x01\x22\x02\x36\x00\x03\x1b\x02\x3a\x00\x1c\x1b\x01\x1b\x00\x28\x02\x1b\x02\x2c\x00\x08\x03\x22\x00\x22\x01\x22\x02\x1b\x02\x3a\x00\x05\x3c\xff\xe8\x38\x00\x2a\x37\x36\x00\x04\x33\x00\x0a\x22\x00\x1b"
"\x00\x1b\x03\x2f\x01\x00\x01\x08\x00\x0a\x3b\x00\x05\x1b\x00\x7b\x35\x00\x0a\x37\x1b\x02\x2f\x00\x00\x00\x08\x00\x0b\x39\x35\x00\x07\x27\x00\x27\x01\x27\x00\x31\x00\x11\x00\x6c\x00\x01\x6c\x00\x01\x30\x00\x11\x00\x31\x00\x12\x00\x6c\x00\x01\x79\x00\x03\x00"
"\x63\x33\x00\x0b\x6c\x00\x14\x2e\x00\x00\x01\x00\x22\x00\x2a\x00\x01\x1b\x00\x2f\x01\x00\x00\x00\x00\x15\x2a\x00\x02\x79\x00\x04\x00\x10\x1b\x01\x1b\x00\x2a\x00\x03\x2e\x02\x00\x01\x01\x27\x00\x0c\x2f\x01\x00\x01\x00\x00\x18\x2f\x01\x00\x01\x00\x00\x19\x1b"
"\x00\x2f\x01\x00\x00\x00\x00\x15\x2a\x00\x04\x1b\x00\x2f\x01\x00\x00\x00\x00\x15\x1b\x00\x2f\x00\x00\x01\x01\x00\x1a\x35\x00\x0b\x27\x00\x31\x00\x1a\x00\x27\x00\x7b\x00\x0c\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x62\x00\x08\x00\x00\x00\x00\x00\x02\x00\x00"
"\x00\x12\x00\x0d\x00\x00\x00\x00\x00\x02\x00\x00\x00\x12\x00\x0d\x00\x00\x00\x00\x00\x02\x00\x03\x00\x12\x00\x26\x00\x00\x00\x00\x01\x08\x00\x00\x00\x12\x00\x2b\x00\x00\x00\x00\x01\x08\x00\x00\x00\x12\x00\x4c\x00\x00\x00\x00\x01\x09\x00\x01\x00\x12\x00\x73"
"\x00\x00\x00\x00\x00\x0c\x00\x03\x00\x12\x00\x88\x00\x00\x00\x00\x01\x10\x00\x00\x00\x12\x00\x8d\x00\x00\x00\x00\x01\x10\x00\x00\x00\x12\x00\xae\x00\x00\x00\x00\x01\x10\x00\x01\x00\x12\x00\xf5\x00\x00\x00\x00\x00\x13\x00\x01\x00\x12\x00\x00\x00\x00\x05\x00"
"\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x0d\x00\x00\x00\x06\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\xf5\x00\x00\x00\x05\x00\x13\x00\x00\x00\x00\x00\x00\x01\x00\x00\x16"
"\x01\x00\x00\x04\x00\x16\x00\x02\x00\x00\x00\x00\x01\x02\x02\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x49\x00\x00\x00\x66\x00\x00\x00\x70\x00\x00\x00\x00\x00\x00\x00\x66\x00\x00\x00\x66\x00\x00\x00\xab\x00\x00\x00\xc8\x00\x00\x00\xd2\x00\x00"
"\x00\x00\x00\x00\x00\xc8\x00\x00\x00\xc8\x00\x00\x00\x00\x23\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x0b\x00\x00\x00\x08\x00\x00\x00\x0a\x00\x00\x00\x0d\x00\x00\x00\x07\x00\x00\x00\x10"
"\x00\x00\x00\x04\x00\x00\x00\x23\x00\x00\x00\x07\x00\x00\x00\x26\x00\x00\x00\x04\x00\x00\x00\x2b\x00\x00\x00\x06\x00\x00\x00\x2b\x00\x00\x00\x05\x00\x00\x00\x31\x00\x00\x00\x06\x00\x00\x00\x31\x00\x00\x00\x04\x00\x00\x00\x45\x00\x00\x00\x07\x00\x00\x00\x73"
"\x00\x00\x00\x0a\x00\x00\x00\x76\x00\x00\x00\x07\x00\x00\x00\x85\x00\x00\x00\x0a\x00\x00\x00\x88\x00\x00\x00\x07\x00\x00\x00\x8d\x00\x00\x00\x09\x00\x00\x00\x8d\x00\x00\x00\x08\x00\x00\x00\x93\x00\x00\x00\x09\x00\x00\x00\x93\x00\x00\x00\x07\x00\x00\x00\xa7"
"\x00\x00\x00\x0a\x00\x00\x00\xd9\x00\x00\x00\x0b\x00\x00\x00\xdf\x00\x00\x00\x0d\x00\x00\x00\xed\x00\x00\x00\x15\x00\x00\x00\xed\x00\x00\x00\x0f\x00\x00\x00\xf0\x00\x00\x00\x15\x00\x00\x00\xf8\x00\x00\x00\x10\x00\x00\x00\x02\x01\x00\x00\x11\x00\x00\x00\x0e"
"\x01\x00\x00\x12\x00\x00\x00\x3c\x01\x00\x00\x13\x00\x00\x00\x48\x01\x00\x00\x14\x00\x00\x00\x54\x01\x00\x00\x15\x00\x00\x00\x5a\x01\x00\x00\x16\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f"
"\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x1b\x27\x00\x00\x00\x00\x27\x00\x00\x00\x09\x41\x72\x67\x75\x6d\x65\x6e\x74\x73\x27\x00\x00\x00\x08\x69\x74\x65\x72"
"\x61\x74\x6f\x72\x27\x00\x00\x00\x01\x69\x27\x00\x00\x00\x01\x76\x27\x00\x00\x00\x11\x6f\x72\x64\x65\x72\x65\x64\x5f\x61\x72\x67\x75\x6d\x65\x6e\x74\x73\x27\x00\x00\x00\x0a\x77\x69\x74\x68\x5f\x69\x6e\x64\x65\x78\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f"
"\x66\x69\x72\x73\x74\x27\x00\x00\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74\x27\x00\x00\x00\x01\x65\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x63\x61\x74\x63\x68\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x62\x72\x65\x61\x6b\x03\x00\x00\x00\x08\x03"
"\x00\x00\x00\x09\x03\x00\x00\x00\x0a\x27\x00\x00\x00\x0f\x6e\x61\x6d\x65\x64\x5f\x61\x72\x67\x75\x6d\x65\x6e\x74\x73\x03\x00\x00\x00\x0f\x27\x00\x00\x00\x04\x65\x61\x63\x68\x27\x00\x00\x00\x05\x70\x61\x69\x72\x73\x27\x00\x00\x00\x02\x6d\x73\x27\x00\x00\x00"
"\x0c\x4d\x65\x6d\x6f\x72\x79\x53\x74\x72\x65\x61\x6d\x27\x00\x00\x00\x05\x70\x75\x74\x5f\x73\x27\x00\x00\x00\x01\x78\x27\x00\x00\x00\x01\x79\x27\x00\x00\x00\x03\x6d\x61\x70\x27\x00\x00\x00\x04\x6a\x6f\x69\x6e\x27\x00\x00\x00\x04\x74\x6f\x5f\x73\x27\x00\x00"
"\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x05\x20\x27\x00\x00\x00\x01\x28\x27\x00\x00\x00\x02\x2c\x20\x00\x01\x28\x00\x00\x00\x03\x29\x27\x00\x00\x00\x03\x6c\x69\x62\x29\x20\x20\x29\x27\x00\x00\x00\x07\x62\x75\x69\x6c\x74\x69\x6e\x29\x20\x20\x29\x27"
"\x00\x00\x00\x06\x46\x6f\x72\x6d\x61\x74\x29\x20\x20\x2a\x00\x00\x00\x02\x01\x28\x00\x00\x00\x03\x29\x03\x00\x00\x00\x25\x29\x20\x20\x29\x03\x00\x00\x00\x28\x29\x20\x20\x29\x27\x00\x00\x00\x03\x41\x6e\x79\x29\x20\x20\x20\x03\x00\x00\x00\x22\x26\x00\x00\x00"
"\x05\x25\x73\x3a\x25\x73\x27\x00\x00\x00\x01\x29"
);

}

XTAL_BIND(Code){
	it->def_method(Xid(filelocal), &Code::filelocal);
	it->def_method(Xid(inspect), &Code::inspect);
}

XTAL_PREBIND(MembersIter){
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(MembersIter){
	it->def_method(Xid(block_next), &MembersIter::block_next);
}

XTAL_BIND(Frame){
	it->def_method(Xid(members), &Frame::members);
	it->def_method(Xid(outer), &Frame::outer);
}

XTAL_PREBIND(Class){
	it->inherit(cpp_class<Frame>());
}

XTAL_BIND(Class){
	it->def_method(Xid(inherit), &Class::inherit_strict);
	it->def_method(Xid(overwrite), &Class::overwrite);
	it->def_method(Xid(s_new), &Class::s_new);
	it->def_method(Xid(inherited_classes), &Class::inherited_classes);
	it->def_method(Xid(is_inherited), &Any::is_inherited);
	it->def_method(Xid(find_near_member), &Class::find_near_member)->param(2, Xid(secondary_key), null);

	Xemb((

Class::ancestors: method{
	if(this===Any){
		return null;
	}			
	
	return fiber{
		this.inherited_classes{
			yield it;
			it.ancestors{
				yield it;
			}
		}

		yield Any;
	}
}

Class::members: method(inherited_too: true){
	if(!inherited_too){
		return Frame::members();
	}

	return fiber{
		this.members(false){
			yield it;
		}

		this.ancestors{
			it.members(false){
				yield it;
			}
		}
	}
}
),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x02\x2d\x6c\x00\x01\x79\x00\x01\x00\xd8\x0c\x6c\x00\x02\x43\x00\x08\x3a\x00\x05\x01\x27\x01\x79\x00\x02\x00\xc2\x33\x00\x04\x0c\x2c\x00\x05\x01\x2c\x00\x06\x02\x22\x00\x22\x01\x36\x00\x01\x1b\x01\x3a\x00\x75\x1b\x00"
"\x28\x01\x33\x00\x07\x1b\x02\x2c\x00\x09\x01\x2c\x00\x06\x02\x22\x00\x22\x01\x36\x00\x02\x1b\x01\x3a\x00\x18\x1b\x00\x28\x01\x1b\x01\x2c\x00\x0a\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xec\x38\x00\x2a\x37\x36\x00\x03\x33\x00\x0a\x22\x00\x1b\x00\x1b"
"\x02\x2f\x01\x00\x01\x08\x00\x0c\x3b\x00\x05\x1b\x00\x7b\x35\x00\x0a\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x0d\x39\x35\x00\x07\x1b\x01\x2c\x00\x0a\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\x8f\x38\x00\x2a\x37\x36\x00\x04\x33\x00\x0b\x22\x00\x1b\x00\x1b"
"\x02\x2f\x01\x00\x01\x08\x00\x0c\x3b\x00\x05\x1b\x00\x7b\x35\x00\x0b\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x0d\x39\x35\x00\x04\x6c\x00\x02\x28\x01\x27\x00\x27\x01\x27\x00\x31\x00\x09\x00\x6c\x00\x01\x79\x00\x03\x01\x3e\x4a\x00\x00\x05\x03\x22\x00\x1b\x00\x3b"
"\x00\x0e\x6c\x00\x10\x30\x00\x11\x00\x2e\x00\x00\x01\x01\x79\x00\x04\x01\x1d\x33\x00\x0f\x04\x0c\x2f\x01\x00\x01\x00\x00\x11\x2c\x00\x06\x02\x22\x00\x22\x01\x36\x00\x05\x1b\x01\x3a\x00\x18\x1b\x00\x28\x01\x1b\x01\x2c\x00\x0a\x02\x22\x00\x22\x01\x1b\x01\x3a"
"\x00\x05\x3c\xff\xec\x38\x00\x2a\x37\x36\x00\x06\x33\x00\x12\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x0c\x3b\x00\x05\x1b\x00\x7b\x35\x00\x12\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x0d\x39\x35\x00\x0f\x33\x00\x13\x0c\x2c\x00\x09\x01\x2c\x00\x06\x02\x22"
"\x00\x22\x01\x36\x00\x07\x1b\x01\x3a\x00\x75\x33\x00\x16\x04\x1b\x02\x2f\x01\x00\x01\x00\x00\x11\x2c\x00\x06\x02\x22\x00\x22\x01\x36\x00\x08\x1b\x01\x3a\x00\x18\x1b\x00\x28\x01\x1b\x01\x2c\x00\x0a\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xec\x38\x00"
"\x2a\x37\x36\x00\x09\x33\x00\x19\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x0c\x3b\x00\x05\x1b\x00\x7b\x35\x00\x19\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x0d\x39\x35\x00\x16\x1b\x01\x2c\x00\x0a\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\x8f\x38\x00"
"\x2a\x37\x36\x00\x0a\x33\x00\x1a\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x0c\x3b\x00\x05\x1b\x00\x7b\x35\x00\x1a\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x0d\x39\x35\x00\x13\x27\x00\x27\x01\x27\x00\x31\x00\x11\x00\x27\x00\x7b\x00\x1b\x00\x00\x00\x00\x00"
"\x00\x01\x00\x00\x00\x62\x00\x08\x00\x00\x00\x00\x00\x02\x00\x00\x00\x12\x00\x12\x00\x00\x00\x00\x00\x03\x00\x00\x00\x12\x00\x1a\x00\x00\x00\x00\x00\x03\x00\x00\x00\x12\x00\x1a\x00\x00\x00\x00\x00\x03\x00\x02\x00\x12\x00\x2d\x00\x00\x00\x00\x01\x07\x00\x00"
"\x00\x12\x00\x32\x00\x00\x00\x00\x01\x07\x00\x00\x00\x12\x00\x36\x00\x00\x00\x00\x01\x07\x00\x02\x00\x12\x00\x4a\x00\x00\x00\x00\x01\x0a\x00\x00\x00\x12\x00\x4f\x00\x00\x00\x00\x01\x0a\x00\x00\x00\x12\x00\x6c\x00\x00\x00\x00\x01\x0b\x00\x01\x00\x12\x00\xac"
"\x00\x00\x00\x00\x01\x0e\x00\x01\x00\x12\x00\xf1\x00\x00\x00\x00\x01\x10\x00\x00\x00\x12\x00\xf6\x00\x00\x00\x00\x00\x10\x00\x00\x00\x12\x00\x07\x01\x00\x00\x00\x00\x12\x00\x00\x00\x12\x00\x07\x01\x00\x00\x00\x00\x12\x00\x02\x00\x12\x00\x1e\x01\x00\x00\x00"
"\x01\x14\x00\x00\x00\x12\x00\x23\x01\x00\x00\x00\x01\x14\x00\x00\x00\x12\x00\x40\x01\x00\x00\x00\x01\x14\x00\x01\x00\x12\x00\x67\x01\x00\x00\x00\x00\x15\x00\x02\x00\x12\x00\x7a\x01\x00\x00\x00\x01\x17\x00\x00\x00\x12\x00\x7f\x01\x00\x00\x00\x01\x17\x00\x00"
"\x00\x12\x00\x7f\x01\x00\x00\x00\x01\x17\x00\x02\x00\x12\x00\x97\x01\x00\x00\x00\x01\x19\x00\x00\x00\x12\x00\x9c\x01\x00\x00\x00\x01\x19\x00\x00\x00\x12\x00\xb9\x01\x00\x00\x00\x01\x19\x00\x01\x00\x12\x00\xf9\x01\x00\x00\x00\x01\x1a\x00\x01\x00\x12\x00\x00"
"\x00\x00\x05\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x1a\x00\x00\x00\x06\x00\x03\x00\x00\x00\x00\x00\x00\x01\x00\x00\xea\x00\x00\x00\x05\x00\x0f\x00\x01\x00\x00\x00\x00"
"\x01\x00\x01\x07\x01\x00\x00\x06\x00\x12\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\xc6\x00\x00\x00\xd0\x00\x00\x00\x69\x00\x00\x00\x86\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00"
"\x00\x86\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\xc6\x00\x00\x00\x3d\x01\x00\x00\x5a\x01\x00\x00\x64\x01\x00\x00\x00\x00\x00\x00\x5a\x01\x00\x00\x5a\x01\x00\x00\xf6\x01\x00\x00\x13\x02\x00\x00\x1d\x02\x00\x00\xb6\x01\x00\x00\xd3\x01\x00\x00\xdd\x01\x00"
"\x00\x00\x00\x00\x00\xd3\x01\x00\x00\xd3\x01\x00\x00\x00\x00\x00\x00\x13\x02\x00\x00\x13\x02\x00\x00\x00\x42\x00\x00\x00\x00\x25\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x12\x00\x00\x00\x08\x00\x00\x00\x06"
"\x00\x00\x00\x08\x00\x00\x00\x04\x00\x00\x00\x12\x00\x00\x00\x06\x00\x00\x00\x12\x00\x00\x00\x05\x00\x00\x00\x15\x00\x00\x00\x06\x00\x00\x00\x15\x00\x00\x00\x12\x00\x00\x00\x15\x00\x00\x00\x11\x00\x00\x00\x1a\x00\x00\x00\x10\x00\x00\x00\x1d\x00\x00\x00\x09"
"\x00\x00\x00\x2a\x00\x00\x00\x10\x00\x00\x00\x2d\x00\x00\x00\x09\x00\x00\x00\x32\x00\x00\x00\x0e\x00\x00\x00\x32\x00\x00\x00\x0a\x00\x00\x00\x36\x00\x00\x00\x0e\x00\x00\x00\x39\x00\x00\x00\x0b\x00\x00\x00\x47\x00\x00\x00\x0e\x00\x00\x00\x4a\x00\x00\x00\x0b"
"\x00\x00\x00\x4f\x00\x00\x00\x0d\x00\x00\x00\x4f\x00\x00\x00\x0c\x00\x00\x00\x53\x00\x00\x00\x0d\x00\x00\x00\x53\x00\x00\x00\x0b\x00\x00\x00\x65\x00\x00\x00\x0e\x00\x00\x00\x93\x00\x00\x00\x09\x00\x00\x00\xa5\x00\x00\x00\x10\x00\x00\x00\xd8\x00\x00\x00\x11"
"\x00\x00\x00\xdc\x00\x00\x00\x12\x00\x00\x00\xe2\x00\x00\x00\x24\x00\x00\x00\xe2\x00\x00\x00\x14\x00\x00\x00\xe5\x00\x00\x00\x24\x00\x00\x00\xf1\x00\x00\x00\x17\x00\x00\x00\xf1\x00\x00\x00\x15\x00\x00\x00\xf6\x00\x00\x00\x17\x00\x00\x00\xf6\x00\x00\x00\x16"
"\x00\x00\x00\x02\x01\x00\x00\x17\x00\x00\x00\x02\x01\x00\x00\x24\x00\x00\x00\x02\x01\x00\x00\x23\x00\x00\x00\x07\x01\x00\x00\x1e\x00\x00\x00\x0a\x01\x00\x00\x1a\x00\x00\x00\x1b\x01\x00\x00\x1e\x00\x00\x00\x1e\x01\x00\x00\x1a\x00\x00\x00\x23\x01\x00\x00\x1c"
"\x00\x00\x00\x23\x01\x00\x00\x1b\x00\x00\x00\x27\x01\x00\x00\x1c\x00\x00\x00\x27\x01\x00\x00\x1a\x00\x00\x00\x39\x01\x00\x00\x1e\x00\x00\x00\x67\x01\x00\x00\x23\x00\x00\x00\x6a\x01\x00\x00\x1e\x00\x00\x00\x77\x01\x00\x00\x23\x00\x00\x00\x7a\x01\x00\x00\x1e"
"\x00\x00\x00\x7f\x01\x00\x00\x22\x00\x00\x00\x82\x01\x00\x00\x1f\x00\x00\x00\x94\x01\x00\x00\x22\x00\x00\x00\x97\x01\x00\x00\x1f\x00\x00\x00\x9c\x01\x00\x00\x21\x00\x00\x00\x9c\x01\x00\x00\x20\x00\x00\x00\xa0\x01\x00\x00\x21\x00\x00\x00\xa0\x01\x00\x00\x1f"
"\x00\x00\x00\xb2\x01\x00\x00\x22\x00\x00\x00\xe0\x01\x00\x00\x1e\x00\x00\x00\xf2\x01\x00\x00\x23\x00\x00\x00\x24\x02\x00\x00\x24\x00\x00\x00\x2a\x02\x00\x00\x25\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00"
"\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x1b\x27\x00\x00\x00\x00\x27\x00\x00\x00\x05\x43\x6c\x61\x73\x73\x27\x00\x00\x00\x03\x41\x6e\x79\x27"
"\x00\x00\x00\x08\x69\x74\x65\x72\x61\x74\x6f\x72\x27\x00\x00\x00\x02\x69\x74\x27\x00\x00\x00\x11\x69\x6e\x68\x65\x72\x69\x74\x65\x64\x5f\x63\x6c\x61\x73\x73\x65\x73\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x03\x00\x00\x00\x09\x03\x00"
"\x00\x00\x0a\x27\x00\x00\x00\x09\x61\x6e\x63\x65\x73\x74\x6f\x72\x73\x27\x00\x00\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74\x27\x00\x00\x00\x01\x65\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x63\x61\x74\x63\x68\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b"
"\x5f\x62\x72\x65\x61\x6b\x03\x00\x00\x00\x0f\x27\x00\x00\x00\x0d\x69\x6e\x68\x65\x72\x69\x74\x65\x64\x5f\x74\x6f\x6f\x27\x00\x00\x00\x05\x46\x72\x61\x6d\x65\x27\x00\x00\x00\x07\x6d\x65\x6d\x62\x65\x72\x73\x03\x00\x00\x00\x09\x03\x00\x00\x00\x0a\x03\x00\x00"
"\x00\x0f\x03\x00\x00\x00\x09\x03\x00\x00\x00\x0a\x03\x00\x00\x00\x09\x03\x00\x00\x00\x0a\x03\x00\x00\x00\x0f\x03\x00\x00\x00\x0f\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x01\x20"
);

}

XTAL_PREBIND(ClassInheritedClassesIter){
	it->inherit(cpp_class<Iterator>());
}

XTAL_BIND(ClassInheritedClassesIter){
	it->def_method(Xid(block_next), &ClassInheritedClassesIter::block_next);
}

XTAL_PREBIND(Singleton){
	it->inherit(cpp_class<Class>());
}

XTAL_PREBIND(CppSingleton){
	it->inherit(cpp_class<Class>());
}

XTAL_PREBIND(Lib){
	it->inherit(cpp_class<Class>());
	it->def_ctor(ctor<Lib>());
}

XTAL_BIND(Lib){
	it->def_method(Xid(append_load_path), &Lib::append_load_path);
}

XTAL_PREBIND(ZipIter){
	it->inherit(cpp_class<Iterator>());
	it->def_ctor(ctor<ZipIter, const VMachinePtr&>());
}

XTAL_BIND(ZipIter){
	it->def_method(Xid(block_first), &ZipIter::block_first);
	it->def_method(Xid(block_next), &ZipIter::block_next);
	it->def_method(Xid(block_break), &ZipIter::block_break);
}

XTAL_PREBIND(Thread){
	it->def_ctor(ctor<Thread>());
}

XTAL_BIND(Thread){
	it->def_method(Xid(start), &Thread::start);
	it->def_method(Xid(join), &Thread::join);
	it->def_fun(Xid(yield), &yield_thread);
	it->def_fun(Xid(sleep), &sleep_thread);
}

XTAL_PREBIND(Mutex){
	it->def_ctor(ctor<Mutex>());
}

XTAL_BIND(Mutex){
	it->def_method(Xid(lock), &Mutex::lock);
	it->def_method(Xid(unlock), &Mutex::unlock);

	Xemb((

Mutex::block_first: method{
	this.lock;
	return this;
}

Mutex::block_next: method{
	this.unlock;
	return null;
}

Mutex::block_break: method{
	this.unlock;
	return null;
}

),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x00\x45\x6c\x00\x01\x79\x00\x01\x00\x0c\x0c\x2c\x00\x02\x00\x0c\x27\x01\x27\x00\x31\x00\x03\x00\x6c\x00\x01\x79\x00\x02\x00\x0c\x0c\x2c\x00\x04\x00\x01\x27\x01\x27\x00\x31\x00\x05\x00\x6c\x00\x01\x79\x00\x03\x00\x0c"
"\x0c\x2c\x00\x04\x00\x01\x27\x01\x27\x00\x31\x00\x06\x00\x27\x00\x7b\x00\x04\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x61\x00\x08\x00\x00\x00\x00\x00\x02\x00\x00\x00\x12\x00\x1e\x00\x00\x00\x00\x00\x04\x00\x00\x00\x12\x00\x34\x00\x00\x00\x00\x00\x06\x00\x00"
"\x00\x12\x00\x00\x00\x00\x04\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x1e\x00\x00\x00\x05\x00\x04\x00\x00\x00\x00\x00\x00\x01\x00\x00\x34\x00\x00\x00\x05\x00\x06\x00\x00"
"\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x06\x00\x00\x00\x08\x00\x00\x00\x04\x00\x00\x00\x0d"
"\x00\x00\x00\x05\x00\x00\x00\x10\x00\x00\x00\x06\x00\x00\x00\x16\x00\x00\x00\x0b\x00\x00\x00\x16\x00\x00\x00\x08\x00\x00\x00\x19\x00\x00\x00\x0b\x00\x00\x00\x1e\x00\x00\x00\x09\x00\x00\x00\x23\x00\x00\x00\x0a\x00\x00\x00\x26\x00\x00\x00\x0b\x00\x00\x00\x2c"
"\x00\x00\x00\x10\x00\x00\x00\x2c\x00\x00\x00\x0d\x00\x00\x00\x2f\x00\x00\x00\x10\x00\x00\x00\x34\x00\x00\x00\x0e\x00\x00\x00\x39\x00\x00\x00\x0f\x00\x00\x00\x3c\x00\x00\x00\x10\x00\x00\x00\x42\x00\x00\x00\x12\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00"
"\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x07\x27\x00\x00\x00\x00\x27\x00\x00\x00\x05\x4d\x75"
"\x74\x65\x78\x27\x00\x00\x00\x04\x6c\x6f\x63\x6b\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x27\x00\x00\x00\x06\x75\x6e\x6c\x6f\x63\x6b\x27\x00\x00\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b"
"\x5f\x62\x72\x65\x61\x6b\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x01\x20"
);

}

XTAL_PREBIND(Format){
	it->def_serial_ctor(ctor<Format>());
}

XTAL_BIND(Format){
	it->def_method(Xid(to_s), &Format::to_s);
	it->def_method(Xid(serial_save), &Format::serial_save);
	it->def_method(Xid(serial_load), &Format::serial_load);
}

XTAL_PREBIND(Text){
	it->def_serial_ctor(ctor<Text>());
}

XTAL_BIND(Text){
	it->def_method(Xid(to_s), &Text::to_s);
	it->def_method(Xid(serial_save), &Text::serial_save);
	it->def_method(Xid(serial_load), &Text::serial_load);
}

XTAL_BIND(DebugInfo){
	it->def_method(Xid(clone), &DebugInfo::clone);
	it->def_method(Xid(kind), &DebugInfo::kind);
	it->def_method(Xid(line), &DebugInfo::line);
	it->def_method(Xid(fun_name), &DebugInfo::fun_name);
	it->def_method(Xid(file_name), &DebugInfo::file_name);
	it->def_method(Xid(set_kind), &DebugInfo::set_kind);
	it->def_method(Xid(set_line), &DebugInfo::line);
	it->def_method(Xid(set_fun_name), &DebugInfo::set_fun_name);
	it->def_method(Xid(set_file_name), &DebugInfo::set_file_name);

	it->def(Xid(BREAKPOINT), BREAKPOINT);
	it->def(Xid(CALL), BREAKPOINT_CALL);
	it->def(Xid(RETURN), BREAKPOINT_RETURN);
	it->def(Xid(RETURN_THROW), BREAKPOINT_THROW);
}

XTAL_BIND(Stream){
	it->def_method(Xid(get_s), &Stream::get_s);
	it->def_method(Xid(get_s_all), &Stream::get_s_all);
	it->def_method(Xid(put_s), (void (Stream::*)(const StringPtr&))&Stream::put_s);

	it->def_method(Xid(print), &Stream::print);
	it->def_method(Xid(println), &Stream::println);

	it->def_method(Xid(seek), &Stream::seek);
	it->def_method(Xid(tell), &Stream::tell);
	it->def_method(Xid(pour), &Stream::pour);
	it->def_method(Xid(pour_all), &Stream::pour_all);
	it->def_method(Xid(size), &Stream::size);
	it->def_method(Xid(close), &Stream::close);

	it->def_method(Xid(eos), &Stream::eos);

	it->def_method(Xid(serialize), &Stream::serialize);
	it->def_method(Xid(deserialize), &Stream::deserialize);
	it->def_method(Xid(xtalize), &Stream::xtalize);
	it->def_method(Xid(dextalize), &Stream::dextalize);

	it->def_method(Xid(block_first), &Stream::block_first);
	it->def_method(Xid(block_next), &Stream::block_next);
	it->def_method(Xid(block_break), &Stream::block_break);

	it->def_method(Xid(put_i8), &Stream::put_i8);

	it->def_method(Xid(put_i16be), &Stream::put_i16be);
	it->def_method(Xid(put_i32be), &Stream::put_i32be);
	it->def_method(Xid(put_i64be), &Stream::put_i64be);
	it->def_method(Xid(put_f32be), &Stream::put_f32be);
	it->def_method(Xid(put_f64be), &Stream::put_f64be);

	it->def_method(Xid(put_i16le), &Stream::put_i16le);
	it->def_method(Xid(put_i32le), &Stream::put_i32le);
	it->def_method(Xid(put_i64le), &Stream::put_i64le);
	it->def_method(Xid(put_f32le), &Stream::put_f32le);
	it->def_method(Xid(put_f64le), &Stream::put_f64be);

	it->def_method(Xid(get_i8), &Stream::get_i8);

	it->def_method(Xid(get_i16be), &Stream::get_i16be);
	it->def_method(Xid(get_i32be), &Stream::get_i32be);
	it->def_method(Xid(get_i64be), &Stream::get_i64be);
	it->def_method(Xid(get_f32be), &Stream::get_f32be);
	it->def_method(Xid(get_f64be), &Stream::get_f64be);

	it->def_method(Xid(get_i16le), &Stream::get_i16le);
	it->def_method(Xid(get_i32le), &Stream::get_i32le);
	it->def_method(Xid(get_i64le), &Stream::get_i64le);
	it->def_method(Xid(get_f32le), &Stream::get_f32le);
	it->def_method(Xid(get_f64le), &Stream::get_f64be);

	Xemb((
Stream::match: method(pattern){
	exec: xpeg::Executor(this);
	if(exec.match(pattern)){
		return exec;
	}
	return null;
}

Stream::scan: method(pattern) fiber{
	exec: xpeg::Executor(this);
	while(exec.match(pattern)){
		yield exec;
	}
}

Stream::split: method(pattern) fiber{
	exec: xpeg::Executor(this);
	if(exec.match(pattern)){
		yield exec.prefix;
		while(exec.match(pattern)){
			yield exec.prefix;
		}
		yield exec.suffix;
	}
	else{
		yield this.to_s;
	}
}

Stream::printf: method(format_string, ...){
	this.print(format(format_string)(...));
}

),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x01\x31\x6c\x00\x01\x79\x00\x01\x00\x34\x33\x00\x01\x0c\x6c\x00\x04\x30\x00\x05\x00\x2e\x01\x00\x01\x00\x22\x00\x1b\x01\x1b\x00\x2f\x01\x00\x01\x00\x00\x06\x3a\x00\x09\x1b\x00\x35\x00\x01\x27\x01\x01\x35\x00\x01\x27"
"\x01\x35\x00\x01\x27\x00\x31\x00\x06\x00\x6c\x00\x01\x79\x00\x02\x00\x45\x79\x00\x03\x00\x3c\x33\x00\x03\x0c\x6c\x00\x04\x30\x00\x05\x00\x2e\x01\x00\x01\x00\x22\x00\x1a\x01\x1b\x00\x2f\x01\x00\x01\x00\x00\x06\x3a\x00\x17\x1b\x00\x28\x01\x1a\x01\x1b\x00\x2f"
"\x01\x00\x01\x00\x00\x06\x3a\x00\x05\x3c\xff\xed\x35\x00\x03\x27\x00\x27\x01\x27\x00\x31\x00\x09\x00\x6c\x00\x01\x79\x00\x04\x00\x71\x79\x00\x05\x00\x68\x33\x00\x06\x0c\x6c\x00\x04\x30\x00\x05\x00\x2e\x01\x00\x01\x00\x22\x00\x1a\x01\x1b\x00\x2f\x01\x00\x01"
"\x00\x00\x06\x3a\x00\x3c\x1b\x00\x2c\x00\x0c\x01\x28\x01\x1a\x01\x1b\x00\x2f\x01\x00\x01\x00\x00\x06\x3a\x00\x1b\x1b\x00\x2c\x00\x0c\x01\x28\x01\x1a\x01\x1b\x00\x2f\x01\x00\x01\x00\x00\x06\x3a\x00\x05\x3c\xff\xe9\x1b\x00\x2c\x00\x0d\x01\x28\x01\x3c\x00\x09"
"\x0c\x2c\x00\x0e\x01\x28\x01\x35\x00\x06\x27\x00\x27\x01\x27\x00\x31\x00\x0f\x00\x6c\x00\x01\x79\x00\x06\x00\x1c\x0b\x1b\x00\x6c\x00\x11\x2e\x01\x00\x01\x00\x2e\x00\x00\x01\x02\x0c\x2f\x01\x00\x00\x00\x00\x12\x27\x00\x31\x00\x13\x00\x27\x00\x7b\x00\x0c\x00"
"\x00\x00\x00\x00\x00\x01\x00\x00\x00\x62\x00\x08\x00\x00\x00\x00\x01\x03\x00\x01\x00\x12\x00\x28\x00\x00\x00\x00\x01\x07\x00\x00\x00\x12\x00\x4b\x00\x00\x00\x00\x01\x08\x00\x01\x00\x12\x00\x5d\x00\x00\x00\x00\x01\x09\x00\x00\x00\x12\x00\x6b\x00\x00\x00\x00"
"\x01\x09\x00\x00\x00\x12\x00\x9a\x00\x00\x00\x00\x01\x0b\x00\x01\x00\x12\x00\xba\x00\x00\x00\x00\x01\x0c\x00\x00\x00\x12\x00\xc2\x00\x00\x00\x00\x01\x0d\x00\x00\x00\x12\x00\xd0\x00\x00\x00\x00\x01\x0d\x00\x00\x00\x12\x00\xf4\x00\x00\x00\x00\x00\x0e\x00\x00"
"\x00\x12\x00\x10\x01\x00\x00\x00\x01\x11\x00\x00\x00\x12\x00\x00\x00\x00\x07\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x00\x02\x00\x01\x00\x00\x00\x00\x01\x01\x01\x46\x00\x00\x00\x05\x04\x07\x00\x01\x00\x00\x00\x00"
"\x01\x01\x01\x4b\x00\x00\x00\x06\x01\x08\x00\x00\x00\x00\x00\x00\x01\x00\x00\x95\x00\x00\x00\x05\x04\x0a\x00\x01\x00\x00\x00\x00\x01\x01\x01\x9a\x00\x00\x00\x06\x01\x0b\x00\x00\x00\x00\x00\x00\x01\x00\x00\x10\x01\x00\x00\x05\x02\x10\x00\x01\x00\x00\x00\x00"
"\x01\x01\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x35\x00\x00\x00\x00\x23\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x08\x00\x00\x00\x0b\x00\x00\x00\x03\x00\x00\x00\x1a\x00\x00\x00\x06"
"\x00\x00\x00\x1a\x00\x00\x00\x04\x00\x00\x00\x28\x00\x00\x00\x06\x00\x00\x00\x28\x00\x00\x00\x05\x00\x00\x00\x2f\x00\x00\x00\x06\x00\x00\x00\x2f\x00\x00\x00\x07\x00\x00\x00\x38\x00\x00\x00\x08\x00\x00\x00\x3e\x00\x00\x00\x11\x00\x00\x00\x3e\x00\x00\x00\x0a"
"\x00\x00\x00\x41\x00\x00\x00\x11\x00\x00\x00\x46\x00\x00\x00\x0f\x00\x00\x00\x4e\x00\x00\x00\x0b\x00\x00\x00\x5d\x00\x00\x00\x0f\x00\x00\x00\x5d\x00\x00\x00\x0c\x00\x00\x00\x6b\x00\x00\x00\x0e\x00\x00\x00\x6b\x00\x00\x00\x0d\x00\x00\x00\x6f\x00\x00\x00\x0e"
"\x00\x00\x00\x6f\x00\x00\x00\x0c\x00\x00\x00\x80\x00\x00\x00\x0f\x00\x00\x00\x87\x00\x00\x00\x11\x00\x00\x00\x8d\x00\x00\x00\x1f\x00\x00\x00\x8d\x00\x00\x00\x11\x00\x00\x00\x90\x00\x00\x00\x1f\x00\x00\x00\x95\x00\x00\x00\x1d\x00\x00\x00\x9d\x00\x00\x00\x12"
"\x00\x00\x00\xac\x00\x00\x00\x1c\x00\x00\x00\xac\x00\x00\x00\x13\x00\x00\x00\xba\x00\x00\x00\x19\x00\x00\x00\xba\x00\x00\x00\x14\x00\x00\x00\xc2\x00\x00\x00\x18\x00\x00\x00\xc2\x00\x00\x00\x15\x00\x00\x00\xd0\x00\x00\x00\x17\x00\x00\x00\xd0\x00\x00\x00\x16"
"\x00\x00\x00\xd8\x00\x00\x00\x17\x00\x00\x00\xd8\x00\x00\x00\x15\x00\x00\x00\xe9\x00\x00\x00\x18\x00\x00\x00\xf1\x00\x00\x00\x19\x00\x00\x00\xf4\x00\x00\x00\x1c\x00\x00\x00\xf4\x00\x00\x00\x1b\x00\x00\x00\xfb\x00\x00\x00\x1c\x00\x00\x00\xfe\x00\x00\x00\x1d"
"\x00\x00\x00\x02\x01\x00\x00\x1f\x00\x00\x00\x08\x01\x00\x00\x21\x00\x00\x00\x08\x01\x00\x00\x1f\x00\x00\x00\x0b\x01\x00\x00\x21\x00\x00\x00\x10\x01\x00\x00\x20\x00\x00\x00\x28\x01\x00\x00\x21\x00\x00\x00\x2e\x01\x00\x00\x23\x00\x00\x00\x00\x01\x2a\x00\x00"
"\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x14\x27\x00\x00\x00\x00\x27\x00\x00"
"\x00\x06\x53\x74\x72\x65\x61\x6d\x27\x00\x00\x00\x07\x70\x61\x74\x74\x65\x72\x6e\x27\x00\x00\x00\x04\x65\x78\x65\x63\x27\x00\x00\x00\x04\x78\x70\x65\x67\x27\x00\x00\x00\x08\x45\x78\x65\x63\x75\x74\x6f\x72\x27\x00\x00\x00\x05\x6d\x61\x74\x63\x68\x03\x00\x00"
"\x00\x08\x03\x00\x00\x00\x09\x27\x00\x00\x00\x04\x73\x63\x61\x6e\x03\x00\x00\x00\x08\x03\x00\x00\x00\x09\x27\x00\x00\x00\x06\x70\x72\x65\x66\x69\x78\x27\x00\x00\x00\x06\x73\x75\x66\x66\x69\x78\x27\x00\x00\x00\x04\x74\x6f\x5f\x73\x27\x00\x00\x00\x05\x73\x70"
"\x6c\x69\x74\x27\x00\x00\x00\x0d\x66\x6f\x72\x6d\x61\x74\x5f\x73\x74\x72\x69\x6e\x67\x27\x00\x00\x00\x06\x66\x6f\x72\x6d\x61\x74\x27\x00\x00\x00\x05\x70\x72\x69\x6e\x74\x27\x00\x00\x00\x06\x70\x72\x69\x6e\x74\x66\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73"
"\x28\x00\x00\x00\x01\x20"
);

}

XTAL_PREBIND(PointerStream){
	it->inherit(cpp_class<Stream>());
}

XTAL_PREBIND(MemoryStream){
	it->inherit(cpp_class<PointerStream>());
	it->def_ctor(ctor<MemoryStream>());
}

XTAL_BIND(MemoryStream){
	it->def_method(Xid(to_s), &MemoryStream::to_s);
	it->def_method(Xid(resize), &MemoryStream::resize);
}

XTAL_PREBIND(StringStream){
	it->inherit(cpp_class<Stream>());
	it->def_ctor(ctor<StringStream, const StringPtr&>());
}

XTAL_BIND(StringStream){
	it->def_method(Xid(to_s), &StringStream::to_s);
}

XTAL_PREBIND(FileStream){
	it->inherit(cpp_class<Stream>());
	it->def_ctor(ctor<FileStream, const StringPtr&, const StringPtr&>());
}

XTAL_BIND(FileStream){
}

XTAL_BIND(Debug){
	it->def_singleton_method(Xid(break_point_hook), &Debug::break_point_hook);
	it->def_singleton_method(Xid(call_hook), &Debug::call_hook);
	it->def_singleton_method(Xid(return_hook), &Debug::return_hook);
	it->def_singleton_method(Xid(throw_hook), &Debug::throw_hook);
	it->def_singleton_method(Xid(set_break_point_hook), &Debug::set_break_point_hook);
	it->def_singleton_method(Xid(set_call_hook), &Debug::set_call_hook);
	it->def_singleton_method(Xid(set_return_hook), &Debug::set_return_hook);
	it->def_singleton_method(Xid(set_throw_hook), &Debug::set_throw_hook);
}

XTAL_PREBIND(Iterable){
	it->unset_native();
}

XTAL_BIND(Iterable){
	cpp_class<Iterator>()->bind();
}

XTAL_BIND(Iterator){

	it->inherit(cpp_class<Iterable>());
	it->def_fun(Xid(each), &Iterator_each);
	it->def_fun(Xid(block_first), &Iterator_block_first);

	Xemb((

Iterator::scan: method(pattern) fiber{
	exec: xpeg::Executor(this);
	while(exec.match(pattern)){
		yield exec;
	}	
}

Iterator::ip: method(n:3){
	m: MemoryStream();
	m.put_s("<[");
	a: this.take(n+1)[];
	m.put_s(a.take(n).join(","));
	if(a.length==n+1){
		m.put_s(" ...]>")
	}
	else{
		m.put_s("]>");
	}
	m.to_s.p;
	return chain(a.each, this);
}

Iterator::op_to_a: method{
	ret: [];
	this{
		ret.push_back(it); 
	}
	return ret;
}

Iterator::op_to_m: method{
	ret: [:];
	this{ |key, value|
		ret[key] = value; 
	}
	return ret;
}

Iterator::reverse: method{
	return this[].reverse;
}

Iterator::join: method(sep: ""){
	ret: MemoryStream();
	if(sep==""){
		this{
			ret.put_s(it.to_s);
		}
	}
	else{
		this{
			if(!first_step){
				ret.put_s(sep);
			}
			ret.put_s(it.to_s);
		}
	}
		
	return ret.to_s;
}

Iterator::with_index: method(start: 0) fiber{
	i: start;
	this{
		yield i, it;
		++i;
	}
}

Iterator::collect: method(conv) fiber{
	this{
		yield conv(it);
	}
}


Iterator::map: Iterator::collect;

Iterator::select: method(pred) fiber{
	this{
		if(pred(it)){
			yield it;
		}
	}
}

Iterator::filter: Iterator::select;

Iterator::break_if: method(pred) fiber{
	this{
		if(pred(it))
			break;
		yield it;
	}
}

Iterator::take: method(times){
	if(times<=0){
		return null;
	}

	return fiber{
		i: 0;
		this{
			yield it;
			i++;

			if(i>=times){
				break;
			}
		}
	}
}

Iterator::zip: method(...){
	return builtin::zip(this, ...);
}

Iterator::unique: method(pred: null){
	if(pred){
		return fiber{
			prev: undefined;
			this{
				if(!pred(it, prev)){
					yield it;
					prev = it;
				}
			}
		}
	}

	return fiber{
		prev: undefined;
		this{
			if(prev!=it){
				yield it;
				prev = it;
			}
		}
	}
}

ClassicIterator: class{
	_current;
	_source;

	initialize: method(source){ _source, _current = source.block_first; }
	current: method _current;
	has_next: method !!_source;
	is_done: method !_source;
	next: method{ _source, _current = _source.block_next; }
	source: method _source;
}

Iterator::classic: method ClassicIterator(this);

chain: fun(...){
	arg: ...;
	return fiber{
		arg.ordered_arguments{
			it{
				yield it;
			}
		}
	}
}

Iterator::chain: method(...){
	return chain(this, ...);
}

Iterator::cycle: method fiber{
	temp: [];
	this{
		temp.push_back(it);
		yield it;
	}
	
	for(;;){
		temp{
			yield it;
		}
	}
}

Iterator::max_element: method(pred: null){
	item: null;
	if(pred){
		this{
			if(item){
				if(pred(it, item))
					item = it;
			}
			else{
				item = it;
			}
		}
		return item;
	}

	this{
		if(item){
			if(item<it)
				item = it;
		}
		else{
			item = it;
		}
	}
	return item;
}

Iterator::min_element: method(pred: null){
	item: null;
	if(pred){
		this{
			if(item){
				if(pred(it, item))
					item = it;
			}
			else{
				item = it;
			}
		}
		return item;
	}

	this{
		if(item){
			if(item>it)
				item = it;
		}
		else{
			item = it;
		}
	}
	return item;
}

Iterator::find: method(pred){
	this{
		if(pred(it)){
			return it;
		}
	}
}

Iterator::inject: method(init, fn){
	result: init;
	this{
		result = fn(result, it);
	}
	return result;
}

Iterator::with_prev: method fiber{
	prev: undefined;
	this{
		yield prev, it;
		prev = it;
	}
}



builtin::range: fun(first, last, step:1){
	if(step==1){
		return fiber{
			for(i:first; i<last; i++){
				yield i;
			}
		}
	}
	else{
		return fiber{
			for(i:first; i<last; i+=step){
				yield i;
			}
		}
	}
}
	),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x0d\x8d\x6c\x00\x01\x79\x00\x01\x00\x45\x79\x00\x02\x00\x3c\x33\x00\x01\x0c\x6c\x00\x04\x30\x00\x05\x00\x2e\x01\x00\x01\x00\x22\x00\x1a\x01\x1b\x00\x2f\x01\x00\x01\x00\x00\x06\x3a\x00\x17\x1b\x00\x28\x01\x1a\x01\x1b"
"\x00\x2f\x01\x00\x01\x00\x00\x06\x3a\x00\x05\x3c\xff\xed\x35\x00\x01\x27\x00\x27\x01\x27\x00\x31\x00\x07\x00\x6c\x00\x01\x79\x00\x03\x00\x9e\x4a\x00\x00\x06\x06\x03\x22\x00\x33\x00\x04\x6c\x00\x0b\x2e\x00\x00\x01\x00\x22\x01\x2a\x00\x01\x1b\x01\x2f\x01\x00"
"\x00\x00\x00\x0c\x1b\x02\x06\x01\x51\x0c\x2f\x01\x00\x01\x00\x00\x0d\x2c\x00\x0e\x01\x22\x00\x2a\x00\x02\x1b\x02\x1b\x00\x2f\x01\x00\x01\x00\x00\x0d\x2f\x01\x00\x01\x00\x00\x0f\x1b\x01\x2f\x01\x00\x00\x00\x00\x0c\x1b\x00\x2c\x00\x10\x01\x1b\x02\x06\x01\x51"
"\x3d\x00\x14\x3a\x00\x11\x2a\x00\x03\x1b\x01\x2f\x01\x00\x00\x00\x00\x0c\x3c\x00\x0e\x2a\x00\x04\x1b\x01\x2f\x01\x00\x00\x00\x00\x0c\x1b\x01\x2c\x00\x11\x01\x2c\x00\x12\x00\x1b\x00\x2c\x00\x13\x01\x0c\x6c\x00\x14\x2e\x02\x00\x01\x01\x35\x00\x04\x27\x00\x31"
"\x00\x15\x00\x6c\x00\x01\x79\x00\x04\x00\x73\x33\x00\x07\x74\x22\x00\x33\x00\x08\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x01\x1b\x01\x3a\x00\x1f\x1b\x00\x1b\x02\x2f\x01\x00\x00\x00\x00\x1a\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c"
"\xff\xe5\x38\x00\x2a\x37\x36\x00\x02\x33\x00\x0b\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x0b\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x08\x1b\x00\x35\x00\x07\x27\x01\x35\x00\x07\x27\x00\x31\x00\x0e\x00"
"\x6c\x00\x01\x79\x00\x05\x00\x73\x33\x00\x0c\x76\x22\x00\x33\x00\x0d\x0c\x2c\x00\x19\x03\x22\x00\x22\x01\x22\x02\x36\x00\x03\x1b\x02\x3a\x00\x1d\x1b\x00\x1b\x03\x1b\x01\x50\x1b\x02\x2c\x00\x1b\x03\x22\x00\x22\x01\x22\x02\x1b\x02\x3a\x00\x05\x3c\xff\xe7\x38"
"\x00\x2a\x37\x36\x00\x04\x33\x00\x10\x22\x00\x1b\x00\x1b\x03\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x10\x37\x1b\x02\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x0d\x1b\x00\x35\x00\x0c\x27\x01\x35\x00\x0c\x27\x00\x31\x00\x24\x00\x6c\x00\x01"
"\x79\x00\x06\x00\x10\x0c\x2c\x00\x0e\x01\x2f\x00\x00\x01\x01\x00\x25\x27\x00\x31\x00\x25\x00\x6c\x00\x01\x79\x00\x07\x01\x14\x4a\x00\x00\x07\x2a\x00\x05\x22\x00\x33\x00\x12\x6c\x00\x0b\x2e\x00\x00\x01\x00\x22\x00\x1b\x01\x2a\x00\x05\x3d\x00\x6b\x3a\x00\x68"
"\x33\x00\x14\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x05\x1b\x01\x3a\x00\x23\x1b\x00\x2c\x00\x11\x01\x1b\x02\x2f\x01\x00\x00\x00\x00\x0c\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xe1\x38\x00\x2a\x37\x36\x00\x06\x33\x00\x17\x22"
"\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x17\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x14\x3c\x00\x7f\x33\x00\x19\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x07\x1b\x01\x3a\x00\x3d\x1b\x00\x2c\x00\x11\x01"
"\x1b\x02\x2f\x01\x00\x00\x00\x00\x0c\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x1f\x1b\x03\x1b\x02\x2f\x01\x00\x00\x00\x00\x0c\x1b\x00\x2c\x00\x11\x01\x1b\x02\x2f\x01\x00\x00\x00\x00\x0c\x3c\xff\xd6\x38\x00\x2a\x37\x36\x00\x08\x33\x00\x1e\x22"
"\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x1e\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x19\x1b\x00\x2f\x00\x00\x01\x01\x00\x11\x35\x00\x12\x27\x00\x31\x00\x0f\x00\x6c\x00\x01\x79\x00\x08\x00\x7d\x49\x00\x00"
"\x06\x06\x00\x21\x00\x79\x00\x09\x00\x6c\x33\x00\x1f\x1a\x01\x22\x00\x33\x00\x20\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x09\x1b\x01\x3a\x00\x1e\x1b\x02\x1b\x00\x28\x02\x15\x02\x22\x02\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff"
"\xe6\x38\x00\x2a\x37\x36\x00\x0a\x33\x00\x23\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x23\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x20\x35\x00\x1f\x27\x00\x27\x01\x27\x00\x31\x00\x33\x00\x6c\x00\x01\x79"
"\x00\x0a\x00\x6c\x79\x00\x0b\x00\x63\x33\x00\x25\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x0b\x1b\x01\x3a\x00\x1f\x1b\x00\x1a\x02\x2e\x01\x00\x01\x00\x28\x01\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xe5\x38\x00\x2a\x37\x36\x00"
"\x0c\x33\x00\x28\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x28\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x25\x27\x00\x27\x01\x27\x00\x31\x00\x38\x00\x6c\x00\x01\x6c\x00\x01\x30\x00\x38\x00\x31\x00\x39\x00"
"\x6c\x00\x01\x79\x00\x0c\x00\x71\x79\x00\x0d\x00\x68\x33\x00\x2a\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x0d\x1b\x01\x3a\x00\x24\x1b\x00\x1a\x02\x2e\x01\x00\x01\x00\x3a\x00\x06\x1b\x00\x28\x01\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05"
"\x3c\xff\xe0\x38\x00\x2a\x37\x36\x00\x0e\x33\x00\x2e\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x2e\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x2a\x27\x00\x27\x01\x27\x00\x31\x00\x3e\x00\x6c\x00\x01\x6c\x00"
"\x01\x30\x00\x3e\x00\x31\x00\x3f\x00\x6c\x00\x01\x79\x00\x0e\x00\x74\x79\x00\x0f\x00\x6b\x33\x00\x30\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x0f\x1b\x01\x3a\x00\x27\x1b\x00\x1a\x02\x2e\x01\x00\x01\x00\x3a\x00\x05\x3c\x00\x18\x1b\x00\x28\x01\x1b\x01\x2c"
"\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xdd\x38\x00\x2a\x37\x36\x00\x10\x33\x00\x33\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x33\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x30\x27\x00\x27"
"\x01\x27\x00\x31\x00\x44\x00\x6c\x00\x01\x79\x00\x10\x00\x8d\x1a\x00\x06\x00\x40\x00\x08\x3b\x00\x05\x01\x27\x01\x79\x00\x11\x00\x77\x33\x00\x36\x06\x00\x22\x00\x33\x00\x37\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x11\x1b\x01\x3a\x00\x29\x1b\x00\x28\x01"
"\x15\x02\x22\x02\x1b\x02\x1a\x03\x42\x00\x08\x3b\x00\x05\x3c\x00\x14\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xdb\x38\x00\x2a\x37\x36\x00\x12\x33\x00\x3b\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b"
"\x35\x00\x3b\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x37\x35\x00\x36\x27\x00\x27\x01\x27\x00\x31\x00\x0d\x00\x6c\x00\x01\x79\x00\x12\x00\x12\x0c\x0b\x6c\x00\x4a\x30\x00\x4b\x00\x2e\x01\x00\x01\x03\x27\x00\x31\x00\x4b\x00\x6c\x00\x01\x79\x00\x13"
"\x01\x04\x49\x00\x00\x05\x01\x21\x00\x1a\x00\x3a\x00\x7e\x79\x00\x14\x00\x77\x33\x00\x3f\x02\x22\x00\x33\x00\x40\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x13\x1b\x01\x3a\x00\x2a\x1b\x00\x1b\x02\x1a\x03\x2e\x02\x00\x01\x00\x3b\x00\x0a\x1b\x00\x28\x01\x1b"
"\x00\x22\x02\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xda\x38\x00\x2a\x37\x36\x00\x14\x33\x00\x44\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x44\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39"
"\x35\x00\x40\x35\x00\x3f\x27\x00\x27\x01\x79\x00\x15\x00\x73\x33\x00\x45\x02\x22\x00\x33\x00\x46\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x15\x1b\x01\x3a\x00\x26\x1b\x02\x1b\x00\x3e\x00\x0d\x3b\x00\x0a\x1b\x00\x28\x01\x1b\x00\x22\x02\x1b\x01\x2c\x00\x1b"
"\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xde\x38\x00\x2a\x37\x36\x00\x16\x33\x00\x4a\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x4a\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x46\x35\x00\x45\x27\x00"
"\x27\x01\x27\x00\x31\x00\x55\x00\x71\x00\x00\x01\x01\x73\x00\x06\x00\x5f\x00\x79\x00\x16\x00\x12\x1b\x00\x2c\x00\x19\x02\x25\x00\x00\x00\x25\x01\x00\x00\x27\x00\x01\x73\x00\x05\x00\x61\x00\x7a\x00\x00\x00\x00\x01\x73\x00\x04\x00\x62\x00\x79\x00\x17\x00\x0c"
"\x24\x01\x00\x00\x4e\x4e\x27\x01\x27\x00\x01\x73\x00\x03\x00\x63\x00\x79\x00\x18\x00\x0b\x24\x01\x00\x00\x4e\x27\x01\x27\x00\x01\x73\x00\x02\x00\x64\x00\x79\x00\x19\x00\x14\x24\x01\x00\x00\x2c\x00\x1b\x02\x25\x00\x00\x00\x25\x01\x00\x00\x27\x00\x01\x73\x00"
"\x01\x00\x65\x00\x7a\x00\x01\x00\x00\x01\x73\x00\x00\x00\x66\x00\x72\x6e\x00\x67\x6c\x00\x01\x79\x00\x1a\x00\x0d\x0c\x6c\x00\x67\x2e\x01\x00\x01\x01\x27\x00\x31\x00\x68\x00\x79\x00\x1b\x00\xcb\x32\x00\x4d\x0b\x21\x00\x79\x00\x1c\x00\xb6\x33\x00\x4f\x1a\x02"
"\x2c\x00\x6c\x01\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x17\x1b\x01\x3a\x00\x6d\x33\x00\x52\x1b\x02\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x18\x1b\x01\x3a\x00\x18\x1b\x00\x28\x01\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xec\x38"
"\x00\x2a\x37\x36\x00\x19\x33\x00\x55\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x55\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x52\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\x97\x38"
"\x00\x2a\x37\x36\x00\x1a\x33\x00\x56\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x56\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x4f\x27\x00\x34\x00\x4d\x27\x01\x34\x00\x4d\x27\x00\x6e\x00\x14\x6c\x00\x01\x79"
"\x00\x1d\x00\x0e\x0c\x0b\x6c\x00\x14\x2e\x01\x00\x01\x03\x27\x00\x31\x00\x14\x00\x6c\x00\x01\x79\x00\x1e\x00\xd5\x79\x00\x1f\x00\xcc\x33\x00\x58\x74\x22\x00\x33\x00\x59\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x1b\x1b\x01\x3a\x00\x23\x1b\x00\x1b\x02\x2f"
"\x01\x00\x00\x00\x00\x1a\x1b\x00\x28\x01\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xe1\x38\x00\x2a\x37\x36\x00\x1c\x33\x00\x5c\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x5c\x37\x1b\x01\x2f"
"\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x59\x33\x00\x5f\x1b\x02\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x1d\x1b\x01\x3a\x00\x18\x1b\x00\x28\x01\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xec\x38\x00\x2a\x37\x36\x00\x1e\x33\x00\x62\x22"
"\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x62\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x5f\x3c\xff\xa6\x35\x00\x58\x27\x00\x27\x01\x27\x00\x31\x00\x78\x00\x6c\x00\x01\x79\x00\x20\x01\x07\x4a\x00\x00\x05\x01"
"\x22\x00\x33\x00\x63\x01\x22\x00\x1b\x01\x3a\x00\x7b\x33\x00\x65\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x1f\x1b\x01\x3a\x00\x32\x1b\x02\x3a\x00\x17\x1b\x00\x1b\x02\x1b\x03\x2e\x02\x00\x01\x00\x3a\x00\x06\x1b\x00\x22\x02\x3c\x00\x06\x1b\x00\x22\x02\x1b"
"\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xd2\x38\x00\x2a\x37\x36\x00\x20\x33\x00\x6a\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x6a\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x65\x1b"
"\x00\x35\x00\x63\x27\x01\x33\x00\x6b\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x21\x1b\x01\x3a\x00\x2e\x1b\x02\x3a\x00\x13\x1b\x02\x1b\x00\x3f\x00\x09\x3a\x00\x06\x1b\x00\x22\x02\x3c\x00\x06\x1b\x00\x22\x02\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01"
"\x3a\x00\x05\x3c\xff\xd6\x38\x00\x2a\x37\x36\x00\x22\x33\x00\x70\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x70\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x6b\x1b\x00\x35\x00\x63\x27\x01\x35\x00\x63\x27\x00"
"\x31\x00\x81\x00\x6c\x00\x01\x79\x00\x21\x01\x07\x4a\x00\x00\x05\x01\x22\x00\x33\x00\x71\x01\x22\x00\x1b\x01\x3a\x00\x7b\x33\x00\x73\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x23\x1b\x01\x3a\x00\x32\x1b\x02\x3a\x00\x17\x1b\x00\x1b\x02\x1b\x03\x2e\x02\x00"
"\x01\x00\x3a\x00\x06\x1b\x00\x22\x02\x3c\x00\x06\x1b\x00\x22\x02\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xd2\x38\x00\x2a\x37\x36\x00\x24\x33\x00\x78\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35"
"\x00\x78\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x73\x1b\x00\x35\x00\x71\x27\x01\x33\x00\x79\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x25\x1b\x01\x3a\x00\x2e\x1b\x02\x3a\x00\x13\x1b\x02\x1b\x00\x41\x00\x09\x3a\x00\x06\x1b\x00\x22\x02\x3c\x00"
"\x06\x1b\x00\x22\x02\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xd6\x38\x00\x2a\x37\x36\x00\x26\x33\x00\x7e\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x7e\x37\x1b\x01\x2f\x00\x00\x00\x08\x00"
"\x1e\x39\x35\x00\x79\x1b\x00\x35\x00\x71\x27\x01\x35\x00\x71\x27\x00\x31\x00\x8a\x00\x6c\x00\x01\x79\x00\x22\x00\x6f\x33\x00\x80\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x27\x1b\x01\x3a\x00\x2b\x1b\x00\x1b\x02\x2e\x01\x00\x01\x00\x3a\x00\x0d\x1b\x00\x38"
"\x00\x03\x37\x35\x00\x80\x27\x01\x1b\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xd9\x38\x00\x2a\x37\x36\x00\x28\x33\x00\x84\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x84\x37\x1b\x01\x2f\x00\x00"
"\x00\x08\x00\x1e\x39\x35\x00\x80\x27\x00\x31\x00\x8f\x00\x6c\x00\x01\x79\x00\x23\x00\x76\x33\x00\x85\x1b\x02\x22\x00\x33\x00\x86\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x29\x1b\x01\x3a\x00\x21\x1b\x02\x1b\x00\x1b\x03\x2e\x02\x00\x01\x00\x22\x02\x1b\x01"
"\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xe3\x38\x00\x2a\x37\x36\x00\x2a\x33\x00\x89\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x89\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x86\x1b\x00"
"\x35\x00\x85\x27\x01\x35\x00\x85\x27\x00\x31\x00\x96\x00\x6c\x00\x01\x79\x00\x24\x00\x74\x79\x00\x25\x00\x6b\x33\x00\x8a\x02\x22\x00\x33\x00\x8b\x0c\x2c\x00\x19\x02\x22\x00\x22\x01\x36\x00\x2b\x1b\x01\x3a\x00\x1e\x1b\x02\x1b\x00\x28\x02\x1b\x00\x22\x02\x1b"
"\x01\x2c\x00\x1b\x02\x22\x00\x22\x01\x1b\x01\x3a\x00\x05\x3c\xff\xe6\x38\x00\x2a\x37\x36\x00\x2c\x33\x00\x8e\x22\x00\x1b\x00\x1b\x02\x2f\x01\x00\x01\x08\x00\x1d\x3b\x00\x05\x1b\x00\x7b\x35\x00\x8e\x37\x1b\x01\x2f\x00\x00\x00\x08\x00\x1e\x39\x35\x00\x8b\x35"
"\x00\x8a\x27\x00\x27\x01\x27\x00\x31\x00\x9b\x00\x6c\x00\x4a\x79\x00\x26\x00\x80\x49\x00\x00\x06\x06\x01\x21\x00\x1a\x00\x06\x01\x3d\x00\x3a\x3a\x00\x37\x79\x00\x27\x00\x2d\x33\x00\x92\x1a\x03\x22\x00\x1b\x00\x1a\x02\x3f\x00\x1a\x3a\x00\x17\x1b\x00\x28\x01"
"\x15\x00\x22\x00\x1b\x00\x1a\x02\x3f\x00\x08\x3a\x00\x05\x3c\xff\xed\x35\x00\x92\x27\x00\x27\x01\x3c\x00\x37\x79\x00\x28\x00\x30\x33\x00\x96\x1a\x03\x22\x00\x1b\x00\x1a\x02\x3f\x00\x1d\x3a\x00\x1a\x1b\x00\x28\x01\x1b\x00\x1a\x01\x5f\x22\x00\x1b\x00\x1a\x02"
"\x3f\x00\x08\x3a\x00\x05\x3c\xff\xea\x35\x00\x96\x27\x00\x27\x01\x27\x00\x31\x00\xa1\x00\x27\x00\x7b\x00\x98\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x63\x00\x0d\x00\x00\x00\x00\x01\x03\x00\x01\x00\x12\x00\x1f\x00\x00\x00\x00\x01\x06\x00\x00\x00\x12\x00\x2d"
"\x00\x00\x00\x00\x01\x07\x00\x00\x00\x12\x00\x5f\x00\x00\x00\x00\x01\x09\x00\x02\x00\x12\x00\xba\x00\x00\x00\x00\x01\x11\x00\x00\x00\x12\x00\xc9\x00\x00\x00\x00\x01\x11\x00\x00\x00\x12\x00\xff\x00\x00\x00\x00\x00\x16\x00\x01\x00\x12\x00\x05\x01\x00\x00\x00"
"\x01\x17\x00\x02\x00\x12\x00\x14\x01\x00\x00\x00\x01\x1a\x00\x00\x00\x12\x00\x19\x01\x00\x00\x00\x01\x1a\x00\x00\x00\x12\x00\x3d\x01\x00\x00\x00\x01\x1c\x00\x01\x00\x12\x00\x7c\x01\x00\x00\x00\x00\x1f\x00\x01\x00\x12\x00\x82\x01\x00\x00\x00\x01\x20\x00\x03"
"\x00\x12\x00\x93\x01\x00\x00\x00\x01\x23\x00\x00\x00\x12\x00\x98\x01\x00\x00\x00\x01\x23\x00\x00\x00\x12\x00\xba\x01\x00\x00\x00\x01\x23\x00\x01\x00\x12\x00\xf9\x01\x00\x00\x00\x00\x25\x00\x00\x00\x12\x00\x1c\x02\x00\x00\x00\x01\x27\x00\x01\x00\x12\x00\x34"
"\x02\x00\x00\x00\x01\x28\x00\x00\x00\x12\x00\x34\x02\x00\x00\x00\x01\x28\x00\x02\x00\x12\x00\x43\x02\x00\x00\x00\x01\x2a\x00\x00\x00\x12\x00\x48\x02\x00\x00\x00\x01\x2a\x00\x00\x00\x12\x00\x70\x02\x00\x00\x00\x01\x2a\x00\x01\x00\x12\x00\x9a\x02\x00\x00\x00"
"\x01\x2b\x00\x00\x00\x12\x00\x9a\x02\x00\x00\x00\x01\x2b\x00\x02\x00\x12\x00\xa9\x02\x00\x00\x00\x01\x2d\x00\x00\x00\x12\x00\xae\x02\x00\x00\x00\x01\x2d\x00\x00\x00\x12\x00\xcc\x02\x00\x00\x00\x01\x2d\x00\x00\x00\x12\x00\xcc\x02\x00\x00\x00\x01\x2d\x00\x00"
"\x00\x12\x00\xf0\x02\x00\x00\x00\x01\x2d\x00\x01\x00\x12\x00\x3e\x03\x00\x00\x00\x01\x2f\x00\x01\x00\x12\x00\x45\x03\x00\x00\x00\x01\x30\x00\x02\x00\x12\x00\x54\x03\x00\x00\x00\x01\x32\x00\x00\x00\x12\x00\x59\x03\x00\x00\x00\x01\x32\x00\x00\x00\x12\x00\x7c"
"\x03\x00\x00\x00\x01\x32\x00\x01\x00\x12\x00\xbd\x03\x00\x00\x00\x01\x35\x00\x00\x00\x12\x00\xbd\x03\x00\x00\x00\x01\x35\x00\x02\x00\x12\x00\xcc\x03\x00\x00\x00\x01\x37\x00\x00\x00\x12\x00\xd1\x03\x00\x00\x00\x01\x37\x00\x00\x00\x12\x00\xf5\x03\x00\x00\x00"
"\x01\x37\x00\x01\x00\x12\x00\x41\x04\x00\x00\x00\x01\x3b\x00\x00\x00\x12\x00\x41\x04\x00\x00\x00\x01\x3b\x00\x02\x00\x12\x00\x50\x04\x00\x00\x00\x01\x3d\x00\x00\x00\x12\x00\x55\x04\x00\x00\x00\x01\x3d\x00\x00\x00\x12\x00\x61\x04\x00\x00\x00\x01\x3d\x00\x00"
"\x00\x12\x00\x7e\x04\x00\x00\x00\x01\x3d\x00\x01\x00\x12\x00\xca\x04\x00\x00\x00\x01\x41\x00\x00\x00\x12\x00\xca\x04\x00\x00\x00\x01\x41\x00\x02\x00\x12\x00\xd9\x04\x00\x00\x00\x01\x43\x00\x00\x00\x12\x00\xde\x04\x00\x00\x00\x01\x43\x00\x00\x00\x12\x00\x0a"
"\x05\x00\x00\x00\x01\x43\x00\x01\x00\x12\x00\x43\x05\x00\x00\x00\x05\x46\x00\x00\x00\x12\x00\x4d\x05\x00\x00\x00\x00\x46\x00\x00\x00\x12\x00\x55\x05\x00\x00\x00\x01\x46\x00\x01\x00\x12\x00\x5c\x05\x00\x00\x00\x01\x47\x00\x02\x00\x12\x00\x6b\x05\x00\x00\x00"
"\x01\x49\x00\x00\x00\x12\x00\x70\x05\x00\x00\x00\x01\x49\x00\x00\x00\x12\x00\x82\x05\x00\x00\x00\x00\x49\x00\x00\x00\x12\x00\x9e\x05\x00\x00\x00\x01\x49\x00\x01\x00\x12\x00\xda\x05\x00\x00\x00\x00\x4a\x00\x00\x00\x12\x00\xfd\x05\x00\x00\x00\x05\x4d\x00\x00"
"\x00\x12\x00\x02\x06\x00\x00\x00\x05\x4d\x00\x00\x00\x12\x00\x07\x06\x00\x00\x00\x01\x4d\x00\x01\x00\x12\x00\x0d\x06\x00\x00\x00\x01\x4e\x00\x02\x00\x12\x00\x1c\x06\x00\x00\x00\x01\x50\x00\x00\x00\x12\x00\x21\x06\x00\x00\x00\x01\x50\x00\x00\x00\x12\x00\x2f"
"\x06\x00\x00\x00\x01\x50\x00\x00\x00\x12\x00\x50\x06\x00\x00\x00\x01\x50\x00\x01\x00\x12\x00\x83\x06\x00\x00\x00\x00\x51\x00\x01\x00\x12\x00\x89\x06\x00\x00\x00\x01\x52\x00\x02\x00\x12\x00\x98\x06\x00\x00\x00\x01\x54\x00\x00\x00\x12\x00\x9d\x06\x00\x00\x00"
"\x01\x54\x00\x00\x00\x12\x00\xa7\x06\x00\x00\x00\x01\x54\x00\x00\x00\x12\x00\xc8\x06\x00\x00\x00\x01\x54\x00\x01\x00\x12\x00\x0c\x07\x00\x00\x00\x01\x61\x00\x00\x00\x12\x00\x5f\x07\x00\x00\x00\x00\x65\x00\x00\x00\x12\x00\xa4\x07\x00\x00\x00\x04\x69\x00\x01"
"\x00\x12\x00\xaf\x07\x00\x00\x00\x01\x6a\x00\x00\x00\x12\x00\xaf\x07\x00\x00\x00\x01\x6a\x00\x02\x00\x12\x00\xc3\x07\x00\x00\x00\x01\x6d\x00\x00\x00\x12\x00\xc8\x07\x00\x00\x00\x01\x6d\x00\x00\x00\x12\x00\xc8\x07\x00\x00\x00\x01\x6d\x00\x02\x00\x12\x00\xd8"
"\x07\x00\x00\x00\x01\x6f\x00\x00\x00\x12\x00\xdd\x07\x00\x00\x00\x01\x6f\x00\x00\x00\x12\x00\xfa\x07\x00\x00\x00\x01\x6f\x00\x01\x00\x12\x00\x3a\x08\x00\x00\x00\x01\x70\x00\x01\x00\x12\x00\x78\x08\x00\x00\x00\x00\x71\x00\x00\x00\x12\x00\x95\x08\x00\x00\x00"
"\x00\x71\x00\x01\x00\x12\x00\x9b\x08\x00\x00\x00\x01\x72\x00\x02\x00\x12\x00\xaa\x08\x00\x00\x00\x01\x74\x00\x00\x00\x12\x00\xaf\x08\x00\x00\x00\x01\x74\x00\x00\x00\x12\x00\xd7\x08\x00\x00\x00\x01\x74\x00\x01\x00\x12\x00\xfe\x08\x00\x00\x00\x01\x75\x00\x00"
"\x00\x12\x00\xfe\x08\x00\x00\x00\x01\x75\x00\x00\x00\x12\x00\xfe\x08\x00\x00\x00\x01\x75\x00\x02\x00\x12\x00\x0e\x09\x00\x00\x00\x01\x77\x00\x00\x00\x12\x00\x13\x09\x00\x00\x00\x01\x77\x00\x00\x00\x12\x00\x30\x09\x00\x00\x00\x01\x77\x00\x01\x00\x12\x00\x76"
"\x09\x00\x00\x00\x01\x7a\x00\x01\x00\x12\x00\x81\x09\x00\x00\x00\x01\x7b\x00\x00\x00\x12\x00\x81\x09\x00\x00\x00\x01\x7b\x00\x02\x00\x12\x00\x90\x09\x00\x00\x00\x01\x7d\x00\x00\x00\x12\x00\x95\x09\x00\x00\x00\x01\x7d\x00\x00\x00\x12\x00\x9a\x09\x00\x00\x00"
"\x01\x7d\x00\x00\x00\x12\x00\xaf\x09\x00\x00\x00\x01\x7d\x00\x00\x00\x12\x00\xcc\x09\x00\x00\x00\x01\x7d\x00\x01\x00\x12\x00\xfa\x09\x00\x00\x00\x01\x7e\x00\x02\x00\x12\x00\x09\x0a\x00\x00\x00\x01\x80\x00\x00\x00\x12\x00\x0e\x0a\x00\x00\x00\x01\x80\x00\x00"
"\x00\x12\x00\x13\x0a\x00\x00\x00\x01\x80\x00\x00\x00\x12\x00\x24\x0a\x00\x00\x00\x01\x80\x00\x00\x00\x12\x00\x41\x0a\x00\x00\x00\x01\x80\x00\x01\x00\x12\x00\x87\x0a\x00\x00\x00\x01\x83\x00\x01\x00\x12\x00\x92\x0a\x00\x00\x00\x01\x84\x00\x00\x00\x12\x00\x92"
"\x0a\x00\x00\x00\x01\x84\x00\x02\x00\x12\x00\xa1\x0a\x00\x00\x00\x01\x86\x00\x00\x00\x12\x00\xa6\x0a\x00\x00\x00\x01\x86\x00\x00\x00\x12\x00\xab\x0a\x00\x00\x00\x01\x86\x00\x00\x00\x12\x00\xc0\x0a\x00\x00\x00\x01\x86\x00\x00\x00\x12\x00\xdd\x0a\x00\x00\x00"
"\x01\x86\x00\x01\x00\x12\x00\x0b\x0b\x00\x00\x00\x01\x87\x00\x02\x00\x12\x00\x1a\x0b\x00\x00\x00\x01\x89\x00\x00\x00\x12\x00\x1f\x0b\x00\x00\x00\x01\x89\x00\x00\x00\x12\x00\x24\x0b\x00\x00\x00\x01\x89\x00\x00\x00\x12\x00\x35\x0b\x00\x00\x00\x01\x89\x00\x00"
"\x00\x12\x00\x52\x0b\x00\x00\x00\x01\x89\x00\x01\x00\x12\x00\x91\x0b\x00\x00\x00\x01\x8c\x00\x00\x00\x12\x00\x91\x0b\x00\x00\x00\x01\x8c\x00\x02\x00\x12\x00\xa0\x0b\x00\x00\x00\x01\x8e\x00\x00\x00\x12\x00\xa5\x0b\x00\x00\x00\x01\x8e\x00\x00\x00\x12\x00\xb1"
"\x0b\x00\x00\x00\x01\x8e\x00\x00\x00\x12\x00\xd5\x0b\x00\x00\x00\x01\x8e\x00\x01\x00\x12\x00\x0a\x0c\x00\x00\x00\x01\x92\x00\x01\x00\x12\x00\x11\x0c\x00\x00\x00\x01\x93\x00\x02\x00\x12\x00\x20\x0c\x00\x00\x00\x01\x95\x00\x00\x00\x12\x00\x25\x0c\x00\x00\x00"
"\x01\x95\x00\x00\x00\x12\x00\x4b\x0c\x00\x00\x00\x01\x95\x00\x01\x00\x12\x00\x8f\x0c\x00\x00\x00\x00\x97\x00\x01\x00\x12\x00\x95\x0c\x00\x00\x00\x01\x98\x00\x02\x00\x12\x00\xa4\x0c\x00\x00\x00\x01\x9a\x00\x00\x00\x12\x00\xa9\x0c\x00\x00\x00\x01\x9a\x00\x00"
"\x00\x12\x00\xcc\x0c\x00\x00\x00\x01\x9a\x00\x01\x00\x12\x00\x10\x0d\x00\x00\x00\x05\x9f\x00\x00\x00\x12\x00\x1a\x0d\x00\x00\x00\x05\x9f\x00\x00\x00\x12\x00\x1f\x0d\x00\x00\x00\x01\x9f\x00\x00\x00\x12\x00\x1f\x0d\x00\x00\x00\x01\x9f\x00\x01\x00\x12\x00\x30"
"\x0d\x00\x00\x00\x01\xa0\x00\x00\x00\x12\x00\x4f\x0d\x00\x00\x00\x05\xa0\x00\x00\x00\x12\x00\x54\x0d\x00\x00\x00\x01\xa0\x00\x00\x00\x12\x00\x54\x0d\x00\x00\x00\x01\xa0\x00\x01\x00\x12\x00\x65\x0d\x00\x00\x00\x01\xa1\x00\x00\x00\x12\x00\x00\x01\xfc\x06\x00"
"\x00\x01\x00\x58\x00\x07\x00\xcc\xcc\x02\x00\x56\x00\x00\xcc\xcc\xcc\x00\x29\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x08\x00\x00\x00\x05\x04\x02\x00\x01\x00\x00\x00\x00\x01\x01\x01\x0d\x00\x00\x00\x06\x01\x03\x00\x00\x00\x00\x00\x00"
"\x01\x00\x00\x57\x00\x00\x00\x05\x00\x08\x00\x01\x00\x00\x00\x00\x01\x00\x01\xff\x00\x00\x00\x05\x00\x16\x00\x00\x00\x00\x00\x00\x01\x00\x00\x7c\x01\x00\x00\x05\x00\x1f\x00\x00\x00\x00\x00\x00\x01\x00\x00\xf9\x01\x00\x00\x05\x00\x25\x00\x00\x00\x00\x00\x00"
"\x01\x00\x00\x13\x02\x00\x00\x05\x00\x26\x00\x01\x00\x00\x00\x00\x01\x00\x01\x31\x03\x00\x00\x05\x04\x2e\x00\x01\x00\x00\x00\x00\x01\x00\x01\x3e\x03\x00\x00\x06\x01\x2f\x00\x00\x00\x00\x00\x00\x01\x00\x00\xb8\x03\x00\x00\x05\x04\x34\x00\x01\x00\x00\x00\x00"
"\x01\x01\x01\xbd\x03\x00\x00\x06\x01\x35\x00\x00\x00\x00\x00\x00\x01\x00\x00\x3c\x04\x00\x00\x05\x04\x3a\x00\x01\x00\x00\x00\x00\x01\x01\x01\x41\x04\x00\x00\x06\x01\x3b\x00\x00\x00\x00\x00\x00\x01\x00\x00\xc5\x04\x00\x00\x05\x04\x40\x00\x01\x00\x00\x00\x00"
"\x01\x01\x01\xca\x04\x00\x00\x06\x01\x41\x00\x00\x00\x00\x00\x00\x01\x00\x00\x43\x05\x00\x00\x05\x04\x45\x00\x01\x00\x00\x00\x00\x01\x01\x01\x55\x05\x00\x00\x06\x01\x46\x00\x00\x00\x00\x00\x00\x01\x00\x00\xda\x05\x00\x00\x05\x02\x4a\x00\x00\x00\x00\x00\x00"
"\x01\x00\x00\xf6\x05\x00\x00\x05\x04\x4c\x00\x01\x00\x00\x00\x00\x01\x00\x01\x07\x06\x00\x00\x06\x01\x4d\x00\x00\x00\x00\x00\x00\x01\x00\x00\x83\x06\x00\x00\x06\x00\x51\x00\x00\x00\x00\x00\x00\x01\x00\x00\x0c\x07\x00\x00\x05\x00\x60\x00\x01\x00\x00\x00\x00"
"\x01\x01\x01\x34\x07\x00\x00\x05\x00\x63\x00\x00\x00\x00\x00\x00\x01\x00\x00\x4a\x07\x00\x00\x05\x00\x64\x00\x00\x00\x00\x00\x00\x01\x00\x00\x5f\x07\x00\x00\x05\x00\x65\x00\x00\x00\x00\x00\x00\x01\x00\x00\x90\x07\x00\x00\x05\x00\x68\x00\x00\x00\x00\x00\x00"
"\x01\x00\x00\xa4\x07\x00\x00\x03\x02\x69\x00\x00\x00\x00\x00\x00\x01\x00\x00\xaf\x07\x00\x00\x06\x01\x6a\x00\x00\x00\x00\x00\x00\x01\x00\x00\x78\x08\x00\x00\x05\x02\x71\x00\x00\x00\x00\x00\x00\x01\x00\x00\x90\x08\x00\x00\x05\x00\x71\x00\x00\x00\x00\x00\x00"
"\x01\x00\x00\x95\x08\x00\x00\x06\x00\x71\x00\x00\x00\x00\x00\x00\x01\x00\x00\x6f\x09\x00\x00\x05\x00\x79\x00\x01\x00\x00\x00\x00\x01\x00\x01\x80\x0a\x00\x00\x05\x00\x82\x00\x01\x00\x00\x00\x00\x01\x00\x01\x91\x0b\x00\x00\x05\x00\x8b\x00\x01\x00\x00\x00\x00"
"\x01\x01\x01\x0a\x0c\x00\x00\x05\x00\x90\x00\x02\x00\x00\x00\x00\x01\x02\x02\x8a\x0c\x00\x00\x05\x00\x97\x00\x00\x00\x00\x00\x00\x01\x00\x00\x8f\x0c\x00\x00\x06\x00\x97\x00\x00\x00\x00\x00\x00\x01\x00\x00\x08\x0d\x00\x00\x03\x04\x9c\x00\x03\x00\x00\x00\x00"
"\x01\x02\x03\x1f\x0d\x00\x00\x06\x01\x9f\x00\x00\x00\x00\x00\x00\x01\x00\x00\x54\x0d\x00\x00\x06\x01\xa0\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x2d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3a\x01\x00\x00\x57\x01\x00\x00\x61\x01\x00\x00\x00\x00\x00"
"\x00\x57\x01\x00\x00\x57\x01\x00\x00\xb7\x01\x00\x00\xd4\x01\x00\x00\xde\x01\x00\x00\x00\x00\x00\x00\xd4\x01\x00\x00\xd4\x01\x00\x00\x6d\x02\x00\x00\x8a\x02\x00\x00\x94\x02\x00\x00\x00\x00\x00\x00\x8a\x02\x00\x00\x8a\x02\x00\x00\xed\x02\x00\x00\x0a\x03\x00"
"\x00\x14\x03\x00\x00\x00\x00\x00\x00\x0a\x03\x00\x00\x0a\x03\x00\x00\x79\x03\x00\x00\x96\x03\x00\x00\xa0\x03\x00\x00\x00\x00\x00\x00\x96\x03\x00\x00\x96\x03\x00\x00\xf2\x03\x00\x00\x0f\x04\x00\x00\x19\x04\x00\x00\x00\x00\x00\x00\x0f\x04\x00\x00\x0f\x04\x00"
"\x00\x7b\x04\x00\x00\x98\x04\x00\x00\xa2\x04\x00\x00\x00\x00\x00\x00\x98\x04\x00\x00\x98\x04\x00\x00\x07\x05\x00\x00\x24\x05\x00\x00\x2e\x05\x00\x00\x00\x00\x00\x00\x24\x05\x00\x00\x24\x05\x00\x00\x9b\x05\x00\x00\xb8\x05\x00\x00\xc2\x05\x00\x00\x00\x00\x00"
"\x00\xb8\x05\x00\x00\xb8\x05\x00\x00\x4d\x06\x00\x00\x6a\x06\x00\x00\x74\x06\x00\x00\x00\x00\x00\x00\x6a\x06\x00\x00\x6a\x06\x00\x00\xc5\x06\x00\x00\xe2\x06\x00\x00\xec\x06\x00\x00\x00\x00\x00\x00\xe2\x06\x00\x00\xe2\x06\x00\x00\x37\x08\x00\x00\x54\x08\x00"
"\x00\x5e\x08\x00\x00\xf7\x07\x00\x00\x14\x08\x00\x00\x1e\x08\x00\x00\x00\x00\x00\x00\x14\x08\x00\x00\x14\x08\x00\x00\x00\x00\x00\x00\x54\x08\x00\x00\x54\x08\x00\x00\xd4\x08\x00\x00\xf1\x08\x00\x00\xfb\x08\x00\x00\x00\x00\x00\x00\xf1\x08\x00\x00\xf1\x08\x00"
"\x00\x2d\x09\x00\x00\x4a\x09\x00\x00\x54\x09\x00\x00\x00\x00\x00\x00\x4a\x09\x00\x00\x4a\x09\x00\x00\xc9\x09\x00\x00\xe6\x09\x00\x00\xf0\x09\x00\x00\x00\x00\x00\x00\xe6\x09\x00\x00\xe6\x09\x00\x00\x3e\x0a\x00\x00\x5b\x0a\x00\x00\x65\x0a\x00\x00\x00\x00\x00"
"\x00\x5b\x0a\x00\x00\x5b\x0a\x00\x00\xda\x0a\x00\x00\xf7\x0a\x00\x00\x01\x0b\x00\x00\x00\x00\x00\x00\xf7\x0a\x00\x00\xf7\x0a\x00\x00\x4f\x0b\x00\x00\x6c\x0b\x00\x00\x76\x0b\x00\x00\x00\x00\x00\x00\x6c\x0b\x00\x00\x6c\x0b\x00\x00\xd2\x0b\x00\x00\xef\x0b\x00"
"\x00\xf9\x0b\x00\x00\x00\x00\x00\x00\xef\x0b\x00\x00\xef\x0b\x00\x00\x48\x0c\x00\x00\x65\x0c\x00\x00\x6f\x0c\x00\x00\x00\x00\x00\x00\x65\x0c\x00\x00\x65\x0c\x00\x00\xc9\x0c\x00\x00\xe6\x0c\x00\x00\xf0\x0c\x00\x00\x00\x00\x00\x00\xe6\x0c\x00\x00\xe6\x0c\x00"
"\x00\x01\xc5\x00\x00\x00\x00\x1c\x01\x00\x00\x00\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x0a\x00\x00\x00\x08\x00\x00\x00\x08\x00\x00\x00\x10\x00\x00\x00\x04\x00\x00\x00\x1f\x00\x00\x00\x08\x00\x00\x00\x1f\x00\x00\x00\x05"
"\x00\x00\x00\x2d\x00\x00\x00\x07\x00\x00\x00\x2d\x00\x00\x00\x06\x00\x00\x00\x31\x00\x00\x00\x07\x00\x00\x00\x31\x00\x00\x00\x05\x00\x00\x00\x42\x00\x00\x00\x08\x00\x00\x00\x49\x00\x00\x00\x0a\x00\x00\x00\x4f\x00\x00\x00\x17\x00\x00\x00\x4f\x00\x00\x00\x0a"
"\x00\x00\x00\x52\x00\x00\x00\x17\x00\x00\x00\x62\x00\x00\x00\x0b\x00\x00\x00\x6c\x00\x00\x00\x0c\x00\x00\x00\x78\x00\x00\x00\x0d\x00\x00\x00\x8b\x00\x00\x00\x0e\x00\x00\x00\xa9\x00\x00\x00\x14\x00\x00\x00\xa9\x00\x00\x00\x0f\x00\x00\x00\xba\x00\x00\x00\x11"
"\x00\x00\x00\xba\x00\x00\x00\x10\x00\x00\x00\xc6\x00\x00\x00\x11\x00\x00\x00\xc9\x00\x00\x00\x14\x00\x00\x00\xc9\x00\x00\x00\x13\x00\x00\x00\xd5\x00\x00\x00\x14\x00\x00\x00\xd5\x00\x00\x00\x15\x00\x00\x00\xdf\x00\x00\x00\x16\x00\x00\x00\xf1\x00\x00\x00\x17"
"\x00\x00\x00\xf7\x00\x00\x00\x1f\x00\x00\x00\xf7\x00\x00\x00\x19\x00\x00\x00\xfa\x00\x00\x00\x1f\x00\x00\x00\x02\x01\x00\x00\x1a\x00\x00\x00\x05\x01\x00\x00\x1e\x00\x00\x00\x08\x01\x00\x00\x1b\x00\x00\x00\x11\x01\x00\x00\x1e\x00\x00\x00\x14\x01\x00\x00\x1b"
"\x00\x00\x00\x19\x01\x00\x00\x1d\x00\x00\x00\x19\x01\x00\x00\x1c\x00\x00\x00\x24\x01\x00\x00\x1d\x00\x00\x00\x24\x01\x00\x00\x1b\x00\x00\x00\x36\x01\x00\x00\x1e\x00\x00\x00\x6e\x01\x00\x00\x1f\x00\x00\x00\x74\x01\x00\x00\x27\x00\x00\x00\x74\x01\x00\x00\x21"
"\x00\x00\x00\x77\x01\x00\x00\x27\x00\x00\x00\x7f\x01\x00\x00\x22\x00\x00\x00\x82\x01\x00\x00\x26\x00\x00\x00\x85\x01\x00\x00\x23\x00\x00\x00\x90\x01\x00\x00\x26\x00\x00\x00\x93\x01\x00\x00\x23\x00\x00\x00\x98\x01\x00\x00\x25\x00\x00\x00\x98\x01\x00\x00\x24"
"\x00\x00\x00\x9f\x01\x00\x00\x25\x00\x00\x00\x9f\x01\x00\x00\x23\x00\x00\x00\xb3\x01\x00\x00\x26\x00\x00\x00\xeb\x01\x00\x00\x27\x00\x00\x00\xf1\x01\x00\x00\x2b\x00\x00\x00\xf1\x01\x00\x00\x29\x00\x00\x00\xf4\x01\x00\x00\x2b\x00\x00\x00\xf9\x01\x00\x00\x2a"
"\x00\x00\x00\x05\x02\x00\x00\x2b\x00\x00\x00\x0b\x02\x00\x00\x3e\x00\x00\x00\x0b\x02\x00\x00\x2d\x00\x00\x00\x0e\x02\x00\x00\x3e\x00\x00\x00\x1f\x02\x00\x00\x2e\x00\x00\x00\x29\x02\x00\x00\x3b\x00\x00\x00\x29\x02\x00\x00\x2f\x00\x00\x00\x34\x02\x00\x00\x33"
"\x00\x00\x00\x37\x02\x00\x00\x30\x00\x00\x00\x40\x02\x00\x00\x33\x00\x00\x00\x43\x02\x00\x00\x30\x00\x00\x00\x48\x02\x00\x00\x32\x00\x00\x00\x48\x02\x00\x00\x31\x00\x00\x00\x57\x02\x00\x00\x32\x00\x00\x00\x57\x02\x00\x00\x30\x00\x00\x00\x69\x02\x00\x00\x33"
"\x00\x00\x00\x9a\x02\x00\x00\x3b\x00\x00\x00\x9d\x02\x00\x00\x35\x00\x00\x00\xa6\x02\x00\x00\x3b\x00\x00\x00\xa9\x02\x00\x00\x35\x00\x00\x00\xae\x02\x00\x00\x3a\x00\x00\x00\xae\x02\x00\x00\x38\x00\x00\x00\xae\x02\x00\x00\x39\x00\x00\x00\xbd\x02\x00\x00\x3a"
"\x00\x00\x00\xbd\x02\x00\x00\x35\x00\x00\x00\xcc\x02\x00\x00\x3a\x00\x00\x00\xcc\x02\x00\x00\x38\x00\x00\x00\xcc\x02\x00\x00\x37\x00\x00\x00\xd7\x02\x00\x00\x38\x00\x00\x00\xd7\x02\x00\x00\x39\x00\x00\x00\xe6\x02\x00\x00\x3a\x00\x00\x00\xe9\x02\x00\x00\x3b"
"\x00\x00\x00\x17\x03\x00\x00\x3d\x00\x00\x00\x23\x03\x00\x00\x3e\x00\x00\x00\x29\x03\x00\x00\x48\x00\x00\x00\x29\x03\x00\x00\x40\x00\x00\x00\x2c\x03\x00\x00\x48\x00\x00\x00\x39\x03\x00\x00\x46\x00\x00\x00\x41\x03\x00\x00\x41\x00\x00\x00\x45\x03\x00\x00\x46"
"\x00\x00\x00\x48\x03\x00\x00\x42\x00\x00\x00\x51\x03\x00\x00\x46\x00\x00\x00\x54\x03\x00\x00\x42\x00\x00\x00\x59\x03\x00\x00\x45\x00\x00\x00\x59\x03\x00\x00\x43\x00\x00\x00\x5f\x03\x00\x00\x44\x00\x00\x00\x63\x03\x00\x00\x45\x00\x00\x00\x63\x03\x00\x00\x42"
"\x00\x00\x00\x75\x03\x00\x00\x46\x00\x00\x00\xaa\x03\x00\x00\x48\x00\x00\x00\xb0\x03\x00\x00\x4f\x00\x00\x00\xb0\x03\x00\x00\x48\x00\x00\x00\xb3\x03\x00\x00\x4f\x00\x00\x00\xb8\x03\x00\x00\x4c\x00\x00\x00\xc0\x03\x00\x00\x49\x00\x00\x00\xc9\x03\x00\x00\x4c"
"\x00\x00\x00\xcc\x03\x00\x00\x49\x00\x00\x00\xd1\x03\x00\x00\x4b\x00\x00\x00\xd1\x03\x00\x00\x4a\x00\x00\x00\xdc\x03\x00\x00\x4b\x00\x00\x00\xdc\x03\x00\x00\x49\x00\x00\x00\xee\x03\x00\x00\x4c\x00\x00\x00\x20\x04\x00\x00\x4f\x00\x00\x00\x34\x04\x00\x00\x59"
"\x00\x00\x00\x34\x04\x00\x00\x51\x00\x00\x00\x37\x04\x00\x00\x59\x00\x00\x00\x3c\x04\x00\x00\x57\x00\x00\x00\x44\x04\x00\x00\x52\x00\x00\x00\x4d\x04\x00\x00\x57\x00\x00\x00\x50\x04\x00\x00\x52\x00\x00\x00\x55\x04\x00\x00\x56\x00\x00\x00\x55\x04\x00\x00\x55"
"\x00\x00\x00\x55\x04\x00\x00\x53\x00\x00\x00\x61\x04\x00\x00\x55\x00\x00\x00\x61\x04\x00\x00\x54\x00\x00\x00\x65\x04\x00\x00\x55\x00\x00\x00\x65\x04\x00\x00\x56\x00\x00\x00\x65\x04\x00\x00\x52\x00\x00\x00\x77\x04\x00\x00\x57\x00\x00\x00\xa9\x04\x00\x00\x59"
"\x00\x00\x00\xbd\x04\x00\x00\x63\x00\x00\x00\xbd\x04\x00\x00\x5b\x00\x00\x00\xc0\x04\x00\x00\x63\x00\x00\x00\xc5\x04\x00\x00\x61\x00\x00\x00\xcd\x04\x00\x00\x5c\x00\x00\x00\xd6\x04\x00\x00\x61\x00\x00\x00\xd9\x04\x00\x00\x5c\x00\x00\x00\xde\x04\x00\x00\x60"
"\x00\x00\x00\xde\x04\x00\x00\x5e\x00\x00\x00\xde\x04\x00\x00\x5d\x00\x00\x00\xea\x04\x00\x00\x5e\x00\x00\x00\xed\x04\x00\x00\x5f\x00\x00\x00\xf1\x04\x00\x00\x60\x00\x00\x00\xf1\x04\x00\x00\x5c\x00\x00\x00\x03\x05\x00\x00\x61\x00\x00\x00\x35\x05\x00\x00\x63"
"\x00\x00\x00\x3b\x05\x00\x00\x73\x00\x00\x00\x3b\x05\x00\x00\x63\x00\x00\x00\x3e\x05\x00\x00\x73\x00\x00\x00\x43\x05\x00\x00\x66\x00\x00\x00\x43\x05\x00\x00\x64\x00\x00\x00\x4d\x05\x00\x00\x66\x00\x00\x00\x4d\x05\x00\x00\x65\x00\x00\x00\x50\x05\x00\x00\x66"
"\x00\x00\x00\x50\x05\x00\x00\x73\x00\x00\x00\x50\x05\x00\x00\x72\x00\x00\x00\x58\x05\x00\x00\x69\x00\x00\x00\x5c\x05\x00\x00\x72\x00\x00\x00\x5f\x05\x00\x00\x6a\x00\x00\x00\x68\x05\x00\x00\x72\x00\x00\x00\x6b\x05\x00\x00\x6a\x00\x00\x00\x70\x05\x00\x00\x71"
"\x00\x00\x00\x70\x05\x00\x00\x6b\x00\x00\x00\x74\x05\x00\x00\x6c\x00\x00\x00\x78\x05\x00\x00\x70\x00\x00\x00\x78\x05\x00\x00\x6e\x00\x00\x00\x82\x05\x00\x00\x70\x00\x00\x00\x82\x05\x00\x00\x6f\x00\x00\x00\x85\x05\x00\x00\x70\x00\x00\x00\x85\x05\x00\x00\x71"
"\x00\x00\x00\x85\x05\x00\x00\x6a\x00\x00\x00\x97\x05\x00\x00\x72\x00\x00\x00\xcc\x05\x00\x00\x73\x00\x00\x00\xd2\x05\x00\x00\x77\x00\x00\x00\xd2\x05\x00\x00\x75\x00\x00\x00\xd5\x05\x00\x00\x77\x00\x00\x00\xda\x05\x00\x00\x76\x00\x00\x00\xe8\x05\x00\x00\x77"
"\x00\x00\x00\xee\x05\x00\x00\x8f\x00\x00\x00\xee\x05\x00\x00\x79\x00\x00\x00\xf1\x05\x00\x00\x8f\x00\x00\x00\xfd\x05\x00\x00\x84\x00\x00\x00\xfd\x05\x00\x00\x7a\x00\x00\x00\x02\x06\x00\x00\x84\x00\x00\x00\x02\x06\x00\x00\x83\x00\x00\x00\x0a\x06\x00\x00\x7c"
"\x00\x00\x00\x0d\x06\x00\x00\x83\x00\x00\x00\x10\x06\x00\x00\x7d\x00\x00\x00\x19\x06\x00\x00\x83\x00\x00\x00\x1c\x06\x00\x00\x7d\x00\x00\x00\x21\x06\x00\x00\x82\x00\x00\x00\x21\x06\x00\x00\x81\x00\x00\x00\x21\x06\x00\x00\x7e\x00\x00\x00\x2f\x06\x00\x00\x81"
"\x00\x00\x00\x2f\x06\x00\x00\x7f\x00\x00\x00\x33\x06\x00\x00\x80\x00\x00\x00\x37\x06\x00\x00\x81\x00\x00\x00\x37\x06\x00\x00\x82\x00\x00\x00\x37\x06\x00\x00\x7d\x00\x00\x00\x49\x06\x00\x00\x83\x00\x00\x00\x7e\x06\x00\x00\x84\x00\x00\x00\x7e\x06\x00\x00\x8f"
"\x00\x00\x00\x7e\x06\x00\x00\x8e\x00\x00\x00\x86\x06\x00\x00\x87\x00\x00\x00\x89\x06\x00\x00\x8e\x00\x00\x00\x8c\x06\x00\x00\x88\x00\x00\x00\x95\x06\x00\x00\x8e\x00\x00\x00\x98\x06\x00\x00\x88\x00\x00\x00\x9d\x06\x00\x00\x8d\x00\x00\x00\x9d\x06\x00\x00\x8c"
"\x00\x00\x00\x9d\x06\x00\x00\x89\x00\x00\x00\xa7\x06\x00\x00\x8c\x00\x00\x00\xa7\x06\x00\x00\x8a\x00\x00\x00\xab\x06\x00\x00\x8b\x00\x00\x00\xaf\x06\x00\x00\x8c\x00\x00\x00\xaf\x06\x00\x00\x8d\x00\x00\x00\xaf\x06\x00\x00\x88\x00\x00\x00\xc1\x06\x00\x00\x8e"
"\x00\x00\x00\xf6\x06\x00\x00\x8f\x00\x00\x00\xfc\x06\x00\x00\x9b\x00\x00\x00\x07\x07\x00\x00\x95\x00\x00\x00\x23\x07\x00\x00\x96\x00\x00\x00\x2f\x07\x00\x00\x97\x00\x00\x00\x45\x07\x00\x00\x98\x00\x00\x00\x5a\x07\x00\x00\x99\x00\x00\x00\x78\x07\x00\x00\x9a"
"\x00\x00\x00\x85\x07\x00\x00\x9b\x00\x00\x00\x88\x07\x00\x00\x9d\x00\x00\x00\x9f\x07\x00\x00\xa8\x00\x00\x00\xa7\x07\x00\x00\xa0\x00\x00\x00\xaa\x07\x00\x00\xa8\x00\x00\x00\xaa\x07\x00\x00\xa7\x00\x00\x00\xb2\x07\x00\x00\xa2\x00\x00\x00\xc0\x07\x00\x00\xa7"
"\x00\x00\x00\xc3\x07\x00\x00\xa2\x00\x00\x00\xc8\x07\x00\x00\xa6\x00\x00\x00\xcb\x07\x00\x00\xa3\x00\x00\x00\xd5\x07\x00\x00\xa6\x00\x00\x00\xd8\x07\x00\x00\xa3\x00\x00\x00\xdd\x07\x00\x00\xa5\x00\x00\x00\xdd\x07\x00\x00\xa4\x00\x00\x00\xe1\x07\x00\x00\xa5"
"\x00\x00\x00\xe1\x07\x00\x00\xa3\x00\x00\x00\xf3\x07\x00\x00\xa6\x00\x00\x00\x21\x08\x00\x00\xa2\x00\x00\x00\x33\x08\x00\x00\xa7\x00\x00\x00\x68\x08\x00\x00\xa8\x00\x00\x00\x70\x08\x00\x00\xac\x00\x00\x00\x70\x08\x00\x00\xaa\x00\x00\x00\x73\x08\x00\x00\xac"
"\x00\x00\x00\x78\x08\x00\x00\xab\x00\x00\x00\x82\x08\x00\x00\xac\x00\x00\x00\x88\x08\x00\x00\xbc\x00\x00\x00\x88\x08\x00\x00\xae\x00\x00\x00\x8b\x08\x00\x00\xbc\x00\x00\x00\x90\x08\x00\x00\xba\x00\x00\x00\x98\x08\x00\x00\xaf\x00\x00\x00\x9b\x08\x00\x00\xb5"
"\x00\x00\x00\x9e\x08\x00\x00\xb0\x00\x00\x00\xa7\x08\x00\x00\xb5\x00\x00\x00\xaa\x08\x00\x00\xb0\x00\x00\x00\xaf\x08\x00\x00\xb3\x00\x00\x00\xaf\x08\x00\x00\xb1\x00\x00\x00\xba\x08\x00\x00\xb2\x00\x00\x00\xbe\x08\x00\x00\xb3\x00\x00\x00\xbe\x08\x00\x00\xb0"
"\x00\x00\x00\xd0\x08\x00\x00\xb5\x00\x00\x00\xfe\x08\x00\x00\xba\x00\x00\x00\xfe\x08\x00\x00\xb9\x00\x00\x00\x01\x09\x00\x00\xb6\x00\x00\x00\x0b\x09\x00\x00\xb9\x00\x00\x00\x0e\x09\x00\x00\xb6\x00\x00\x00\x13\x09\x00\x00\xb8\x00\x00\x00\x13\x09\x00\x00\xb7"
"\x00\x00\x00\x17\x09\x00\x00\xb8\x00\x00\x00\x17\x09\x00\x00\xb6\x00\x00\x00\x29\x09\x00\x00\xb9\x00\x00\x00\x5a\x09\x00\x00\xba\x00\x00\x00\x61\x09\x00\x00\xbc\x00\x00\x00\x67\x09\x00\x00\xd5\x00\x00\x00\x67\x09\x00\x00\xbc\x00\x00\x00\x6a\x09\x00\x00\xd5"
"\x00\x00\x00\x79\x09\x00\x00\xbd\x00\x00\x00\x7c\x09\x00\x00\xc9\x00\x00\x00\x7c\x09\x00\x00\xbe\x00\x00\x00\x81\x09\x00\x00\xc9\x00\x00\x00\x81\x09\x00\x00\xc8\x00\x00\x00\x84\x09\x00\x00\xbf\x00\x00\x00\x8d\x09\x00\x00\xc8\x00\x00\x00\x90\x09\x00\x00\xbf"
"\x00\x00\x00\x95\x09\x00\x00\xc7\x00\x00\x00\x95\x09\x00\x00\xc6\x00\x00\x00\x95\x09\x00\x00\xc0\x00\x00\x00\x9a\x09\x00\x00\xc3\x00\x00\x00\x9a\x09\x00\x00\xc2\x00\x00\x00\x9a\x09\x00\x00\xc1\x00\x00\x00\xa8\x09\x00\x00\xc2\x00\x00\x00\xac\x09\x00\x00\xc3"
"\x00\x00\x00\xaf\x09\x00\x00\xc6\x00\x00\x00\xaf\x09\x00\x00\xc5\x00\x00\x00\xb3\x09\x00\x00\xc6\x00\x00\x00\xb3\x09\x00\x00\xc7\x00\x00\x00\xb3\x09\x00\x00\xbf\x00\x00\x00\xc5\x09\x00\x00\xc8\x00\x00\x00\xfa\x09\x00\x00\xc9\x00\x00\x00\xfa\x09\x00\x00\xd4"
"\x00\x00\x00\xfd\x09\x00\x00\xcb\x00\x00\x00\x06\x0a\x00\x00\xd4\x00\x00\x00\x09\x0a\x00\x00\xcb\x00\x00\x00\x0e\x0a\x00\x00\xd3\x00\x00\x00\x0e\x0a\x00\x00\xd2\x00\x00\x00\x0e\x0a\x00\x00\xcc\x00\x00\x00\x13\x0a\x00\x00\xcf\x00\x00\x00\x13\x0a\x00\x00\xce"
"\x00\x00\x00\x13\x0a\x00\x00\xcd\x00\x00\x00\x1d\x0a\x00\x00\xce\x00\x00\x00\x21\x0a\x00\x00\xcf\x00\x00\x00\x24\x0a\x00\x00\xd2\x00\x00\x00\x24\x0a\x00\x00\xd1\x00\x00\x00\x28\x0a\x00\x00\xd2\x00\x00\x00\x28\x0a\x00\x00\xd3\x00\x00\x00\x28\x0a\x00\x00\xcb"
"\x00\x00\x00\x3a\x0a\x00\x00\xd4\x00\x00\x00\x72\x0a\x00\x00\xd5\x00\x00\x00\x78\x0a\x00\x00\xf0\x00\x00\x00\x78\x0a\x00\x00\xd7\x00\x00\x00\x7b\x0a\x00\x00\xf0\x00\x00\x00\x8a\x0a\x00\x00\xd8\x00\x00\x00\x8d\x0a\x00\x00\xe4\x00\x00\x00\x8d\x0a\x00\x00\xd9"
"\x00\x00\x00\x92\x0a\x00\x00\xe4\x00\x00\x00\x92\x0a\x00\x00\xe3\x00\x00\x00\x95\x0a\x00\x00\xda\x00\x00\x00\x9e\x0a\x00\x00\xe3\x00\x00\x00\xa1\x0a\x00\x00\xda\x00\x00\x00\xa6\x0a\x00\x00\xe2\x00\x00\x00\xa6\x0a\x00\x00\xe1\x00\x00\x00\xa6\x0a\x00\x00\xdb"
"\x00\x00\x00\xab\x0a\x00\x00\xde\x00\x00\x00\xab\x0a\x00\x00\xdd\x00\x00\x00\xab\x0a\x00\x00\xdc\x00\x00\x00\xb9\x0a\x00\x00\xdd\x00\x00\x00\xbd\x0a\x00\x00\xde\x00\x00\x00\xc0\x0a\x00\x00\xe1\x00\x00\x00\xc0\x0a\x00\x00\xe0\x00\x00\x00\xc4\x0a\x00\x00\xe1"
"\x00\x00\x00\xc4\x0a\x00\x00\xe2\x00\x00\x00\xc4\x0a\x00\x00\xda\x00\x00\x00\xd6\x0a\x00\x00\xe3\x00\x00\x00\x0b\x0b\x00\x00\xe4\x00\x00\x00\x0b\x0b\x00\x00\xef\x00\x00\x00\x0e\x0b\x00\x00\xe6\x00\x00\x00\x17\x0b\x00\x00\xef\x00\x00\x00\x1a\x0b\x00\x00\xe6"
"\x00\x00\x00\x1f\x0b\x00\x00\xee\x00\x00\x00\x1f\x0b\x00\x00\xed\x00\x00\x00\x1f\x0b\x00\x00\xe7\x00\x00\x00\x24\x0b\x00\x00\xea\x00\x00\x00\x24\x0b\x00\x00\xe9\x00\x00\x00\x24\x0b\x00\x00\xe8\x00\x00\x00\x2e\x0b\x00\x00\xe9\x00\x00\x00\x32\x0b\x00\x00\xea"
"\x00\x00\x00\x35\x0b\x00\x00\xed\x00\x00\x00\x35\x0b\x00\x00\xec\x00\x00\x00\x39\x0b\x00\x00\xed\x00\x00\x00\x39\x0b\x00\x00\xee\x00\x00\x00\x39\x0b\x00\x00\xe6\x00\x00\x00\x4b\x0b\x00\x00\xef\x00\x00\x00\x83\x0b\x00\x00\xf0\x00\x00\x00\x89\x0b\x00\x00\xf8"
"\x00\x00\x00\x89\x0b\x00\x00\xf2\x00\x00\x00\x8c\x0b\x00\x00\xf8\x00\x00\x00\x94\x0b\x00\x00\xf3\x00\x00\x00\x9d\x0b\x00\x00\xf8\x00\x00\x00\xa0\x0b\x00\x00\xf3\x00\x00\x00\xa5\x0b\x00\x00\xf7\x00\x00\x00\xa5\x0b\x00\x00\xf6\x00\x00\x00\xa5\x0b\x00\x00\xf4"
"\x00\x00\x00\xb1\x0b\x00\x00\xf6\x00\x00\x00\xb1\x0b\x00\x00\xf5\x00\x00\x00\xbc\x0b\x00\x00\xf6\x00\x00\x00\xbc\x0b\x00\x00\xf7\x00\x00\x00\xbc\x0b\x00\x00\xf3\x00\x00\x00\xce\x0b\x00\x00\xf8\x00\x00\x00\x02\x0c\x00\x00\x00\x01\x00\x00\x02\x0c\x00\x00\xfa"
"\x00\x00\x00\x05\x0c\x00\x00\x00\x01\x00\x00\x0d\x0c\x00\x00\xfb\x00\x00\x00\x11\x0c\x00\x00\xff\x00\x00\x00\x14\x0c\x00\x00\xfc\x00\x00\x00\x1d\x0c\x00\x00\xff\x00\x00\x00\x20\x0c\x00\x00\xfc\x00\x00\x00\x25\x0c\x00\x00\xfe\x00\x00\x00\x25\x0c\x00\x00\xfd"
"\x00\x00\x00\x32\x0c\x00\x00\xfe\x00\x00\x00\x32\x0c\x00\x00\xfc\x00\x00\x00\x44\x0c\x00\x00\xff\x00\x00\x00\x7c\x0c\x00\x00\x00\x01\x00\x00\x82\x0c\x00\x00\x0c\x01\x00\x00\x82\x0c\x00\x00\x02\x01\x00\x00\x85\x0c\x00\x00\x0c\x01\x00\x00\x8a\x0c\x00\x00\x08"
"\x01\x00\x00\x92\x0c\x00\x00\x03\x01\x00\x00\x95\x0c\x00\x00\x08\x01\x00\x00\x98\x0c\x00\x00\x04\x01\x00\x00\xa1\x0c\x00\x00\x08\x01\x00\x00\xa4\x0c\x00\x00\x04\x01\x00\x00\xa9\x0c\x00\x00\x07\x01\x00\x00\xa9\x0c\x00\x00\x05\x01\x00\x00\xaf\x0c\x00\x00\x06"
"\x01\x00\x00\xb3\x0c\x00\x00\x07\x01\x00\x00\xb3\x0c\x00\x00\x04\x01\x00\x00\xc5\x0c\x00\x00\x08\x01\x00\x00\xfa\x0c\x00\x00\x0c\x01\x00\x00\x00\x0d\x00\x00\x1b\x01\x00\x00\x00\x0d\x00\x00\x0c\x01\x00\x00\x03\x0d\x00\x00\x1b\x01\x00\x00\x10\x0d\x00\x00\x1a"
"\x01\x00\x00\x10\x0d\x00\x00\x0d\x01\x00\x00\x1a\x0d\x00\x00\x13\x01\x00\x00\x1a\x0d\x00\x00\x12\x01\x00\x00\x22\x0d\x00\x00\x0f\x01\x00\x00\x30\x0d\x00\x00\x11\x01\x00\x00\x30\x0d\x00\x00\x10\x01\x00\x00\x34\x0d\x00\x00\x11\x01\x00\x00\x34\x0d\x00\x00\x0f"
"\x01\x00\x00\x48\x0d\x00\x00\x12\x01\x00\x00\x4c\x0d\x00\x00\x13\x01\x00\x00\x4f\x0d\x00\x00\x1a\x01\x00\x00\x4f\x0d\x00\x00\x19\x01\x00\x00\x57\x0d\x00\x00\x16\x01\x00\x00\x65\x0d\x00\x00\x18\x01\x00\x00\x65\x0d\x00\x00\x17\x01\x00\x00\x69\x0d\x00\x00\x18"
"\x01\x00\x00\x69\x0d\x00\x00\x16\x01\x00\x00\x80\x0d\x00\x00\x19\x01\x00\x00\x84\x0d\x00\x00\x1a\x01\x00\x00\x84\x0d\x00\x00\x1b\x01\x00\x00\x8a\x0d\x00\x00\x1c\x01\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00"
"\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\xa2\x27\x00\x00\x00\x00\x27\x00\x00\x00\x08\x49\x74\x65\x72\x61\x74\x6f\x72\x27\x00\x00\x00\x07\x70"
"\x61\x74\x74\x65\x72\x6e\x27\x00\x00\x00\x04\x65\x78\x65\x63\x27\x00\x00\x00\x04\x78\x70\x65\x67\x27\x00\x00\x00\x08\x45\x78\x65\x63\x75\x74\x6f\x72\x27\x00\x00\x00\x05\x6d\x61\x74\x63\x68\x27\x00\x00\x00\x04\x73\x63\x61\x6e\x27\x00\x00\x00\x01\x6e\x27\x00"
"\x00\x00\x01\x6d\x27\x00\x00\x00\x01\x61\x27\x00\x00\x00\x0c\x4d\x65\x6d\x6f\x72\x79\x53\x74\x72\x65\x61\x6d\x27\x00\x00\x00\x05\x70\x75\x74\x5f\x73\x27\x00\x00\x00\x04\x74\x61\x6b\x65\x27\x00\x00\x00\x07\x6f\x70\x5f\x74\x6f\x5f\x61\x27\x00\x00\x00\x04\x6a"
"\x6f\x69\x6e\x27\x00\x00\x00\x06\x6c\x65\x6e\x67\x74\x68\x27\x00\x00\x00\x04\x74\x6f\x5f\x73\x27\x00\x00\x00\x01\x70\x27\x00\x00\x00\x04\x65\x61\x63\x68\x27\x00\x00\x00\x05\x63\x68\x61\x69\x6e\x27\x00\x00\x00\x02\x69\x70\x27\x00\x00\x00\x03\x72\x65\x74\x27"
"\x00\x00\x00\x08\x69\x74\x65\x72\x61\x74\x6f\x72\x27\x00\x00\x00\x02\x69\x74\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x27\x00\x00\x00\x09\x70\x75\x73\x68\x5f\x62\x61\x63\x6b\x27\x00\x00\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74"
"\x27\x00\x00\x00\x01\x65\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x63\x61\x74\x63\x68\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x62\x72\x65\x61\x6b\x03\x00\x00\x00\x1c\x03\x00\x00\x00\x1d\x27\x00\x00\x00\x03\x6b\x65\x79\x27\x00\x00\x00\x05\x76\x61\x6c"
"\x75\x65\x03\x00\x00\x00\x22\x27\x00\x00\x00\x07\x6f\x70\x5f\x74\x6f\x5f\x6d\x27\x00\x00\x00\x07\x72\x65\x76\x65\x72\x73\x65\x27\x00\x00\x00\x03\x73\x65\x70\x03\x00\x00\x00\x1c\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x03\x00\x00\x00\x1d"
"\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x05\x73\x74\x61\x72\x74\x27\x00\x00\x00\x01\x69\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x0a\x77\x69\x74\x68\x5f\x69\x6e\x64\x65\x78\x27\x00\x00\x00\x04\x63\x6f\x6e"
"\x76\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x07\x63\x6f\x6c\x6c\x65\x63\x74\x27\x00\x00\x00\x03\x6d\x61\x70\x27\x00\x00\x00\x04\x70\x72\x65\x64\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00"
"\x06\x73\x65\x6c\x65\x63\x74\x27\x00\x00\x00\x06\x66\x69\x6c\x74\x65\x72\x03\x00\x00\x00\x30\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x08\x62\x72\x65\x61\x6b\x5f\x69\x66\x27\x00\x00\x00\x05\x74\x69\x6d\x65\x73\x03\x00\x00"
"\x00\x2b\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x07\x62\x75\x69\x6c\x74\x69\x6e\x27\x00\x00\x00\x03\x7a\x69\x70\x03\x00\x00\x00\x30\x27\x00\x00\x00\x04\x70\x72\x65\x76\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00"
"\x00\x22\x03\x00\x00\x00\x37\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x06\x75\x6e\x69\x71\x75\x65\x27\x00\x00\x00\x07\x63\x75\x72\x72\x65\x6e\x74\x03\x00\x00\x00\x02\x27\x00\x00\x00\x0f\x61\x75\x74\x6f\x5f\x69\x6e\x69\x74"
"\x69\x61\x6c\x69\x7a\x65\x27\x00\x00\x00\x0a\x69\x6e\x69\x74\x69\x61\x6c\x69\x7a\x65\x03\x00\x00\x00\x39\x27\x00\x00\x00\x08\x68\x61\x73\x5f\x6e\x65\x78\x74\x27\x00\x00\x00\x07\x69\x73\x5f\x64\x6f\x6e\x65\x27\x00\x00\x00\x04\x6e\x65\x78\x74\x03\x00\x00\x00"
"\x02\x03\x00\x00\x00\x3a\x03\x00\x00\x00\x02\x03\x00\x00\x00\x3b\x03\x00\x00\x00\x39\x03\x00\x00\x00\x3c\x03\x00\x00\x00\x3d\x03\x00\x00\x00\x3e\x03\x00\x00\x00\x02\x27\x00\x00\x00\x0f\x43\x6c\x61\x73\x73\x69\x63\x49\x74\x65\x72\x61\x74\x6f\x72\x27\x00\x00"
"\x00\x07\x63\x6c\x61\x73\x73\x69\x63\x27\x00\x00\x00\x03\x61\x72\x67\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x27\x00\x00\x00\x11\x6f\x72\x64\x65\x72\x65\x64\x5f\x61\x72\x67\x75\x6d\x65\x6e\x74\x73\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22"
"\x03\x00\x00\x00\x22\x27\x00\x00\x00\x04\x74\x65\x6d\x70\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x05\x63\x79\x63\x6c\x65\x03\x00\x00\x00\x30\x27\x00\x00\x00\x04"
"\x69\x74\x65\x6d\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x0b\x6d\x61\x78\x5f\x65\x6c\x65\x6d\x65\x6e\x74\x03\x00\x00\x00\x30\x03\x00\x00\x00\x45\x03\x00\x00\x00"
"\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x0b\x6d\x69\x6e\x5f\x65\x6c\x65\x6d\x65\x6e\x74\x03\x00\x00\x00\x30\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00"
"\x00\x00\x04\x66\x69\x6e\x64\x27\x00\x00\x00\x04\x69\x6e\x69\x74\x27\x00\x00\x00\x02\x66\x6e\x27\x00\x00\x00\x06\x72\x65\x73\x75\x6c\x74\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x06\x69\x6e\x6a\x65\x63\x74\x03\x00\x00\x00"
"\x37\x03\x00\x00\x00\x1d\x03\x00\x00\x00\x1e\x03\x00\x00\x00\x22\x27\x00\x00\x00\x09\x77\x69\x74\x68\x5f\x70\x72\x65\x76\x27\x00\x00\x00\x05\x66\x69\x72\x73\x74\x27\x00\x00\x00\x04\x6c\x61\x73\x74\x27\x00\x00\x00\x04\x73\x74\x65\x70\x03\x00\x00\x00\x2b\x03"
"\x00\x00\x00\x2b\x27\x00\x00\x00\x05\x72\x61\x6e\x67\x65\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x06\x20\x27\x00\x00\x00\x02\x3c\x5b\x27\x00\x00\x00\x01\x2c\x26\x00\x00\x00\x06\x20\x2e\x2e\x2e\x5d\x3e\x27\x00\x00\x00\x02\x5d\x3e\x03\x00"
"\x00\x00\x06"
);

}

XTAL_PREBIND(Exception){
	it->def_ctor(ctor<Exception, const StringPtr&>()->param(1, Xid(message), empty_string));
}

XTAL_BIND(Exception){
	it->def_method(Xid(initialize), &Exception::initialize)->param(1, Xid(message), empty_string);
	it->def_method(Xid(to_s), &Exception::to_s);
	it->def_method(Xid(message), &Exception::message);
	it->def_method(Xid(backtrace), &Exception::backtrace);
	it->def_method(Xid(append_backtrace), &Exception::append_backtrace);
}

XTAL_PREBIND(StandardError){
	it->unset_native();
	it->inherit(cpp_class<Exception>());
}

XTAL_PREBIND(RuntimeError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}

XTAL_PREBIND(IOError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}

XTAL_PREBIND(LogicError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}

XTAL_PREBIND(CastError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}

XTAL_PREBIND(ArgumentError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}

XTAL_PREBIND(YieldError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}

XTAL_PREBIND(InstanceVariableError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}

XTAL_PREBIND(UnsupportedError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}

XTAL_PREBIND(RedefinedError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}

XTAL_PREBIND(AccessibilityError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}

XTAL_PREBIND(AssertionFailed){
	it->unset_native();
	it->inherit(cpp_class<Exception>());
}

XTAL_PREBIND(CompileError){
	it->unset_native();
	it->inherit(cpp_class<StandardError>());
}


void bind(){

	builtin()->def(Xid(Any), cpp_class<Any>());
	builtin()->def(Xid(String), cpp_class<String>());
	builtin()->def(Xid(Int), cpp_class<Int>());
	builtin()->def(Xid(Float), cpp_class<Float>());
	builtin()->def(Xid(Null), cpp_class<Null>());
	builtin()->def(Xid(Undefined), cpp_class<Undefined>());
	builtin()->def(Xid(Bool), cpp_class<Bool>());
	builtin()->def(Xid(IntRange), cpp_class<IntRange>());
	builtin()->def(Xid(FloatRange), cpp_class<FloatRange>());
	builtin()->def(Xid(ChRange), cpp_class<ChRange>());

	builtin()->def(Xid(Exception), cpp_class<Exception>());
	builtin()->def(Xid(StandardError), cpp_class<StandardError>());
	builtin()->def(Xid(RuntimeError), cpp_class<RuntimeError>());
	builtin()->def(Xid(IOError), cpp_class<IOError>());
	builtin()->def(Xid(LogicError), cpp_class<LogicError>());
	builtin()->def(Xid(CastError), cpp_class<CastError>());
	builtin()->def(Xid(ArgumentError), cpp_class<ArgumentError>());
	builtin()->def(Xid(YieldError), cpp_class<YieldError>());
	builtin()->def(Xid(InstanceVariableError), cpp_class<InstanceVariableError>());
	builtin()->def(Xid(UnsupportedError), cpp_class<UnsupportedError>());
	builtin()->def(Xid(RedefinedError), cpp_class<RedefinedError>());
	builtin()->def(Xid(AccessibilityError), cpp_class<AccessibilityError>());
	builtin()->def(Xid(AssertionFailed), cpp_class<AssertionFailed>());
	builtin()->def(Xid(CompileError), cpp_class<CompileError>());


	set_cpp_class<Expr>(cpp_class<xpeg::TreeNode>());

	builtin()->def(Xid(Array), cpp_class<Array>());
	builtin()->def(Xid(MultiValue), cpp_class<MultiValue>());
	builtin()->def(Xid(Map), cpp_class<Map>());
	builtin()->def(Xid(Set), cpp_class<Set>());

	builtin()->def(Xid(zip), cpp_class<ZipIter>());

	builtin()->def(Xid(Arguments), cpp_class<Arguments>());
	builtin()->def(Xid(Fun), cpp_class<Fun>());
	builtin()->def(Xid(Fiber), cpp_class<Fiber>());
	builtin()->def(Xid(Code), cpp_class<Code>());
	builtin()->def(Xid(Frame), cpp_class<Frame>());
	builtin()->def(Xid(Class), cpp_class<Class>());
	builtin()->def(Xid(lib), lib());
	builtin()->def(Xid(NativeFun), cpp_class<NativeFun>());

	set_cpp_class<NativeFunBindedThis>(cpp_class<NativeFun>());

	builtin()->def(Xid(Procedure), cpp_class<Procedure>());

	builtin()->def(Xid(Lib), cpp_class<Lib>());

	builtin()->def(Xid(Thread), cpp_class<Thread>());
	builtin()->def(Xid(Mutex), cpp_class<Mutex>());

	builtin()->def(Xid(Stream), cpp_class<Stream>());
	builtin()->def(Xid(MemoryStream), cpp_class<MemoryStream>());
	builtin()->def(Xid(StringStream), cpp_class<StringStream>());
	builtin()->def(Xid(FileStream), cpp_class<FileStream>());

	builtin()->def(Xid(Format), cpp_class<Format>());
	builtin()->def(Xid(Text), cpp_class<Text>());

	builtin()->def_fun(Xid(enable_debug), &enable_debug);
	builtin()->def_fun(Xid(disable_debug), &disable_debug);

	builtin()->def_fun(Xid(assign_text_map), &assign_text_map);
	builtin()->def_fun(Xid(append_text_map), &append_text_map);
	builtin()->def_fun(Xid(format), &format);
	builtin()->def_fun(Xid(text), &text);

	builtin()->def(Xid(builtin), builtin());

	builtin()->def(Xid(Iterator), cpp_class<Iterator>());
	builtin()->def(Xid(Iterable), cpp_class<Iterable>());
	
#ifndef XTAL_NO_PARSER
	builtin()->def_fun(Xid(compile_file), &compile_file);
	builtin()->def_fun(Xid(compile), &compile);
#endif

	builtin()->def_fun(Xid(gc), &::xtal::gc);
	builtin()->def_fun(Xid(full_gc), &::xtal::full_gc);
	builtin()->def_fun(Xid(disable_gc), &::xtal::disable_gc);
	builtin()->def_fun(Xid(enable_gc), &::xtal::enable_gc);
	//builtin()->def_fun(Xid(clock), &clock_);
	builtin()->def_fun(Xid(open), &xtal::open)->param(2, Xid(mode), Xid(r));
	builtin()->def_fun(Xid(interned_strings), &interned_strings);

	lib()->def(Xid(builtin), builtin());
}

void exec_script(){

	Xemb((
builtin::CompileError::initialize: method(message, errors:[]){
	Exception::initialize(%f"%s\n%s"(message, errors.join("\t\n")));	
}

builtin::print: fun(...){
	return stdout.print(...);
}

builtin::println: fun(...){
	return stdout.println(...);
}

builtin::printf: fun(format_string, ...){
	return stdout.printf(format_string, ...);
}

builtin::load: fun(file_name, ...){
	code: compile_file(file_name);
	return code(...);
}

builtin::debug_scope: singleton{
	op_call{
		return this;
	}

	block_first{
		enable_debug();
		return this;
	}

	block_next{
		disable_debug();
		return null;
	}

	block_break{
		disable_debug();
		return null;
	}
}

builtin::chain: fun(first, ...){
	first.chain(...);
}

	),
"\x78\x74\x61\x6c\x01\x00\x00\x00\x00\x00\x01\x3a\x6c\x00\x01\x30\x00\x02\x00\x79\x00\x01\x00\x2d\x4a\x00\x00\x05\x74\x22\x00\x1b\x01\x2a\x00\x01\x1b\x00\x2f\x01\x00\x01\x00\x00\x05\x2a\x00\x02\x2e\x02\x00\x01\x00\x6c\x00\x06\x30\x00\x07\x00\x2e\x01\x00\x00"
"\x00\x27\x00\x31\x00\x07\x00\x6c\x00\x01\x79\x00\x02\x00\x0f\x0b\x6c\x00\x08\x2f\x00\x00\x01\x03\x00\x09\x27\x00\x31\x00\x09\x00\x6c\x00\x01\x79\x00\x03\x00\x0f\x0b\x6c\x00\x08\x2f\x00\x00\x01\x03\x00\x0a\x27\x00\x31\x00\x0a\x00\x6c\x00\x01\x79\x00\x04\x00"
"\x11\x1b\x00\x0b\x6c\x00\x08\x2f\x01\x00\x01\x03\x00\x0c\x27\x00\x31\x00\x0c\x00\x6c\x00\x01\x79\x00\x05\x00\x1e\x33\x00\x05\x1b\x01\x6c\x00\x0f\x2e\x01\x00\x01\x00\x22\x00\x0b\x1b\x00\x2e\x00\x00\x01\x03\x35\x00\x05\x27\x00\x31\x00\x10\x00\x6c\x00\x01\x71"
"\x00\x00\x01\x01\x73\x00\x04\x00\x16\x00\x79\x00\x06\x00\x07\x0c\x27\x01\x27\x00\x01\x73\x00\x03\x00\x17\x00\x79\x00\x07\x00\x0f\x6c\x00\x18\x2e\x00\x00\x00\x00\x0c\x27\x01\x27\x00\x01\x73\x00\x02\x00\x19\x00\x79\x00\x08\x00\x0f\x6c\x00\x1a\x2e\x00\x00\x00"
"\x00\x01\x27\x01\x27\x00\x01\x73\x00\x01\x00\x1b\x00\x79\x00\x09\x00\x0f\x6c\x00\x1a\x2e\x00\x00\x00\x00\x01\x27\x01\x27\x00\x01\x73\x00\x00\x00\x1c\x00\x72\x31\x00\x1d\x00\x6c\x00\x01\x79\x00\x0a\x00\x0e\x0b\x1b\x00\x2f\x00\x00\x00\x02\x00\x1f\x27\x00\x31"
"\x00\x1f\x00\x27\x00\x7b\x00\x0b\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x62\x00\x13\x00\x00\x00\x00\x01\x05\x00\x00\x00\x12\x00\x43\x00\x00\x00\x00\x00\x08\x00\x00\x00\x12\x00\x5c\x00\x00\x00\x00\x00\x0a\x00\x00\x00\x12\x00\x75\x00\x00\x00\x00\x01\x0c\x00"
"\x00\x00\x12\x00\x90\x00\x00\x00\x00\x01\x0e\x00\x01\x00\x12\x00\xc3\x00\x00\x00\x00\x00\x17\x00\x00\x00\x12\x00\xd4\x00\x00\x00\x00\x00\x18\x00\x00\x00\x12\x00\xed\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x12\x00\x06\x01\x00\x00\x00\x00\x1c\x00\x00\x00\x12\x00"
"\x27\x01\x00\x00\x00\x01\x1f\x00\x00\x00\x12\x00\x00\x01\xb3\x00\x00\x00\x02\x00\x11\x00\x05\x00\xcc\xcc\x00\x00\x11\x00\x00\xcc\xcc\xcc\x00\x0b\x00\x00\x00\x00\x03\x06\x00\x00\x00\x00\xcc\xcc\x00\x01\x00\x00\x0c\x00\x00\x00\x05\x00\x03\x00\x02\x00\x00\x00"
"\x00\x01\x01\x02\x43\x00\x00\x00\x03\x02\x08\x00\x00\x00\x00\x00\x00\x01\x00\x00\x5c\x00\x00\x00\x03\x02\x0a\x00\x00\x00\x00\x00\x00\x01\x00\x00\x75\x00\x00\x00\x03\x02\x0b\x00\x01\x00\x00\x00\x00\x01\x01\x01\x90\x00\x00\x00\x03\x02\x0d\x00\x01\x00\x00\x00"
"\x00\x01\x01\x01\xc3\x00\x00\x00\x05\x00\x17\x00\x00\x00\x00\x00\x00\x01\x00\x00\xd4\x00\x00\x00\x05\x00\x18\x00\x00\x00\x00\x00\x00\x01\x00\x00\xed\x00\x00\x00\x05\x00\x1a\x00\x00\x00\x00\x00\x00\x01\x00\x00\x06\x01\x00\x00\x05\x00\x1c\x00\x00\x00\x00\x00"
"\x00\x01\x00\x00\x27\x01\x00\x00\x03\x02\x1e\x00\x01\x00\x00\x00\x00\x01\x01\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x36\x00\x00\x00\x00\x30\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x07\x00\x00\x00"
"\x04\x00\x00\x00\x10\x00\x00\x00\x02\x00\x00\x00\x13\x00\x00\x00\x04\x00\x00\x00\x13\x00\x00\x00\x03\x00\x00\x00\x35\x00\x00\x00\x04\x00\x00\x00\x3b\x00\x00\x00\x08\x00\x00\x00\x3b\x00\x00\x00\x06\x00\x00\x00\x3e\x00\x00\x00\x08\x00\x00\x00\x43\x00\x00\x00"
"\x07\x00\x00\x00\x4e\x00\x00\x00\x08\x00\x00\x00\x54\x00\x00\x00\x0c\x00\x00\x00\x54\x00\x00\x00\x0a\x00\x00\x00\x57\x00\x00\x00\x0c\x00\x00\x00\x5c\x00\x00\x00\x0b\x00\x00\x00\x67\x00\x00\x00\x0c\x00\x00\x00\x6d\x00\x00\x00\x10\x00\x00\x00\x6d\x00\x00\x00"
"\x0e\x00\x00\x00\x70\x00\x00\x00\x10\x00\x00\x00\x75\x00\x00\x00\x0f\x00\x00\x00\x82\x00\x00\x00\x10\x00\x00\x00\x88\x00\x00\x00\x15\x00\x00\x00\x88\x00\x00\x00\x12\x00\x00\x00\x8b\x00\x00\x00\x15\x00\x00\x00\x93\x00\x00\x00\x13\x00\x00\x00\x9f\x00\x00\x00"
"\x14\x00\x00\x00\xaa\x00\x00\x00\x15\x00\x00\x00\xb0\x00\x00\x00\x2a\x00\x00\x00\xb0\x00\x00\x00\x17\x00\x00\x00\xb3\x00\x00\x00\x2a\x00\x00\x00\xbe\x00\x00\x00\x1a\x00\x00\x00\xc3\x00\x00\x00\x19\x00\x00\x00\xc6\x00\x00\x00\x1a\x00\x00\x00\xcf\x00\x00\x00"
"\x1f\x00\x00\x00\xd4\x00\x00\x00\x1d\x00\x00\x00\xdc\x00\x00\x00\x1e\x00\x00\x00\xdf\x00\x00\x00\x1f\x00\x00\x00\xe8\x00\x00\x00\x24\x00\x00\x00\xed\x00\x00\x00\x22\x00\x00\x00\xf5\x00\x00\x00\x23\x00\x00\x00\xf8\x00\x00\x00\x24\x00\x00\x00\x01\x01\x00\x00"
"\x29\x00\x00\x00\x06\x01\x00\x00\x27\x00\x00\x00\x0e\x01\x00\x00\x28\x00\x00\x00\x11\x01\x00\x00\x29\x00\x00\x00\x1b\x01\x00\x00\x2a\x00\x00\x00\x1f\x01\x00\x00\x2e\x00\x00\x00\x1f\x01\x00\x00\x2c\x00\x00\x00\x22\x01\x00\x00\x2e\x00\x00\x00\x27\x01\x00\x00"
"\x2d\x00\x00\x00\x31\x01\x00\x00\x2e\x00\x00\x00\x37\x01\x00\x00\x30\x00\x00\x00\x00\x01\x2a\x00\x00\x00\x03\x27\x00\x00\x00\x06\x73\x6f\x75\x72\x63\x65\x26\x00\x00\x00\x11\x74\x6f\x6f\x6c\x2f\x74\x65\x6d\x70\x2f\x69\x6e\x2e\x78\x74\x61\x6c\x27\x00\x00\x00"
"\x0b\x69\x64\x65\x6e\x74\x69\x66\x69\x65\x72\x73\x28\x00\x00\x00\x20\x27\x00\x00\x00\x00\x27\x00\x00\x00\x07\x62\x75\x69\x6c\x74\x69\x6e\x27\x00\x00\x00\x0c\x43\x6f\x6d\x70\x69\x6c\x65\x45\x72\x72\x6f\x72\x27\x00\x00\x00\x07\x6d\x65\x73\x73\x61\x67\x65\x27"
"\x00\x00\x00\x06\x65\x72\x72\x6f\x72\x73\x27\x00\x00\x00\x04\x6a\x6f\x69\x6e\x27\x00\x00\x00\x09\x45\x78\x63\x65\x70\x74\x69\x6f\x6e\x27\x00\x00\x00\x0a\x69\x6e\x69\x74\x69\x61\x6c\x69\x7a\x65\x27\x00\x00\x00\x06\x73\x74\x64\x6f\x75\x74\x27\x00\x00\x00\x05"
"\x70\x72\x69\x6e\x74\x27\x00\x00\x00\x07\x70\x72\x69\x6e\x74\x6c\x6e\x27\x00\x00\x00\x0d\x66\x6f\x72\x6d\x61\x74\x5f\x73\x74\x72\x69\x6e\x67\x27\x00\x00\x00\x06\x70\x72\x69\x6e\x74\x66\x27\x00\x00\x00\x09\x66\x69\x6c\x65\x5f\x6e\x61\x6d\x65\x27\x00\x00\x00"
"\x04\x63\x6f\x64\x65\x27\x00\x00\x00\x0c\x63\x6f\x6d\x70\x69\x6c\x65\x5f\x66\x69\x6c\x65\x27\x00\x00\x00\x04\x6c\x6f\x61\x64\x27\x00\x00\x00\x0f\x61\x75\x74\x6f\x5f\x69\x6e\x69\x74\x69\x61\x6c\x69\x7a\x65\x27\x00\x00\x00\x07\x6f\x70\x5f\x63\x61\x6c\x6c\x27"
"\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x66\x69\x72\x73\x74\x27\x00\x00\x00\x0a\x62\x6c\x6f\x63\x6b\x5f\x6e\x65\x78\x74\x27\x00\x00\x00\x0b\x62\x6c\x6f\x63\x6b\x5f\x62\x72\x65\x61\x6b\x03\x00\x00\x00\x17\x03\x00\x00\x00\x18\x27\x00\x00\x00\x0c\x65\x6e\x61"
"\x62\x6c\x65\x5f\x64\x65\x62\x75\x67\x03\x00\x00\x00\x19\x27\x00\x00\x00\x0d\x64\x69\x73\x61\x62\x6c\x65\x5f\x64\x65\x62\x75\x67\x03\x00\x00\x00\x1a\x03\x00\x00\x00\x1b\x27\x00\x00\x00\x0b\x64\x65\x62\x75\x67\x5f\x73\x63\x6f\x70\x65\x27\x00\x00\x00\x05\x66"
"\x69\x72\x73\x74\x27\x00\x00\x00\x05\x63\x68\x61\x69\x6e\x27\x00\x00\x00\x06\x76\x61\x6c\x75\x65\x73\x28\x00\x00\x00\x03\x20\x27\x00\x00\x00\x02\x09\x0a\x00\x01\x28\x00\x00\x00\x03\x29\x27\x00\x00\x00\x03\x6c\x69\x62\x29\x20\x20\x29\x03\x00\x00\x00\x07\x29"
"\x20\x20\x29\x27\x00\x00\x00\x06\x46\x6f\x72\x6d\x61\x74\x29\x20\x20\x2a\x00\x00\x00\x02\x01\x28\x00\x00\x00\x03\x29\x03\x00\x00\x00\x28\x29\x20\x20\x29\x03\x00\x00\x00\x07\x29\x20\x20\x29\x27\x00\x00\x00\x03\x41\x6e\x79\x29\x20\x20\x20\x03\x00\x00\x00\x25"
"\x26\x00\x00\x00\x05\x25\x73\x0a\x25\x73"
);

}

}
