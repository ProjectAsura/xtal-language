inherit(lib::test);
inherit(xpeg);

class TestXpeg{

	com#Test{
		assert "a".match(~"b")
		assert !"b".match(~"b")
		assert "awerawer".match(bos >> ~set("()")*0 >> eos)
		assert !"awer(awer".match(bos >> ~set("()")*0 >> eos)
	}

	/*
	balance#Test{
		balance: decl();
		balance.body = "(" >> (~set("()")*0|balance)*0 >> ")";
		pattern: bos >> balance >> eos;
		assert "(())".match(pattern);
		assert !"(()".match(pattern);
	}
	*/

	bos_alpha0_eos#Test{
		pattern: bos >> alpha*0 >> eos;
		assert "ttestt".match(pattern);
		assert "aewrrrrrrrrrrrrrrrrweraweaer".match(pattern);
		assert !"aewrrrrrrrrrr_rrrrrrweraweaer".match(pattern);
	}

	mail#Test{		
		bs: "\\";
		dq: "\"";
		atom: (alpha | degit | set("!#$%&'*+-/=?^_`{|}~"))*1;
		quotedpair: bs >> set(" \\\"");
		quoted: dq >> (atom | set("()<>[]:;@,.") | quotedpair)*0 >> dq;
		dot_atom: atom >> ("." >> atom)*0;
		local: dot_atom | quoted;
		domain: local; // fixme
		mail: bos >> local >> "@" >> domain >> eos;
				    
		ok: [
			"Abc@example.com", 
			"Abc.123@example.com", 
			"user+mailbox/department=shipping@example.com", 
			"!#$%&'*+-/=?^_`.{|}~@example.com", 
			%!"Abc@def"@example.com!, 
			%!"Fred\\ Bloggs"@example.com!, 
			%!"Joe.\\\\Blow"@example.com!, 
		];
		
		ng: [
			"Abc.@example.com",
			"Abc..123@example.com",
			%!ewr"esre"@example.com!,
			"Abc@example.com.", 
		];
		
		ok.each{
			assert it.match(mail), it;
		}
		
		ng.each{
			assert !it.match(mail), it;
		}
	}
}
