{
	n : 0;
	10.times{ |v|
		n += v;
	}
	assert n==45, %f(n==%d)(n);
}


{
	ret : range(5, 10)[].each.collect(|x| x*2).join(",");
	assert ret=="10,12,14,16,18";
}

{
	ret : [5, 8, 7, 3, 2].each.select(|x| x%2 != 0).join(",");
	assert ret=="5,7,3";
}

{
	str : "";
	[5, 8, 7, 3, 2]{ str ~= it.to_s; }
	assert str=="58732";
}


{
	n : 0;
	outer : 10.times{
		20.times{
			n++;
			break outer;
		}
	}
	assert n==1;
}

{
	foo: fun(iter, fn){
		try{
			iter{
				return fn(it);
			}
		}finally{
	
		}
	}
	
	assert foo(100.times, |x|x+5)==5;
	assert foo([5, 2, 8], |x|x*2)==10;
}

{
	assert [5, 7, 66, 8, 2].with_index.find(|x|x[1]>10)[1]==66;
}

{
	assert [5, 7, 66, 8, 2].with_index.find(|x,dummy|x==2)[1]==66;
}


