

Foo: class{
	+ _pub: 100;
	# _pro: 200;
	- _pri: 300;
	
	hoge: 555;
	
	foo: fun hoge;
}

Bar: class(Foo){
	
	bar: method{
		return this.pro;
	}
	
	- hoge: 1111;
}

Singleton: singleton{
	bar : fun(){
		return "aaa";
	}
}

{
	a: Foo();
	assert a.pub==100;
	
	a.pub = 10;
	assert a.pub==10;
	
	a.pub += 10;
	assert a.pub==20;
	
	temp: null;
	
	try{
		a.pro = 10;
	}catch(e){
		temp = "pro";
	}
	assert temp=="pro";
	
	
	b: Bar();
	assert b.pub==100;
	
	Bar::pub: method(){ return 200; }
	assert b.pub==200;
	
	try{
		b.pro = 10;
	}catch(e){
		temp = "pro";
	}
	assert temp=="pro";
	
	assert b.bar==200;
	
	Bar::pro: method(){ return 200; }
	assert b.pro==200;
	
	assert Bar::hoge==555;
	assert Bar::foo()==555;
	
	assert Bar::hoge==555;
	
	assert Singleton.class===Singleton;
	assert Singleton::bar()=="aaa";
	assert Singleton.bar=="aaa";
}


